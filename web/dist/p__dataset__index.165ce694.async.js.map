{"version":3,"file":"p__dataset__index.165ce694.async.js","mappings":"6JAGO,SAASA,IACd,IAAAC,GAAsCC,EAAAA,EAAAA,UAAsB,CAAC,GAAEC,EAAAC,IAAAH,EAAA,GAAxDI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAE5BI,GAAmCC,EAAAA,EAAAA,cAAY,SAACC,GACpDH,EAAeG,EACjB,GAAG,IAEH,MAAO,CAAEJ,YAAAA,EAAaC,eAAAA,EAAgBC,mBAAAA,EACxC,C,6FCFO,SAASG,EAAUC,GAA8C,IAA3CC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAOC,EAAQH,EAARG,SACxC,OACEC,EAAAA,EAAAA,MAAA,UAAQC,UAAU,kDAAiDF,SAAA,EACjEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBF,SAAA,EACjCG,EAAAA,EAAAA,KAAA,OAAKD,UAAU,mCAAkCF,UAC/CG,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,QAAQ,QAAQC,KAAK,OAAOC,QAAST,EAAKE,UAChDG,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACN,UAAU,iBAGzBC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,MAAKF,UAClBG,EAAAA,EAAAA,KAAA,MAAID,UAAU,wCAAuCF,SAAED,SAG1DC,IAGP,C,qMCnBMS,EAAS,CACb,CAAEC,KAAM,UAAWC,GAAI,WACvB,CAAED,KAAM,UAAWC,GAAI,WACvB,CAAED,KAAM,UAAWC,GAAI,WACvB,CAAED,KAAM,UAAWC,GAAI,YAGZC,GAAgBC,EAAAA,EAAAA,aAO3B,SAAAhB,EAA0DiB,GAAQ,IAA/DC,EAAIlB,EAAJkB,KAAMC,EAAMnB,EAANmB,OAAMC,EAAApB,EAAEqB,SAAAA,OAAQ,IAAAD,GAAQA,EAAEf,EAASL,EAATK,UAAciB,EAAKC,IAAAvB,EAAAwB,GAChDC,GAAQC,EAAAA,EAAAA,QAAO,EAAG,GACxBC,QAAQC,IAAI,cAAeH,GAC3B,IAAM3B,EAAQc,EAAOa,GACrB,OACErB,EAAAA,EAAAA,MAACyB,EAAAA,GAAMC,IAAAA,IAAA,CACLb,IAAKA,GACDK,GAAK,IACTjB,WAAW0B,EAAAA,EAAAA,IAAG1B,EAAW,CAAE,cAAegB,IAAYlB,SAAA,EAEtDG,EAAAA,EAAAA,KAAC0B,EAAAA,GAAW,CAACC,IAAKd,KAClBb,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,CACb7B,WAAW0B,EAAAA,EAAAA,IAAG,0BAADI,OACerC,EAAMe,KAAI,UAAAsB,OAASrC,EAAMgB,GAAE,KACrD,CAAE,cAAeO,IACjBlB,SAEDe,aAAI,EAAJA,EAAMkB,MAAM,EAAG,QAIxB,IAEArB,EAAcsB,YAAc,e,gMC3Cfb,EAAA,cAAAc,EAAA,cAAAC,EAAA,cAOPV,EAASW,EAAAA,YAGb,SAAAxC,EAA0BiB,GAAG,IAA1BZ,EAASL,EAATK,UAAciB,EAAKC,IAAAvB,EAAAwB,GAAA,OACtBlB,EAAAA,EAAAA,KAACmC,EAAAA,GAAoBX,IAAA,CACnBb,IAAKA,EACLZ,WAAW0B,EAAAA,EAAAA,IACT,gEACA1B,IAEEiB,GACJ,IAEJO,EAAOQ,YAAcI,EAAAA,GAAqBJ,YAE1C,IAAML,EAAcQ,EAAAA,YAGlB,SAAAE,EAA0BzB,GAAG,IAA1BZ,EAASqC,EAATrC,UAAciB,EAAKC,IAAAmB,EAAAJ,GAAA,OACtBhC,EAAAA,EAAAA,KAACmC,EAAAA,GAAqBX,IAAA,CACpBb,IAAKA,EACLZ,WAAW0B,EAAAA,EAAAA,IAAG,8BAA+B1B,IACzCiB,GACJ,IAEJU,EAAYK,YAAcI,EAAAA,GAAsBJ,YAEhD,IAAMH,EAAiBM,EAAAA,YAGrB,SAAAG,EAA0B1B,GAAG,IAA1BZ,EAASsC,EAATtC,UAAciB,EAAKC,IAAAoB,EAAAJ,GAAA,OACtBjC,EAAAA,EAAAA,KAACmC,EAAAA,GAAwBX,IAAA,CACvBb,IAAKA,EACLZ,WAAW0B,EAAAA,EAAAA,IACT,uEACA1B,IAEEiB,GACJ,IAEJY,EAAeG,YAAcI,EAAAA,GAAyBJ,W,wJC3C1CO,EAAc,SAAdA,GAAc,OAAdA,EAAc,0BAAdA,CAAc,MAIbC,EAAkB,WAC7B,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAuBC,EAAAA,EAAAA,MAAhBC,EAAiCzD,IAAAuD,EAAA,GAArB,GACXG,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAwBxD,EAAAA,EAAAA,cAAY,WACxCiD,EAASQ,EAAAA,EAAOC,SAClB,GAAG,CAACT,IAEEU,GAAoB3D,EAAAA,EAAAA,cACxB,SAACsD,GAAU,OAAK,WACdL,EAAS,GAADX,OAAImB,EAAAA,EAAOG,QAAO,KAAAtB,OAAIgB,GAChC,CAAC,GACD,CAACL,IAGGY,GAAiB7D,EAAAA,EAAAA,cAAY,WACjCiD,EAASQ,EAAAA,EAAOK,KAClB,GAAG,CAACb,IAEEc,GAAoB/D,EAAAA,EAAAA,cAAY,WACpCiD,EAASQ,EAAAA,EAAOO,eAClB,GAAG,CAACf,IAEEgB,GAAqBjE,EAAAA,EAAAA,cAAY,WACrCiD,EAASQ,EAAAA,EAAOS,MAClB,GAAG,CAACjB,IAEEkB,GAAiBnE,EAAAA,EAAAA,cAAY,WACjCiD,EAASQ,EAAAA,EAAOW,KAClB,GAAG,CAACnB,IAEEoB,GAAsBrE,EAAAA,EAAAA,cAAY,WACtCiD,EAASQ,EAAAA,EAAOa,OAClB,GAAG,CAACrB,IAEEsB,GAAkBvE,EAAAA,EAAAA,cACtB,SAACsD,GAAU,OAAK,WACdL,EAAS,GAADX,OAAImB,EAAAA,EAAOe,MAAK,KAAAlC,OAAIgB,GAC9B,CAAC,GACD,CAACL,IAGGwB,GAA2BzE,EAAAA,EAAAA,cAAY,WAC3CiD,EAASQ,EAAAA,EAAOiB,eAClB,GAAG,CAACzB,IAEE0B,GAAuB3E,EAAAA,EAAAA,cAAY,WACvCiD,EAASQ,EAAAA,EAAOmB,SAClB,GAAG,CAAC3B,IAEE4B,GAAmB7E,EAAAA,EAAAA,cAAY,WACnCiD,EAASQ,EAAAA,EAAOqB,OAClB,GAAG,CAAC7B,IAEE8B,GAA8B/E,EAAAA,EAAAA,cAClC,SAACsD,EAAY0B,GAAoB,OAAK,WACpC/B,EACE,GAAAX,OACGmB,EAAAA,EAAOwB,aAAY,eAAA3C,OAAc0C,EAAW,YAAA1C,OAAWgB,GAE9D,CAAC,GACD,CAACL,IAGGiC,GAAiBlF,EAAAA,EAAAA,cACrB,SAACmF,GACC,IAAMC,EAAcC,IAAA,GACjBtC,EAAeuC,YAAcjC,EAAakC,IACzCxC,EAAeuC,cAGnB,OAAIH,EACKC,EAAeD,GAEjBC,CACT,GACA,CAAC/B,IAGGmC,GAAkBxF,EAAAA,EAAAA,cACtB,SAACyF,GACCxC,EAAS,GAADX,OACHmD,EAAK,KAAAnD,OAAIgB,EAAE,KAAAhB,OAAIS,EAAeuC,YAAW,KAAAhD,OAAI4C,EAAenC,EAAeuC,cAElF,GACA,CAACJ,EAAgB5B,EAAIL,IAGjByC,GAAkB1F,EAAAA,EAAAA,cACtB,SAAC2F,GACC1C,EAAS,GAADX,OAAImB,EAAAA,EAAOmC,MAAK,cAAAtD,OAAaqD,GACvC,GACA,CAAC1C,IAGH,MAAO,CACLO,sBAAAA,EACAG,kBAAAA,EACAE,eAAAA,EACAE,kBAAAA,EACAE,mBAAAA,EACAE,eAAAA,EACAY,4BAAAA,EACAG,eAAAA,EACAM,gBAAAA,EACAnB,oBAAAA,EACAE,gBAAAA,EACAE,yBAAAA,EACAE,qBAAAA,EACAE,iBAAAA,EACAa,gBAAAA,EAEJ,C,0XCtGkBG,EAAkB,gBAAlBA,EAAkB,2BAAlBA,EAAkB,kBAAlBA,EAAkB,kBAAlBA,EAAkB,gBAAlBA,EAAkB,uBASvBC,EAAqB,WAGhC,OAFevC,EAAAA,EAAAA,MAAPD,EAGV,EAEayC,EAAmB,WAC9B,IAoCSC,EApCHC,EAAkBH,IACxBrG,GAA4BC,EAAAA,EAAAA,YAAqCC,EAAAC,IAAAH,EAAA,GAA1DyG,EAAMvG,EAAA,GAAEwG,EAASxG,EAAA,GAClByG,GAAaC,EAAAA,EAAAA,SAAO,GAC1BC,GAA4C9G,EAAAA,EAAAA,KAApCK,EAAWyG,EAAXzG,YAAaE,EAAkBuG,EAAlBvG,mBAErBwG,GAAwB7G,EAAAA,EAAAA,UAAS,GAAE8G,EAAA5G,IAAA2G,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAgCjH,EAAAA,EAAAA,UAAS,IAAGkH,EAAAhH,IAAA+G,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAqB/G,EAAAA,EAAAA,cAAY,SAACyG,EAAcI,GACpDH,EAAQD,GACRK,EAAYD,EACd,GAAG,IAEGG,GAAcC,EAAAA,EAAAA,UAAQ,WAC1B,OAAAhF,IAAAA,IAAA,GACKiE,GAAM,IACTgB,OAAOhB,aAAM,EAANA,EAAQgB,QAASjB,EACxBQ,KAAAA,EACA7F,KAAMiG,EACNM,QAAStH,EAAYsH,SAEzB,GAAG,CAACtH,EAAaoG,EAAiBQ,EAAMI,EAAUX,IAElDkB,GAIIC,EAAAA,EAAAA,GAA6B,CAC/BC,SAAU,CAACzB,EAAkCmB,EAAaP,EAAMI,GAChEU,YAAa,CACXC,OAAQ,GACRC,SAAU,GACVC,MAAO,GAETC,SAAS,EACTC,OAAQ,EACRC,SAAO7B,EAAA8B,IAAAC,MAAAC,MAAE,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,MAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACgBC,EAAAA,GAAUC,eAAe1B,GAAY,OAAhD,OAAgDmB,EAAAG,EAAAK,KAApDP,EAAID,EAAJC,KAAIE,EAAAM,OAAA,SACK,QADLV,EACLE,aAAI,EAAJA,EAAMA,YAAI,IAAAF,EAAAA,EAAI,CAAC,GAAC,wBAAAI,EAAAO,OAAA,GAAAZ,EAAA,KACxB,kBAAAjC,EAAA8C,MAAA,KAAAC,UAAA,KAfDX,EAAIhB,EAAJgB,KACYY,EAAO5B,EAAnB6B,WACAC,EAAO9B,EAAP8B,QAuBF,OAPAC,EAAAA,EAAAA,YAAU,WACJ/C,EAAWgD,SACbF,IAEF9C,EAAWgD,SAAU,CACvB,GAAG,CAAC3C,EAAMI,EAAUqC,EAASrJ,IAEtB,CACLuI,KAAAA,EACAY,QAAAA,EACA7C,UAAAA,EACA+C,QAAAA,EACAnC,mBAAAA,EACAN,KAAAA,EACAI,SAAAA,EACA9G,mBAAAA,EACAF,YAAAA,EAEJ,EAEawJ,EAAkC,WAC7C,IAmBSC,EAnBTC,GAA4CC,EAAAA,EAAAA,MAApCC,EAAYF,EAAZE,aAAcC,EAAiBH,EAAjBG,kBACtBC,GAAsCC,EAAAA,EAAAA,MAA9BC,EAAUF,EAAVE,WAAYC,EAAaH,EAAbG,cACdC,GAAwBC,EAAAA,EAAAA,GAAYP,EAAc,CAAEQ,KAAM,MAChEC,GAA4C1K,EAAAA,EAAAA,KAApCK,EAAWqK,EAAXrK,YAAaE,EAAkBmK,EAAlBnK,mBAErBoK,GAAsC9C,EAAAA,EAAAA,GAA2B,CAC/DC,SAAU,CACRzB,EAA2C5D,IAAAA,IAAA,CAEzC8H,sBAAAA,GACGF,GAAU,IACbhK,YAAAA,KAGJ0H,YAAa,CACX6C,IAAK,GACL1C,MAAO,GAETE,OAAQ,EACRC,SAAOyB,EAAAxB,IAAAC,MAAAC,MAAE,SAAAqC,IAAA,IAAAC,EAAAlC,EAAA,OAAAL,MAAAM,MAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,GACgBgC,EAAAA,EAAAA,IACrB,CACEC,SAAUV,EACVW,UAAWb,EAAWhD,SACtBJ,KAAMoD,EAAWT,SAEnB,CACEuB,UAAW9K,EAAY+K,QAE1B,OATW,OASXN,EAAAC,EAAA5B,KATOP,EAAIkC,EAAJlC,KAAImC,EAAA3B,OAAA,SAWLR,aAAI,EAAJA,EAAMA,MAAI,wBAAAmC,EAAA1B,OAAA,GAAAwB,EAAA,KAClB,kBAAAf,EAAAR,MAAA,KAAAC,UAAA,KA3BKX,EAAI+B,EAAJ/B,KAAkBY,EAAOmB,EAAnBlB,WA8BR4B,GAA4D7K,EAAAA,EAAAA,cAChE,SAAC8K,GAECpB,EAAkBoB,EACpB,GACA,CAACpB,IAGH,OAAAzH,IAAAA,IAAA,GACKmG,GAAI,IACPqB,aAAAA,EACAC,kBAAmBmB,EACnBhB,WAAU5H,IAAAA,IAAA,GAAO4H,GAAU,IAAEnC,MAAOU,aAAI,EAAJA,EAAMV,QAC1CoC,cAAAA,EACAd,QAAAA,EACAnJ,YAAAA,EACAE,mBAAAA,GAEJ,EAEagL,EAAqB,WAChC,IAOYC,EAPNC,GAAcC,EAAAA,EAAAA,MACpBC,GAIIC,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAACxF,GACdyF,YAAUN,EAAAlD,IAAAC,MAAAC,MAAE,SAAAuD,EAAOC,GAAqC,IAAAC,EAAAC,EAAAtD,EAAA,OAAAL,MAAAM,MAAA,SAAAsD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,cAAAmD,EAAAnD,KAAA,EAC1BC,EAAAA,GAAUmD,SAASJ,GAAO,OAMrD,OANqDC,EAAAE,EAAAhD,KAAA+C,EAAAD,EAA9CrD,KACU,KADVA,OAAI,IAAAsD,EAAG,CAAC,EAACA,GACRG,OACPC,EAAAA,GAAQC,QACNC,EAAAA,EAAKC,EAAE,WAAD3J,OAAYkJ,SAAAA,EAAQlI,GAAK,WAAa,aAE9C2H,EAAYiB,kBAAkB,CAAE5E,SAAU,CAAC,yBAC5CqE,EAAA/C,OAAA,SACMR,GAAI,wBAAAuD,EAAA9C,OAAA,GAAA0C,EAAA,KACZ,SAAAY,GAAA,OAAAnB,EAAAlC,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEX,KAjBH+C,EAAJ/C,KAiBaY,QAhBKmC,EAAlBiB,UAgBsBC,gBAfXlB,EAAXmB,YAgBJ,EAEaC,EAAqB,WAChC,IAOYC,EAPNvB,GAAcC,EAAAA,EAAAA,MACpBuB,GAIIrB,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAACxF,GACdyF,YAAUkB,EAAA1E,IAAAC,MAAAC,MAAE,SAAA0E,EAAOpJ,GAAU,IAAAqJ,EAAAC,EAAAxE,EAAA,OAAAL,MAAAM,MAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,cAAAqE,EAAArE,KAAA,EACJC,EAAAA,GAAUqE,KAAK,CAAE5F,MAAO5D,IAAK,OAMnD,OANmDsJ,EAAAC,EAAAlE,KAClC,KADVP,EAAIwE,EAAJxE,MACCyD,OACPC,EAAAA,GAAQC,QAAQC,EAAAA,EAAKC,EAAE,oBACvBhB,EAAYiB,kBAAkB,CAC5B5E,SAAU,CAACzB,MAEdgH,EAAAjE,OAAA,SACgB,QADhB+D,EACMvE,aAAI,EAAJA,EAAMA,YAAI,IAAAuE,EAAAA,EAAI,IAAE,wBAAAE,EAAAhE,OAAA,GAAA6D,EAAA,KACxB,SAAAK,GAAA,OAAAP,EAAA1D,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEX,KAjBHqE,EAAJrE,KAiBaY,QAhBKyD,EAAlBL,UAgBsBY,gBAfXP,EAAXH,YAgBJ,EAEaW,EAAqB,WAA6B,IASjDC,EATqBC,EAAepE,UAAAqE,OAAA,QAAAC,IAAAtE,UAAA,IAAAA,UAAA,GAC1C9C,EAAkBH,IAClBmF,GAAcC,EAAAA,EAAAA,MACpBoC,GAIIlC,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAACxF,GACdyF,YAAU4B,EAAApF,IAAAC,MAAAC,MAAE,SAAAuF,EAAO/B,GAA2B,IAAAgC,EAAAC,EAAArF,EAAA,OAAAL,MAAAM,MAAA,SAAAqF,GAAA,cAAAA,EAAAnF,KAAAmF,EAAAlF,MAAA,cAAAkF,EAAAlF,KAAA,EAChBC,EAAAA,GAAUkF,SAAQ1L,IAAC,CAC7CiF,MAAOsE,SAAAA,EAAQtE,MAAQsE,aAAM,EAANA,EAAQtE,MAAQjB,GACpCuF,IACH,OAUD,OAVCgC,EAAAE,EAAA/E,KAAA8E,EAAAD,EAHMpF,KAIU,KAJVA,OAAI,IAAAqF,EAAG,CAAC,EAACA,GAIR5B,OACPC,EAAAA,GAAQC,QAAQC,EAAAA,EAAKC,EAAE,oBACnBkB,EACFlC,EAAYiB,kBAAkB,CAC5B5E,SAAU,CAACzB,KAGboF,EAAYiB,kBAAkB,CAAE5E,SAAU,CAAC,2BAE9CoG,EAAA9E,OAAA,SACMR,GAAI,wBAAAsF,EAAA7E,OAAA,GAAA0E,EAAA,KACZ,SAAAK,GAAA,OAAAV,EAAApE,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEX,KAxBHkF,EAAJlF,KAwBaY,QAvBKsE,EAAlBlB,UAuBsByB,2BAtBXP,EAAXhB,YAuBJ,EAEawB,EAAqC,SAACC,GACjD,IAAQzK,GAAOC,EAAAA,EAAAA,MAAPD,GAEJgE,EAA4C,CAC9CzB,GAE0B,iBAAjBkI,IACTzG,EAAW,CAACzB,EAAyCkI,IAGvD,IAISC,EAJTC,GAAsC5G,EAAAA,EAAAA,GAAqB,CACzDC,SAAAA,EACAC,YAAa,CAAC,EACdK,OAAQ,EACRC,SAAOmG,EAAAlG,IAAAC,MAAAC,MAAE,SAAAkG,IAAA,IAAAC,EAAAC,EAAAhG,EAAA,OAAAL,MAAAM,MAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,cAAA6F,EAAA7F,KAAA,EACgBC,EAAAA,GAAU6F,cAAc,CAC7CpH,MAAO5D,IACP,OAFU,OAEV8K,EAAAC,EAAA1F,KAFMP,EAAIgG,EAAJhG,KAAIiG,EAAAzF,OAAA,SAGK,QAHLuF,EAGL/F,aAAI,EAAJA,EAAMA,YAAI,IAAA+F,EAAAA,EAAI,CAAC,GAAC,wBAAAE,EAAAxF,OAAA,GAAAqF,EAAA,KACxB,kBAAAF,EAAAlF,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEX,KAZG6F,EAAJ7F,KAYOY,QAZkBiF,EAAnBhF,WAahB,C,2OCzPasF,EAAqB,WAChC,IAAMtL,GAAWC,EAAAA,EAAAA,MACTI,GAAOC,EAAAA,EAAAA,MAAPD,GASR,MAAO,CAAEkL,iBAPexO,EAAAA,EAAAA,cACtB,SAACyO,GAAW,OAAK,WACfxL,EAAS,GAADX,OAAImB,EAAAA,EAAOiL,aAAWpM,OAAGmM,EAAG,KAAAnM,OAAIgB,GAC1C,CAAC,GACD,CAACA,EAAIL,IAIT,E,WCAO,SAAS0L,EAAOxO,GAA6B,IAA1B4N,EAAY5N,EAAZ4N,aAClBa,GAAWC,EAAAA,EAAAA,MACTL,EAAoBD,IAApBC,gBAEApG,GAAS0F,EAAAA,EAAAA,IAAmCC,GAA5C3F,KACA6D,GAAM6C,EAAAA,EAAAA,MAAN7C,EAEF8C,GAAQ9H,EAAAA,EAAAA,UAAQ,WACpB,MAAO,CACL,CACE+H,KAAMC,EAAAA,EACNC,MAAOjD,EAAE,4BACTwC,IAAKhL,EAAAA,EAAOiL,aAEd,CACEM,KAAMG,EAAAA,EACND,MAAOjD,EAAE,4BACTwC,IAAKhL,EAAAA,EAAO2L,gBAEd,CACEJ,KAAMK,EAAAA,EACNH,MAAOjD,EAAE,kCACTwC,IAAKhL,EAAAA,EAAO6L,gBAGlB,GAAG,CAACrD,IAEJ,OACE1L,EAAAA,EAAAA,MAAA,SAAOC,UAAU,yBAAwBF,SAAA,EACvCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAAyCF,SAAA,EACtDG,EAAAA,EAAAA,KAACS,EAAAA,EAAa,CACZI,OAAQ8G,EAAK9G,OACbD,KAAM+G,EAAK/G,KACXb,UAAU,aAEZD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCF,SAAA,EACrDG,EAAAA,EAAAA,KAAA,MAAID,UAAU,qDAAoDF,SAC/D8H,EAAK/G,QAERd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBF,SAAA,EACnCC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAO8H,EAAKmH,QAAQ,aACpB9O,EAAAA,EAAAA,KAAA,QAAAH,UAAOkP,EAAAA,EAAAA,GAAYpH,EAAKxH,YAE1BL,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,YAASmP,EAAAA,EAAAA,IAAerH,EAAKsH,uBAItCjP,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gCAA+BF,SAC3CyO,EAAMY,KAAI,SAACC,EAAMC,GAChB,IAAMC,EAAS,IAAMlB,IAAagB,EAAKnB,IACvC,OACElO,EAAAA,EAAAA,MAACG,EAAAA,GAAM,CAELC,QAASmP,EAAS,YAAc,QAChCtP,WAAW0B,EAAAA,EAAAA,IACT,6EACA,CACE,qBAAsB4N,EACtB,kBAAmBA,IAGvBjP,QAAS2N,EAAgBoB,EAAKnB,KAAKnO,SAAA,EAEnCG,EAAAA,EAAAA,KAACmP,EAAKZ,KAAI,CAACxO,UAAU,YACrBC,EAAAA,EAAAA,KAAA,QAAAH,SAAOsP,EAAKV,UAZPW,EAeX,QAIR,CClFe,SAASE,IACtB,IAAQvM,GAA0BR,EAAAA,EAAAA,KAA1BQ,sBAER,OACEjD,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACEG,EAAAA,EAAAA,KAACP,EAAAA,EAAU,CACTG,MAAM,kBACND,KAAMoD,KAERjD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaF,SAAA,EAC1BG,EAAAA,EAAAA,KAACkO,EAAO,KACRlO,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAQF,UACrBG,EAAAA,EAAAA,KAACuP,EAAAA,GAAM,WAKjB,C,wDCtBO,IAAKvM,EAAM,SAANA,GAAM,OAANA,EAAM,eAANA,EAAM,aAANA,EAAM,qBAANA,EAAM,uBAANA,EAAAA,EAAM,WAAAnB,OAKHmB,EAAOiL,aAAWpM,OAAGmB,EAAOiL,cAAW,UAL1CjL,EAAM,eAANA,EAAM,kCAANA,EAAM,iBAANA,EAAM,0BAANA,EAAM,sBAANA,EAAM,oBAANA,EAAM,kBAANA,EAAM,eAANA,EAAM,kCAANA,EAAM,0BAANA,EAAM,0BAANA,EAAM,eAANA,EAAM,2BAANA,EAAM,iBAANA,EAAM,6BAANA,EAAM,iBAANA,EAAM,2BAANA,CAAM,MA0JRA,EAAOK,KAKHL,EAAOK,KACF,UAAFxB,OAAYmB,EAAOK,MAK1BL,EAAOC,SAKHD,EAAOC,SACF,UAAFpB,OAAYmB,EAAOC,UAK1BD,EAAOS,MAKHT,EAAOS,MACF,UAAF5B,OAAYmB,EAAOS,OAK1BT,EAAOW,KAEF,UAAF9B,OAAYmB,EAAOS,MAAK,SAG3BT,EAAOmB,SAKHnB,EAAOmB,SACF,UAAFtC,OAAYmB,EAAOmB,UAK1BnB,EAAOqB,OAEF,UAAFxC,OAAYmB,EAAOqB,QAGtBrB,EAAOa,OAKHb,EAAOa,OACF,UAAFhC,OAAYmB,EAAOa,QAK1B,GAAFhC,OAAKmB,EAAOe,MAAK,QAEV,UAAFlC,OAAYmB,EAAOe,OAGtBf,EAAOiB,eAEF,UAAFpC,OAAYmB,EAAOa,QAAMhC,OAAGmB,EAAOiB,gBAGtCjB,EAAOmC,MAKHnC,EAAOmC,MACF,UAAFtD,OAAYmB,EAAOmC,OAK1BnC,EAAOiL,YAGIjL,EAAOiL,YAAuBjL,EAAOG,QAGhDH,EAAOiL,YAEF,UAAFpM,OAAYmB,EAAOiL,aAGlB,GAAFpM,OAAKmB,EAAOG,QAAO,QACZ,UAAFtB,OAAYmB,EAAOG,SAGtB,GAAFtB,OAAKmB,EAAOiL,aAAWpM,OAAGmB,EAAO6L,eAAc,QACxC,UAAFhN,OAAYmB,EAAOiL,aAAWpM,OAAGmB,EAAO6L,gBAG3C,GAAFhN,OAAKmB,EAAOiL,aAAWpM,OAAGmB,EAAO2L,eAAc,QACxC,UAAF9M,OAAYmB,EAAOiL,aAAWpM,OAAGmB,EAAO2L,gBAK/C,GAAF9M,OAAKmB,EAAOwB,aAAY,WAEjB,UAAF3C,OAAYmB,EAAOwM,MAAK,2DAG3BxM,EAAOwM,MAIHxM,EAAOwM,MACF,UAAF3N,OAAYmB,EAAOwM,OAOlB,GAAF3N,OAAKmB,EAAOyM,YAAW,QAChB,UAAF5N,OAAYmB,EAAOwM,MAAK,iBAG3B,GAAF3N,OAAKmB,EAAO0M,WAAU,QACf,UAAF7N,OAAYmB,EAAOwM,MAAK,gBAOnCxM,EAAOwM,MAEF,UAAF3N,OAAYmB,EAAOwM,OAGtBxM,EAAOO,eAEF,UAAF1B,OAAYmB,EAAOO,gBAGlBP,EAAOO,eACH,GAAF1B,OAAKmB,EAAOO,eAAc,YAG5B,GAAF1B,OAAKmB,EAAOO,eAAc,YACnB,UAAF1B,OAAYmB,EAAOO,eAAc,YAGpC,GAAF1B,OAAKmB,EAAOO,eAAc,SACnB,UAAF1B,OAAYmB,EAAOO,eAAc,SAGpC,GAAF1B,OAAKmB,EAAOO,eAAc,SACnB,UAAF1B,OAAYmB,EAAOO,eAAc,SAGpC,GAAF1B,OAAKmB,EAAOO,eAAc,UACnB,UAAF1B,OAAYmB,EAAOO,eAAc,UAGpC,GAAF1B,OAAKmB,EAAOO,eAAc,WACnB,UAAF1B,OAAYmB,EAAOO,eAAc,U,8OC1ThDoM,EA4BEC,EAAAA,EA5BFD,UACAE,EA2BED,EAAAA,EA3BFC,UACAC,EA0BEF,EAAAA,EA1BFE,MACAjC,EAyBE+B,EAAAA,EAzBF/B,cACAkC,EAwBEH,EAAAA,EAxBFG,QACAC,EAuBEJ,EAAAA,EAvBFI,kBACAC,EAsBEL,EAAAA,EAtBFK,uBACAC,EAqBEN,EAAAA,EArBFM,YACAC,EAoBEP,EAAAA,EApBFO,gBACAC,EAmBER,EAAAA,EAnBFQ,gBACAC,EAkBET,EAAAA,EAlBFS,uBACAC,EAiBEV,EAAAA,EAjBFU,oBACAC,EAgBEX,EAAAA,EAhBFW,WACAC,EAeEZ,EAAAA,EAfFY,aACAC,EAcEb,EAAAA,EAdFa,UACAC,EAaEd,EAAAA,EAbFc,UACAC,EAYEf,EAAAA,EAZFe,aACAC,EAWEhB,EAAAA,EAXFgB,SACA3I,EAUE2H,EAAAA,EAVF3H,eACA4I,EASEjB,EAAAA,EATFiB,gBACAC,EAQElB,EAAAA,EARFkB,aACAC,EAOEnB,EAAAA,EAPFmB,gBACAC,EAMEpB,EAAAA,EANFoB,UACAC,EAKErB,EAAAA,EALFqB,gBACAC,EAIEtB,EAAAA,EAJFsB,eACAC,EAGEvB,EAAAA,EAHFuB,iBACAC,EAEExB,EAAAA,EAFFwB,sBAIIC,EAAU,CAEdlG,SAAU,CACRmG,IAAK3B,EACL4B,OAAQ,QAEVrE,SAAU,CACRoE,IAAKzB,EACL0B,OAAQ,QAEVlF,KAAM,CACJiF,IAAKxB,EACLyB,OAAQ,QAEV1D,cAAe,CACbyD,IAAKzD,EACL0D,OAAQ,OAEVC,QAAS,CACPF,IAAKvB,EACLwB,OAAQ,QAGVvB,kBAAmB,CACjBsB,IAAKtB,EACLuB,OAAQ,OAEVtB,uBAAwB,CACtBqB,IAAKrB,EACLsB,OAAQ,QAEVrB,YAAa,CACXoB,IAAKpB,EACLqB,OAAQ,QAEVV,gBAAiB,CACfS,IAAKT,EACLU,OAAQ,QAEVnB,gBAAiB,CACfkB,IAAKlB,EACLmB,OAAQ,QAEVT,aAAc,CACZQ,IAAKR,EACLS,OAAQ,QAEVlB,uBAAwB,CACtBiB,IAAKjB,EACLkB,OAAQ,QAEVjB,oBAAqB,CACnBgB,IAAKhB,EACLiB,OAAQ,OAEVR,gBAAiB,CACfO,IAAKP,EACLQ,OAAQ,QAEVP,UAAW,CACTM,IAAKN,EACLO,OAAQ,QAEVL,eAAgB,CACdI,IAAKJ,EACLK,OAAQ,QAEVE,QAAS,CACPH,IAtEA1B,EAAAA,EADF6B,QAwEEF,OAAQ,QAGVhB,WAAY,CACVe,IAAKf,EACLgB,OAAQ,QAEVf,aAAc,CACZc,IAAKd,EACLe,OAAQ,QAEVd,UAAW,CACTa,IAAKb,EACLc,OAAQ,QAEVb,UAAW,CACTY,IAAKZ,EACLa,OAAQ,OAEVZ,aAAc,CACZW,IAAKX,EACLY,OAAQ,QAEVX,SAAU,CACRU,IAAKV,EACLW,OAAQ,QAEVtJ,eAAgB,CACdqJ,IAAKrJ,EACLsJ,OAAQ,QAEVN,gBAAiB,CACfK,IAAKL,EACLM,OAAQ,OAEVpB,gBAAiB,CACfmB,IAAKnB,EACLoB,OAAQ,UAEVJ,iBAAkB,CAChBG,IAAKH,EACLI,OAAQ,QAEVH,sBAAuB,CACrBE,IAAKF,EACLG,OAAQ,QAINvJ,GAAY0J,EAAAA,EAAAA,GAAqCL,EAASM,EAAAA,IAEnDC,EAAU,SAACrN,GAAmB,OACzCoN,EAAAA,GAAAA,IAAY/B,EAAAA,EAAIgC,QAAQrN,GAAa,EAE1BsN,EAAY,SAACtN,EAAqBuN,GAAc,OAC3DC,EAAAA,EAAAA,IAAKnC,EAAAA,EAAIiC,UAAUtN,GAAc,CAAEuN,KAAAA,GAAO,EAE/BE,EAAY,SACvBzN,EAAmB7E,GAAA,IACjBuS,EAAOvS,EAAPuS,QAASC,EAAKxS,EAALwS,MAAK,OACbH,EAAAA,EAAAA,IAAKnC,EAAAA,EAAIoC,UAAUzN,GAAc,CAAE0N,QAAAA,EAASC,MAAAA,GAAQ,EAElD,SAASC,EAAkB5N,GAChC,OAAOoN,EAAAA,GAAAA,IAAY/B,EAAAA,EAAIuC,kBAAkB5N,GAC3C,CAEO,SAAS6N,EAAqB7N,GACnC,OAAOoN,EAAAA,GAAO,OAAQ/B,EAAAA,EAAIuC,kBAAkB5N,GAC9C,CAEO,IAAMwF,EAAc,SACzBgB,EACAsH,GAAqC,OAClCV,EAAAA,GAAAA,KAAa/B,EAAAA,EAAIG,QAAS,CAAEpI,KAAM0K,GAAQ,CAAC,EAAGtH,OAAAA,GAAS,EAE/CuH,EAAe,SAC1BvH,EACAsH,GAAoC,OACjCV,EAAAA,GAAAA,KAAa/B,EAAAA,EAAII,kBAAmB,CAAErI,KAAM0K,GAAQ,CAAC,EAAGtH,OAAAA,GAAS,EAEtE,M,iIC5LO,SAASwH,EAAWC,GACzB,OAAKA,EAGEC,IAAMD,GAAME,OAAO,uBAFjB,EAGX,CAEO,SAASC,EAAWH,GACzB,OAAKA,EAGEC,IAAMD,GAAME,OAAO,YAFjB,EAGX,CAcO,SAAS1D,EAAewD,GAC7B,OAAKA,EAGEC,IAAMD,GAAME,OAAO,cAFjB,EAGX,C","sources":["webpack:///./src/components/list-filter-bar/use-handle-filter-submit.ts","webpack:///./src/components/page-header.tsx","webpack:///./src/components/ragflow-avatar.tsx","webpack:///./src/components/ui/avatar.tsx","webpack:///./src/hooks/logic-hooks/navigate-hooks.ts","webpack:///./src/hooks/use-knowledge-request.ts","webpack:///./src/pages/dataset/sidebar/hooks.tsx","webpack:///./src/pages/dataset/sidebar/index.tsx","webpack:///./src/pages/dataset/index.tsx","webpack:///./src/routes.ts","webpack:///./src/services/knowledge-service.ts","webpack:///./src/utils/date.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { FilterChange, FilterValue } from './interface';\n\nexport function useHandleFilterSubmit() {\n  const [filterValue, setFilterValue] = useState<FilterValue>({});\n\n  const handleFilterSubmit: FilterChange = useCallback((value) => {\n    setFilterValue(value);\n  }, []);\n\n  return { filterValue, setFilterValue, handleFilterSubmit };\n}\n","import { ArrowLeft } from 'lucide-react';\nimport { PropsWithChildren, ReactNode } from 'react';\nimport { Button } from './ui/button';\n\ninterface IPageHeaderProps extends PropsWithChildren {\n  back(): void;\n  title: ReactNode;\n}\n\nexport function PageHeader({ back, title, children }: IPageHeaderProps) {\n  return (\n    <header className=\"flex justify-between items-center border-b pr-9\">\n      <div className=\"flex items-center \">\n        <div className=\"flex items-center border-r p-1.5\">\n          <Button variant=\"ghost\" size=\"icon\" onClick={back}>\n            <ArrowLeft className=\"w-5 h-5\" />\n          </Button>\n        </div>\n        <div className=\"p-4\">\n          <h1 className=\"text-2xl font-semibold tracking-tight\">{title}</h1>\n        </div>\n      </div>\n      {children}\n    </header>\n  );\n}\n","import { cn } from '@/lib/utils';\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\nimport { random } from 'lodash';\nimport { forwardRef } from 'react';\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar';\n\nconst Colors = [\n  { from: '#4F6DEE', to: '#67BDF9' },\n  { from: '#38A04D', to: '#93DCA2' },\n  { from: '#EDB395', to: '#C35F2B' },\n  { from: '#633897', to: '#CBA1FF' },\n];\n\nexport const RAGFlowAvatar = forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root> & {\n    name?: string;\n    avatar?: string;\n    isPerson?: boolean;\n  }\n>(({ name, avatar, isPerson = false, className, ...props }, ref) => {\n  const index = random(0, 3);\n  console.log('🚀 ~ index:', index);\n  const value = Colors[index];\n  return (\n    <Avatar\n      ref={ref}\n      {...props}\n      className={cn(className, { 'rounded-md': !isPerson })}\n    >\n      <AvatarImage src={avatar} />\n      <AvatarFallback\n        className={cn(\n          `bg-gradient-to-b from-[${value.from}] to-[${value.to}]`,\n          { 'rounded-md': !isPerson },\n        )}\n      >\n        {name?.slice(0, 1)}\n      </AvatarFallback>\n    </Avatar>\n  );\n});\n\nRAGFlowAvatar.displayName = 'RAGFlowAvatar';\n","'use client';\n\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      'relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatar.displayName = AvatarPrimitive.Root.displayName;\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn('aspect-square h-full w-full', className)}\n    {...props}\n  />\n));\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      'flex h-full w-full items-center justify-center rounded-full bg-muted',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\n\nexport { Avatar, AvatarFallback, AvatarImage };\n\ntype AvatarProps = React.ComponentProps<typeof Avatar>;\n\ninterface AvatarGroupProps extends React.ComponentProps<'div'> {\n  children: React.ReactElement<AvatarProps>[];\n  max?: number;\n}\n\nexport const AvatarGroup = ({\n  children,\n  max,\n  className,\n  ...props\n}: AvatarGroupProps) => {\n  const totalAvatars = React.Children.count(children);\n  const displayedAvatars = React.Children.toArray(children)\n    .slice(0, max)\n    .reverse();\n  const remainingAvatars = max ? Math.max(totalAvatars - max, 1) : 0;\n\n  return (\n    <div\n      className={cn('flex items-center flex-row-reverse', className)}\n      {...props}\n    >\n      {remainingAvatars > 0 && (\n        <Avatar className=\"-ml-2 hover:z-10 relative ring-2 ring-background\">\n          <AvatarFallback className=\"bg-muted-foreground text-white\">\n            +{remainingAvatars}\n          </AvatarFallback>\n        </Avatar>\n      )}\n      {displayedAvatars.map((avatar, index) => {\n        if (!React.isValidElement(avatar)) return null;\n\n        return (\n          <div key={index} className=\"-ml-2 hover:z-10 relative\">\n            {React.cloneElement(avatar as React.ReactElement<AvatarProps>, {\n              className: 'ring-2 ring-background',\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import { Routes } from '@/routes';\nimport { useCallback } from 'react';\nimport { useNavigate, useParams, useSearchParams } from 'umi';\n\nexport enum QueryStringMap {\n  KnowledgeId = 'knowledgeId',\n}\n\nexport const useNavigatePage = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const { id } = useParams();\n\n  const navigateToDatasetList = useCallback(() => {\n    navigate(Routes.Datasets);\n  }, [navigate]);\n\n  const navigateToDataset = useCallback(\n    (id: string) => () => {\n      navigate(`${Routes.Dataset}/${id}`);\n    },\n    [navigate],\n  );\n\n  const navigateToHome = useCallback(() => {\n    navigate(Routes.Home);\n  }, [navigate]);\n\n  const navigateToProfile = useCallback(() => {\n    navigate(Routes.ProfileSetting);\n  }, [navigate]);\n\n  const navigateToChatList = useCallback(() => {\n    navigate(Routes.Chats);\n  }, [navigate]);\n\n  const navigateToChat = useCallback(() => {\n    navigate(Routes.Chat);\n  }, [navigate]);\n\n  const navigateToAgentList = useCallback(() => {\n    navigate(Routes.Agents);\n  }, [navigate]);\n\n  const navigateToAgent = useCallback(\n    (id: string) => () => {\n      navigate(`${Routes.Agent}/${id}`);\n    },\n    [navigate],\n  );\n\n  const navigateToAgentTemplates = useCallback(() => {\n    navigate(Routes.AgentTemplates);\n  }, [navigate]);\n\n  const navigateToSearchList = useCallback(() => {\n    navigate(Routes.Searches);\n  }, [navigate]);\n\n  const navigateToSearch = useCallback(() => {\n    navigate(Routes.Search);\n  }, [navigate]);\n\n  const navigateToChunkParsedResult = useCallback(\n    (id: string, knowledgeId?: string) => () => {\n      navigate(\n        // `${Routes.ParsedResult}/${id}?${QueryStringMap.KnowledgeId}=${knowledgeId}`,\n        `${Routes.ParsedResult}/chunks?id=${knowledgeId}&doc_id=${id}`,\n      );\n    },\n    [navigate],\n  );\n\n  const getQueryString = useCallback(\n    (queryStringKey?: QueryStringMap) => {\n      const allQueryString = {\n        [QueryStringMap.KnowledgeId]: searchParams.get(\n          QueryStringMap.KnowledgeId,\n        ),\n      };\n      if (queryStringKey) {\n        return allQueryString[queryStringKey];\n      }\n      return allQueryString;\n    },\n    [searchParams],\n  );\n\n  const navigateToChunk = useCallback(\n    (route: Routes) => {\n      navigate(\n        `${route}/${id}?${QueryStringMap.KnowledgeId}=${getQueryString(QueryStringMap.KnowledgeId)}`,\n      );\n    },\n    [getQueryString, id, navigate],\n  );\n\n  const navigateToFiles = useCallback(\n    (folderId?: string) => {\n      navigate(`${Routes.Files}?folderId=${folderId}`);\n    },\n    [navigate],\n  );\n\n  return {\n    navigateToDatasetList,\n    navigateToDataset,\n    navigateToHome,\n    navigateToProfile,\n    navigateToChatList,\n    navigateToChat,\n    navigateToChunkParsedResult,\n    getQueryString,\n    navigateToChunk,\n    navigateToAgentList,\n    navigateToAgent,\n    navigateToAgentTemplates,\n    navigateToSearchList,\n    navigateToSearch,\n    navigateToFiles,\n  };\n};\n","import { useHandleFilterSubmit } from '@/components/list-filter-bar/use-handle-filter-submit';\nimport {\n  IKnowledge,\n  IKnowledgeResult,\n  INextTestingResult,\n} from '@/interfaces/database/knowledge';\nimport { ITestRetrievalRequestBody } from '@/interfaces/request/knowledge';\nimport i18n from '@/locales/config';\nimport kbService, { listDataset } from '@/services/knowledge-service';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useDebounce } from 'ahooks';\nimport { message } from 'antd';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useParams } from 'umi';\nimport {\n  useGetPaginationWithRouter,\n  useHandleSearchChange,\n} from './logic-hooks';\n\nexport const enum KnowledgeApiAction {\n  TestRetrieval = 'testRetrieval',\n  FetchKnowledgeListByPage = 'fetchKnowledgeListByPage',\n  CreateKnowledge = 'createKnowledge',\n  DeleteKnowledge = 'deleteKnowledge',\n  SaveKnowledge = 'saveKnowledge',\n  FetchKnowledgeDetail = 'fetchKnowledgeDetail',\n}\n\nexport const useKnowledgeBaseId = () => {\n  const { id } = useParams();\n\n  return id;\n};\n\nexport const useTestRetrieval = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const [values, setValues] = useState<ITestRetrievalRequestBody>();\n  const mountedRef = useRef(false);\n  const { filterValue, handleFilterSubmit } = useHandleFilterSubmit();\n\n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n\n  const onPaginationChange = useCallback((page: number, pageSize: number) => {\n    setPage(page);\n    setPageSize(pageSize);\n  }, []);\n\n  const queryParams = useMemo(() => {\n    return {\n      ...values,\n      kb_id: values?.kb_id || knowledgeBaseId,\n      page,\n      size: pageSize,\n      doc_ids: filterValue.doc_ids,\n    };\n  }, [filterValue, knowledgeBaseId, page, pageSize, values]);\n\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<INextTestingResult>({\n    queryKey: [KnowledgeApiAction.TestRetrieval, queryParams, page, pageSize],\n    initialData: {\n      chunks: [],\n      doc_aggs: [],\n      total: 0,\n    },\n    enabled: false,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await kbService.retrieval_test(queryParams);\n      return data?.data ?? {};\n    },\n  });\n\n  useEffect(() => {\n    if (mountedRef.current) {\n      refetch();\n    }\n    mountedRef.current = true;\n  }, [page, pageSize, refetch, filterValue]);\n\n  return {\n    data,\n    loading,\n    setValues,\n    refetch,\n    onPaginationChange,\n    page,\n    pageSize,\n    handleFilterSubmit,\n    filterValue,\n  };\n};\n\nexport const useFetchNextKnowledgeListByPage = () => {\n  const { searchString, handleInputChange } = useHandleSearchChange();\n  const { pagination, setPagination } = useGetPaginationWithRouter();\n  const debouncedSearchString = useDebounce(searchString, { wait: 500 });\n  const { filterValue, handleFilterSubmit } = useHandleFilterSubmit();\n\n  const { data, isFetching: loading } = useQuery<IKnowledgeResult>({\n    queryKey: [\n      KnowledgeApiAction.FetchKnowledgeListByPage,\n      {\n        debouncedSearchString,\n        ...pagination,\n        filterValue,\n      },\n    ],\n    initialData: {\n      kbs: [],\n      total: 0,\n    },\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await listDataset(\n        {\n          keywords: debouncedSearchString,\n          page_size: pagination.pageSize,\n          page: pagination.current,\n        },\n        {\n          owner_ids: filterValue.owner,\n        },\n      );\n\n      return data?.data;\n    },\n  });\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => {\n      // setPagination({ page: 1 }); // TODO: 这里导致重复请求\n      handleInputChange(e);\n    },\n    [handleInputChange],\n  );\n\n  return {\n    ...data,\n    searchString,\n    handleInputChange: onInputChange,\n    pagination: { ...pagination, total: data?.total },\n    setPagination,\n    loading,\n    filterValue,\n    handleFilterSubmit,\n  };\n};\n\nexport const useCreateKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [KnowledgeApiAction.CreateKnowledge],\n    mutationFn: async (params: { id?: string; name: string }) => {\n      const { data = {} } = await kbService.createKb(params);\n      if (data.code === 0) {\n        message.success(\n          i18n.t(`message.${params?.id ? 'modified' : 'created'}`),\n        );\n        queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeList'] });\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, createKnowledge: mutateAsync };\n};\n\nexport const useDeleteKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [KnowledgeApiAction.DeleteKnowledge],\n    mutationFn: async (id: string) => {\n      const { data } = await kbService.rmKb({ kb_id: id });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.deleted`));\n        queryClient.invalidateQueries({\n          queryKey: [KnowledgeApiAction.FetchKnowledgeListByPage],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteKnowledge: mutateAsync };\n};\n\nexport const useUpdateKnowledge = (shouldFetchList = false) => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [KnowledgeApiAction.SaveKnowledge],\n    mutationFn: async (params: Record<string, any>) => {\n      const { data = {} } = await kbService.updateKb({\n        kb_id: params?.kb_id ? params?.kb_id : knowledgeBaseId,\n        ...params,\n      });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.updated`));\n        if (shouldFetchList) {\n          queryClient.invalidateQueries({\n            queryKey: [KnowledgeApiAction.FetchKnowledgeListByPage],\n          });\n        } else {\n          queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeDetail'] });\n        }\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, saveKnowledgeConfiguration: mutateAsync };\n};\n\nexport const useFetchKnowledgeBaseConfiguration = (refreshCount?: number) => {\n  const { id } = useParams();\n\n  let queryKey: (KnowledgeApiAction | number)[] = [\n    KnowledgeApiAction.FetchKnowledgeDetail,\n  ];\n  if (typeof refreshCount === 'number') {\n    queryKey = [KnowledgeApiAction.FetchKnowledgeDetail, refreshCount];\n  }\n\n  const { data, isFetching: loading } = useQuery<IKnowledge>({\n    queryKey,\n    initialData: {} as IKnowledge,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await kbService.get_kb_detail({\n        kb_id: id,\n      });\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n","import { Routes } from '@/routes';\nimport { useCallback } from 'react';\nimport { useNavigate, useParams } from 'umi';\n\nexport const useHandleMenuClick = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const handleMenuClick = useCallback(\n    (key: Routes) => () => {\n      navigate(`${Routes.DatasetBase}${key}/${id}`);\n    },\n    [id, navigate],\n  );\n\n  return { handleMenuClick };\n};\n","import { RAGFlowAvatar } from '@/components/ragflow-avatar';\nimport { Button } from '@/components/ui/button';\nimport { useSecondPathName } from '@/hooks/route-hook';\nimport { useFetchKnowledgeBaseConfiguration } from '@/hooks/use-knowledge-request';\nimport { cn, formatBytes } from '@/lib/utils';\nimport { Routes } from '@/routes';\nimport { formatPureDate } from '@/utils/date';\nimport { Banknote, Database, FileSearch2 } from 'lucide-react';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHandleMenuClick } from './hooks';\n\ntype PropType = {\n  refreshCount?: number;\n};\n\nexport function SideBar({ refreshCount }: PropType) {\n  const pathName = useSecondPathName();\n  const { handleMenuClick } = useHandleMenuClick();\n  // refreshCount: be for avatar img sync update on top left\n  const { data } = useFetchKnowledgeBaseConfiguration(refreshCount);\n  const { t } = useTranslation();\n\n  const items = useMemo(() => {\n    return [\n      {\n        icon: Database,\n        label: t(`knowledgeDetails.dataset`),\n        key: Routes.DatasetBase,\n      },\n      {\n        icon: FileSearch2,\n        label: t(`knowledgeDetails.testing`),\n        key: Routes.DatasetTesting,\n      },\n      {\n        icon: Banknote,\n        label: t(`knowledgeDetails.configuration`),\n        key: Routes.DatasetSetting,\n      },\n    ];\n  }, [t]);\n\n  return (\n    <aside className=\"relative p-5 space-y-8\">\n      <div className=\"flex gap-2.5 max-w-[200px] items-center\">\n        <RAGFlowAvatar\n          avatar={data.avatar}\n          name={data.name}\n          className=\"size-16\"\n        ></RAGFlowAvatar>\n        <div className=\" text-text-sub-title text-xs space-y-1\">\n          <h3 className=\"text-lg font-semibold line-clamp-1 text-text-title\">\n            {data.name}\n          </h3>\n          <div className=\"flex justify-between\">\n            <span>{data.doc_num} files</span>\n            <span>{formatBytes(data.size)}</span>\n          </div>\n          <div>Created {formatPureDate(data.create_time)}</div>\n        </div>\n      </div>\n\n      <div className=\"w-[200px] flex flex-col gap-5\">\n        {items.map((item, itemIdx) => {\n          const active = '/' + pathName === item.key;\n          return (\n            <Button\n              key={itemIdx}\n              variant={active ? 'secondary' : 'ghost'}\n              className={cn(\n                'w-full justify-start gap-2.5 px-3 relative h-10 text-text-sub-title-invert',\n                {\n                  'bg-background-card': active,\n                  'text-text-title': active,\n                },\n              )}\n              onClick={handleMenuClick(item.key)}\n            >\n              <item.icon className=\"size-4\" />\n              <span>{item.label}</span>\n            </Button>\n          );\n        })}\n      </div>\n    </aside>\n  );\n}\n","import { PageHeader } from '@/components/page-header';\nimport { useNavigatePage } from '@/hooks/logic-hooks/navigate-hooks';\nimport { Outlet } from 'umi';\nimport { SideBar } from './sidebar';\n\nexport default function DatasetWrapper() {\n  const { navigateToDatasetList } = useNavigatePage();\n\n  return (\n    <section>\n      <PageHeader\n        title=\"Dataset details\"\n        back={navigateToDatasetList}\n      ></PageHeader>\n      <div className=\"flex flex-1\">\n        <SideBar></SideBar>\n        <div className=\"flex-1\">\n          <Outlet />\n        </div>\n      </div>\n    </section>\n  );\n}\n","export enum Routes {\n  Login = '/login',\n  Home = '/home',\n  Datasets = '/datasets',\n  DatasetBase = '/dataset',\n  Dataset = `${Routes.DatasetBase}${Routes.DatasetBase}`,\n  Agent = '/agent',\n  AgentTemplates = '/agent-templates',\n  Agents = '/agents',\n  Searches = '/next-searches',\n  Search = '/next-search',\n  Chats = '/next-chats',\n  Chat = '/next-chat',\n  Files = '/files',\n  ProfileSetting = '/profile-setting',\n  DatasetTesting = '/testing',\n  DatasetSetting = '/setting',\n  Chunk = '/chunk',\n  ChunkResult = `${Chunk}${Chunk}`,\n  Parsed = '/parsed',\n  ParsedResult = `${Chunk}${Parsed}`,\n  Result = '/result',\n  ResultView = `${Chunk}${Result}`,\n}\n\nconst routes = [\n  {\n    path: '/login',\n    component: '@/pages/login',\n    layout: false,\n  },\n  {\n    path: '/login-next',\n    component: '@/pages/login-next',\n    layout: false,\n  },\n  {\n    path: '/chat/share',\n    component: '@/pages/chat/share',\n    layout: false,\n  },\n  {\n    path: '/',\n    component: '@/layouts',\n    layout: false,\n    wrappers: ['@/wrappers/auth'],\n    routes: [\n      { path: '/', redirect: '/knowledge' },\n      {\n        path: '/knowledge',\n        component: '@/pages/knowledge',\n        // component: '@/pages/knowledge/datasets',\n      },\n      {\n        path: '/knowledge',\n        component: '@/pages/add-knowledge',\n        routes: [\n          {\n            path: '/knowledge/dataset',\n            component: '@/pages/add-knowledge/components/knowledge-dataset',\n            routes: [\n              {\n                path: '/knowledge/dataset',\n                component: '@/pages/add-knowledge/components/knowledge-file',\n              },\n              {\n                path: '/knowledge/dataset/chunk',\n                component: '@/pages/add-knowledge/components/knowledge-chunk',\n              },\n            ],\n          },\n          {\n            path: '/knowledge/configuration',\n            component: '@/pages/add-knowledge/components/knowledge-setting',\n          },\n          {\n            path: '/knowledge/testing',\n            component: '@/pages/add-knowledge/components/knowledge-testing',\n          },\n          {\n            path: '/knowledge/knowledgeGraph',\n            component: '@/pages/add-knowledge/components/knowledge-graph',\n          },\n        ],\n      },\n      {\n        path: '/chat',\n        component: '@/pages/chat',\n      },\n      {\n        path: '/user-setting',\n        component: '@/pages/user-setting',\n        routes: [\n          { path: '/user-setting', redirect: '/user-setting/profile' },\n          {\n            path: '/user-setting/profile',\n            // component: '@/pages/user-setting/setting-profile',\n            component: '@/pages/user-setting/setting-profile',\n          },\n          {\n            path: '/user-setting/locale',\n            component: '@/pages/user-setting/setting-locale',\n          },\n          {\n            path: '/user-setting/password',\n            component: '@/pages/user-setting/setting-password',\n          },\n          {\n            path: '/user-setting/model',\n            component: '@/pages/user-setting/setting-model',\n          },\n          {\n            path: '/user-setting/team',\n            component: '@/pages/user-setting/setting-team',\n          },\n          {\n            path: '/user-setting/system',\n            component: '@/pages/user-setting/setting-system',\n          },\n          {\n            path: '/user-setting/api',\n            component: '@/pages/user-setting/setting-api',\n          },\n        ],\n      },\n      {\n        path: '/file',\n        component: '@/pages/file-manager',\n      },\n      {\n        path: '/flow',\n        component: '@/pages/flow/list',\n      },\n      {\n        path: '/flow/:id',\n        component: '@/pages/flow',\n      },\n      {\n        path: '/search',\n        component: '@/pages/search',\n      },\n    ],\n  },\n  {\n    path: '/document/:id',\n    component: '@/pages/document-viewer',\n    layout: false,\n  },\n  {\n    path: '/*',\n    component: '@/pages/404',\n    layout: false,\n  },\n  {\n    path: Routes.Home,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Home,\n        component: `@/pages${Routes.Home}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Datasets,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Datasets,\n        component: `@/pages${Routes.Datasets}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Chats,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Chats,\n        component: `@/pages${Routes.Chats}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Chat,\n    layout: false,\n    component: `@/pages${Routes.Chats}/chat`,\n  },\n  {\n    path: Routes.Searches,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Searches,\n        component: `@/pages${Routes.Searches}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Search,\n    layout: false,\n    component: `@/pages${Routes.Search}`,\n  },\n  {\n    path: Routes.Agents,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Agents,\n        component: `@/pages${Routes.Agents}`,\n      },\n    ],\n  },\n  {\n    path: `${Routes.Agent}/:id`,\n    layout: false,\n    component: `@/pages${Routes.Agent}`,\n  },\n  {\n    path: Routes.AgentTemplates,\n    layout: false,\n    component: `@/pages${Routes.Agents}${Routes.AgentTemplates}`,\n  },\n  {\n    path: Routes.Files,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Files,\n        component: `@/pages${Routes.Files}`,\n      },\n    ],\n  },\n  {\n    path: Routes.DatasetBase,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [{ path: Routes.DatasetBase, redirect: Routes.Dataset }],\n  },\n  {\n    path: Routes.DatasetBase,\n    layout: false,\n    component: `@/pages${Routes.DatasetBase}`,\n    routes: [\n      {\n        path: `${Routes.Dataset}/:id`,\n        component: `@/pages${Routes.Dataset}`,\n      },\n      {\n        path: `${Routes.DatasetBase}${Routes.DatasetSetting}/:id`,\n        component: `@/pages${Routes.DatasetBase}${Routes.DatasetSetting}`,\n      },\n      {\n        path: `${Routes.DatasetBase}${Routes.DatasetTesting}/:id`,\n        component: `@/pages${Routes.DatasetBase}${Routes.DatasetTesting}`,\n      },\n    ],\n  },\n  {\n    path: `${Routes.ParsedResult}/chunks`,\n    layout: false,\n    component: `@/pages${Routes.Chunk}/parsed-result/add-knowledge/components/knowledge-chunk`,\n  },\n  {\n    path: Routes.Chunk,\n    layout: false,\n    routes: [\n      {\n        path: Routes.Chunk,\n        component: `@/pages${Routes.Chunk}`,\n        routes: [\n          // {\n          //   path: `${Routes.ParsedResult}/:id`,\n          //   component: `@/pages${Routes.Chunk}/parsed-result`,\n          // },\n          {\n            path: `${Routes.ChunkResult}/:id`,\n            component: `@/pages${Routes.Chunk}/chunk-result`,\n          },\n          {\n            path: `${Routes.ResultView}/:id`,\n            component: `@/pages${Routes.Chunk}/result-view`,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: Routes.Chunk,\n    layout: false,\n    component: `@/pages${Routes.Chunk}`,\n  },\n  {\n    path: Routes.ProfileSetting,\n    layout: false,\n    component: `@/pages${Routes.ProfileSetting}`,\n    routes: [\n      {\n        path: Routes.ProfileSetting,\n        redirect: `${Routes.ProfileSetting}/profile`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/profile`,\n        component: `@/pages${Routes.ProfileSetting}/profile`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/team`,\n        component: `@/pages${Routes.ProfileSetting}/team`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/plan`,\n        component: `@/pages${Routes.ProfileSetting}/plan`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/model`,\n        component: `@/pages${Routes.ProfileSetting}/model`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/prompt`,\n        component: `@/pages${Routes.ProfileSetting}/prompt`,\n      },\n    ],\n  },\n];\n\nexport default routes;\n","import { IRenameTag } from '@/interfaces/database/knowledge';\nimport {\n  IFetchDocumentListRequestBody,\n  IFetchKnowledgeListRequestBody,\n  IFetchKnowledgeListRequestParams,\n} from '@/interfaces/request/knowledge';\nimport api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request, { post } from '@/utils/request';\n\nconst {\n  create_kb,\n  update_kb,\n  rm_kb,\n  get_kb_detail,\n  kb_list,\n  get_document_list,\n  document_change_status,\n  document_rm,\n  document_delete,\n  document_create,\n  document_change_parser,\n  document_thumbnails,\n  chunk_list,\n  create_chunk,\n  set_chunk,\n  get_chunk,\n  switch_chunk,\n  rm_chunk,\n  retrieval_test,\n  document_rename,\n  document_run,\n  document_upload,\n  web_crawl,\n  knowledge_graph,\n  document_infos,\n  upload_and_parse,\n  listTagByKnowledgeIds,\n  setMeta,\n} = api;\n\nconst methods = {\n  // 知识库管理\n  createKb: {\n    url: create_kb,\n    method: 'post',\n  },\n  updateKb: {\n    url: update_kb,\n    method: 'post',\n  },\n  rmKb: {\n    url: rm_kb,\n    method: 'post',\n  },\n  get_kb_detail: {\n    url: get_kb_detail,\n    method: 'get',\n  },\n  getList: {\n    url: kb_list,\n    method: 'post',\n  },\n  // document manager\n  get_document_list: {\n    url: get_document_list,\n    method: 'get',\n  },\n  document_change_status: {\n    url: document_change_status,\n    method: 'post',\n  },\n  document_rm: {\n    url: document_rm,\n    method: 'post',\n  },\n  document_rename: {\n    url: document_rename,\n    method: 'post',\n  },\n  document_create: {\n    url: document_create,\n    method: 'post',\n  },\n  document_run: {\n    url: document_run,\n    method: 'post',\n  },\n  document_change_parser: {\n    url: document_change_parser,\n    method: 'post',\n  },\n  document_thumbnails: {\n    url: document_thumbnails,\n    method: 'get',\n  },\n  document_upload: {\n    url: document_upload,\n    method: 'post',\n  },\n  web_crawl: {\n    url: web_crawl,\n    method: 'post',\n  },\n  document_infos: {\n    url: document_infos,\n    method: 'post',\n  },\n  setMeta: {\n    url: setMeta,\n    method: 'post',\n  },\n  // chunk管理\n  chunk_list: {\n    url: chunk_list,\n    method: 'post',\n  },\n  create_chunk: {\n    url: create_chunk,\n    method: 'post',\n  },\n  set_chunk: {\n    url: set_chunk,\n    method: 'post',\n  },\n  get_chunk: {\n    url: get_chunk,\n    method: 'get',\n  },\n  switch_chunk: {\n    url: switch_chunk,\n    method: 'post',\n  },\n  rm_chunk: {\n    url: rm_chunk,\n    method: 'post',\n  },\n  retrieval_test: {\n    url: retrieval_test,\n    method: 'post',\n  },\n  knowledge_graph: {\n    url: knowledge_graph,\n    method: 'get',\n  },\n  document_delete: {\n    url: document_delete,\n    method: 'delete',\n  },\n  upload_and_parse: {\n    url: upload_and_parse,\n    method: 'post',\n  },\n  listTagByKnowledgeIds: {\n    url: listTagByKnowledgeIds,\n    method: 'get',\n  },\n};\n\nconst kbService = registerServer<keyof typeof methods>(methods, request);\n\nexport const listTag = (knowledgeId: string) =>\n  request.get(api.listTag(knowledgeId));\n\nexport const removeTag = (knowledgeId: string, tags: string[]) =>\n  post(api.removeTag(knowledgeId), { tags });\n\nexport const renameTag = (\n  knowledgeId: string,\n  { fromTag, toTag }: IRenameTag,\n) => post(api.renameTag(knowledgeId), { fromTag, toTag });\n\nexport function getKnowledgeGraph(knowledgeId: string) {\n  return request.get(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport function deleteKnowledgeGraph(knowledgeId: string) {\n  return request.delete(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport const listDataset = (\n  params?: IFetchKnowledgeListRequestParams,\n  body?: IFetchKnowledgeListRequestBody,\n) => request.post(api.kb_list, { data: body || {}, params });\n\nexport const listDocument = (\n  params?: IFetchKnowledgeListRequestParams,\n  body?: IFetchDocumentListRequestBody,\n) => request.post(api.get_document_list, { data: body || {}, params });\n\nexport default kbService;\n","import dayjs from 'dayjs';\n\nexport function formatDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY HH:mm:ss');\n}\n\nexport function formatTime(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('HH:mm:ss');\n}\n\nexport function today() {\n  return formatDate(dayjs());\n}\n\nexport function lastDay() {\n  return formatDate(dayjs().subtract(1, 'days'));\n}\n\nexport function lastWeek() {\n  return formatDate(dayjs().subtract(1, 'weeks'));\n}\n\nexport function formatPureDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY');\n}\n"],"names":["useHandleFilterSubmit","_useState","useState","_useState2","_slicedToArray","filterValue","setFilterValue","handleFilterSubmit","useCallback","value","PageHeader","_ref","back","title","children","_jsxs","className","_jsx","Button","variant","size","onClick","ArrowLeft","Colors","from","to","RAGFlowAvatar","forwardRef","ref","name","avatar","_ref$isPerson","isPerson","props","_objectWithoutProperties","_excluded","index","random","console","log","Avatar","_objectSpread","cn","AvatarImage","src","AvatarFallback","concat","slice","displayName","_excluded2","_excluded3","React","AvatarPrimitive","_ref2","_ref3","QueryStringMap","useNavigatePage","navigate","useNavigate","_useSearchParams","useSearchParams","searchParams","id","useParams","navigateToDatasetList","Routes","Datasets","navigateToDataset","Dataset","navigateToHome","Home","navigateToProfile","ProfileSetting","navigateToChatList","Chats","navigateToChat","Chat","navigateToAgentList","Agents","navigateToAgent","Agent","navigateToAgentTemplates","AgentTemplates","navigateToSearchList","Searches","navigateToSearch","Search","navigateToChunkParsedResult","knowledgeId","ParsedResult","getQueryString","queryStringKey","allQueryString","_defineProperty","KnowledgeId","get","navigateToChunk","route","navigateToFiles","folderId","Files","KnowledgeApiAction","useKnowledgeBaseId","useTestRetrieval","_queryFn","knowledgeBaseId","values","setValues","mountedRef","useRef","_useHandleFilterSubmi","_useState3","_useState4","page","setPage","_useState5","_useState6","pageSize","setPageSize","onPaginationChange","queryParams","useMemo","kb_id","doc_ids","_useQuery","useQuery","queryKey","initialData","chunks","doc_aggs","total","enabled","gcTime","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_yield$kbService$retr","data","wrap","_context","prev","next","kbService","retrieval_test","sent","abrupt","stop","apply","arguments","loading","isFetching","refetch","useEffect","current","useFetchNextKnowledgeListByPage","_queryFn2","_useHandleSearchChang","useHandleSearchChange","searchString","handleInputChange","_useGetPaginationWith","useGetPaginationWithRouter","pagination","setPagination","debouncedSearchString","useDebounce","wait","_useHandleFilterSubmi2","_useQuery2","kbs","_callee2","_yield$listDataset","_context2","listDataset","keywords","page_size","owner_ids","owner","onInputChange","e","useCreateKnowledge","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","_callee3","params","_yield$kbService$crea","_yield$kbService$crea2","_context3","createKb","code","message","success","i18n","t","invalidateQueries","_x","isPending","createKnowledge","mutateAsync","useDeleteKnowledge","_mutationFn2","_useMutation2","_callee4","_data$data2","_yield$kbService$rmKb","_context4","rmKb","_x2","deleteKnowledge","useUpdateKnowledge","_mutationFn3","shouldFetchList","length","undefined","_useMutation3","_callee5","_yield$kbService$upda","_yield$kbService$upda2","_context5","updateKb","_x3","saveKnowledgeConfiguration","useFetchKnowledgeBaseConfiguration","refreshCount","_queryFn3","_useQuery3","_callee6","_data$data3","_yield$kbService$get_","_context6","get_kb_detail","useHandleMenuClick","handleMenuClick","key","DatasetBase","SideBar","pathName","useSecondPathName","useTranslation","items","icon","Database","label","FileSearch2","DatasetTesting","Banknote","DatasetSetting","doc_num","formatBytes","formatPureDate","create_time","map","item","itemIdx","active","DatasetWrapper","Outlet","Chunk","ChunkResult","ResultView","create_kb","api","update_kb","rm_kb","kb_list","get_document_list","document_change_status","document_rm","document_delete","document_create","document_change_parser","document_thumbnails","chunk_list","create_chunk","set_chunk","get_chunk","switch_chunk","rm_chunk","document_rename","document_run","document_upload","web_crawl","knowledge_graph","document_infos","upload_and_parse","listTagByKnowledgeIds","methods","url","method","getList","setMeta","registerServer","request","listTag","removeTag","tags","post","renameTag","fromTag","toTag","getKnowledgeGraph","deleteKnowledgeGraph","body","listDocument","formatDate","date","dayjs","format","formatTime"],"sourceRoot":""}