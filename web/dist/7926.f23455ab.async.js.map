{"version":3,"file":"7926.f23455ab.async.js","mappings":"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","sources":["webpack:///./src/constants/file.ts","webpack:///./src/components/icon-font.tsx","webpack:///./src/components/list-filter-bar/filter-popover.tsx","webpack:///./src/components/list-filter-bar/index.tsx","webpack:///./src/components/ui/checkbox.tsx","webpack:///./src/components/ui/form.tsx","webpack:///./src/components/ui/label.tsx","webpack:///./src/components/ui/popover.tsx","webpack:///./src/utils/document-util.ts"],"sourcesContent":["export const FileIconMap = {\n  doc: 'doc',\n  docx: 'doc',\n  pdf: 'pdf',\n  xls: 'excel',\n  xlsx: 'excel',\n  ppt: 'ppt',\n  pptx: 'ppt',\n  jpg: 'jpg',\n  jpeg: 'jpg',\n  png: 'png',\n  txt: 'text',\n  csv: 'pdf',\n  md: 'md',\n};\n","import { FileIconMap } from '@/constants/file';\nimport { cn } from '@/lib/utils';\nimport { getExtension } from '@/utils/document-util';\n\ntype IconFontType = {\n  name: string;\n  className?: string;\n};\n\nexport const IconFont = ({ name, className }: IconFontType) => (\n  <svg className={cn('fill-current size-4', className)}>\n    <use xlinkHref={`#icon-${name}`} />\n  </svg>\n);\n\nexport function FileIcon({\n  name,\n  className,\n  type,\n}: IconFontType & { type?: string }) {\n  const isFolder = type === 'folder';\n  return (\n    <span className={cn('size-4', className)}>\n      <IconFont\n        name={isFolder ? 'file-sub' : FileIconMap[getExtension(name)]}\n      ></IconFont>\n    </span>\n  );\n}\n","import {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { PropsWithChildren, useCallback, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ZodArray, ZodString, z } from 'zod';\n\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { FilterChange, FilterCollection, FilterValue } from './interface';\n\nexport type CheckboxFormMultipleProps = {\n  filters?: FilterCollection[];\n  value?: FilterValue;\n  onChange?: FilterChange;\n  setOpen(open: boolean): void;\n};\n\nfunction CheckboxFormMultiple({\n  filters = [],\n  value,\n  onChange,\n  setOpen,\n}: CheckboxFormMultipleProps) {\n  const fieldsDict = filters?.reduce<Record<string, Array<any>>>((pre, cur) => {\n    pre[cur.field] = [];\n    return pre;\n  }, {});\n\n  const FormSchema = z.object(\n    filters.reduce<Record<string, ZodArray<ZodString, 'many'>>>((pre, cur) => {\n      pre[cur.field] = z.array(z.string());\n\n      // .refine((value) => value.some((item) => item), {\n      //   message: 'You have to select at least one item.',\n      // });\n      return pre;\n    }, {}),\n  );\n\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: fieldsDict,\n  });\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    onChange?.(data);\n    setOpen(false);\n  }\n\n  const onReset = useCallback(() => {\n    onChange?.(fieldsDict);\n    setOpen(false);\n  }, [fieldsDict, onChange, setOpen]);\n\n  useEffect(() => {\n    form.reset(value);\n  }, [form, value]);\n\n  return (\n    <Form {...form}>\n      <form\n        onSubmit={form.handleSubmit(onSubmit)}\n        className=\"space-y-8 px-5 py-2.5\"\n        onReset={() => form.reset()}\n      >\n        {filters.map((x) => (\n          <FormField\n            key={x.field}\n            control={form.control}\n            name={x.field}\n            render={() => (\n              <FormItem className=\"space-y-4\">\n                <div>\n                  <FormLabel className=\"text-base text-text-sub-title-invert\">\n                    {x.label}\n                  </FormLabel>\n                </div>\n                {x.list.map((item) => (\n                  <FormField\n                    key={item.id}\n                    control={form.control}\n                    name={x.field}\n                    render={({ field }) => {\n                      return (\n                        <div className=\"flex items-center justify-between text-text-title text-xs\">\n                          <FormItem\n                            key={item.id}\n                            className=\"flex flex-row  space-x-3 space-y-0 items-center \"\n                          >\n                            <FormControl>\n                              <Checkbox\n                                checked={field.value?.includes(item.id)}\n                                onCheckedChange={(checked) => {\n                                  return checked\n                                    ? field.onChange([...field.value, item.id])\n                                    : field.onChange(\n                                        field.value?.filter(\n                                          (value) => value !== item.id,\n                                        ),\n                                      );\n                                }}\n                              />\n                            </FormControl>\n                            <FormLabel>{item.label}</FormLabel>\n                          </FormItem>\n                          <span className=\" text-sm\">{item.count}</span>\n                        </div>\n                      );\n                    }}\n                  />\n                ))}\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        ))}\n        <div className=\"flex justify-end gap-5\">\n          <Button\n            type=\"button\"\n            variant={'outline'}\n            size={'sm'}\n            onClick={onReset}\n          >\n            Clear\n          </Button>\n          <Button type=\"submit\" size={'sm'}>\n            Submit\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n}\n\nexport function FilterPopover({\n  children,\n  value,\n  onChange,\n  filters,\n}: PropsWithChildren & Omit<CheckboxFormMultipleProps, 'setOpen'>) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>{children}</PopoverTrigger>\n      <PopoverContent className=\"p-0\">\n        <CheckboxFormMultiple\n          onChange={onChange}\n          value={value}\n          filters={filters}\n          setOpen={setOpen}\n        ></CheckboxFormMultiple>\n      </PopoverContent>\n    </Popover>\n  );\n}\n","import { cn } from '@/lib/utils';\nimport { ChevronDown } from 'lucide-react';\nimport React, {\n  ChangeEventHandler,\n  PropsWithChildren,\n  ReactNode,\n  useMemo,\n} from 'react';\nimport { IconFont } from '../icon-font';\nimport { Button, ButtonProps } from '../ui/button';\nimport { SearchInput } from '../ui/input';\nimport { CheckboxFormMultipleProps, FilterPopover } from './filter-popover';\n\ninterface IProps {\n  title?: ReactNode;\n  searchString?: string;\n  onSearchChange?: ChangeEventHandler<HTMLInputElement>;\n  showFilter?: boolean;\n  leftPanel?: ReactNode;\n}\n\nexport const FilterButton = React.forwardRef<\n  HTMLButtonElement,\n  ButtonProps & { count?: number }\n>(({ count = 0, ...props }, ref) => {\n  return (\n    <Button variant=\"secondary\" {...props} ref={ref}>\n      <span\n        className={cn({\n          'text-text-title': count > 0,\n          'text-text-sub-title-invert': count === 0,\n        })}\n      >\n        Filter\n      </span>\n      {count > 0 && (\n        <span className=\"rounded-full bg-text-badge px-1 text-xs \">\n          {count}\n        </span>\n      )}\n      <ChevronDown />\n    </Button>\n  );\n});\n\nexport default function ListFilterBar({\n  title,\n  children,\n  searchString,\n  onSearchChange,\n  showFilter = true,\n  leftPanel,\n  value,\n  onChange,\n  filters,\n  className,\n  icon,\n}: PropsWithChildren<IProps & Omit<CheckboxFormMultipleProps, 'setOpen'>> & {\n  className?: string;\n  icon?: ReactNode;\n}) {\n  const filterCount = useMemo(() => {\n    return typeof value === 'object' && value !== null\n      ? Object.values(value).reduce((pre, cur) => {\n          return pre + cur.length;\n        }, 0)\n      : 0;\n  }, [value]);\n\n  return (\n    <div className={cn('flex justify-between mb-5 items-center', className)}>\n      <div className=\"text-2xl font-semibold flex items-center gap-2.5\">\n        {typeof icon === 'string' ? (\n          <IconFont name={icon} className=\"size-6\"></IconFont>\n        ) : (\n          icon\n        )}\n        {leftPanel || title}\n      </div>\n      <div className=\"flex gap-5 items-center\">\n        {showFilter && (\n          <FilterPopover value={value} onChange={onChange} filters={filters}>\n            <FilterButton count={filterCount}></FilterButton>\n          </FilterPopover>\n        )}\n\n        <SearchInput\n          value={searchString}\n          onChange={onSearchChange}\n          className=\"w-32\"\n        ></SearchInput>\n        {children}\n      </div>\n    </div>\n  );\n}\n","'use client';\n\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport { Check } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      'peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',\n      className,\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn('flex items-center justify-center text-current')}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { Slot } from '@radix-ui/react-slot';\nimport * as React from 'react';\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from 'react-hook-form';\n\nimport { Label } from '@/components/ui/label';\nimport { cn } from '@/lib/utils';\nimport { FormTooltip } from './tooltip';\n\nconst Form = FormProvider;\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue,\n);\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue,\n);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState, formState } = useFormContext();\n\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error('useFormField should be used within <FormField>');\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\nconst InnerFormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn('space-y-2', className)} {...props} />\n    </FormItemContext.Provider>\n  );\n});\n\nInnerFormItem.displayName = 'FormItem';\n\nconst FormItem = React.memo(InnerFormItem);\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & {\n    tooltip?: React.ReactNode;\n  }\n>(({ className, tooltip, ...props }, ref) => {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && 'text-destructive', className, 'flex pb-0.5')}\n      htmlFor={formItemId}\n      {...props}\n    >\n      {props.children}\n      {tooltip && <FormTooltip tooltip={tooltip}></FormTooltip>}\n    </Label>\n  );\n});\nFormLabel.displayName = 'FormLabel';\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } =\n    useFormField();\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n});\nFormControl.displayName = 'FormControl';\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn('text-sm text-muted-foreground', className)}\n      {...props}\n    />\n  );\n});\nFormDescription.displayName = 'FormDescription';\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message) : children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn('text-sm font-medium text-destructive', className)}\n      {...props}\n    >\n      {body}\n    </p>\n  );\n});\nFormMessage.displayName = 'FormMessage';\n\nexport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  useFormField,\n};\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","'use client';\n\nimport * as PopoverPrimitive from '@radix-ui/react-popover';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Popover = PopoverPrimitive.Root;\n\nconst PopoverTrigger = PopoverPrimitive.Trigger;\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        'z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        className,\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n));\nPopoverContent.displayName = PopoverPrimitive.Content.displayName;\n\nexport { Popover, PopoverContent, PopoverTrigger };\n","import { Images, SupportedPreviewDocumentTypes } from '@/constants/common';\nimport { IReferenceChunk } from '@/interfaces/database/chat';\nimport { IChunk } from '@/interfaces/database/knowledge';\nimport { UploadFile } from 'antd';\nimport { get } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nexport const buildChunkHighlights = (\n  selectedChunk: IChunk | IReferenceChunk,\n  size: { width: number; height: number },\n) => {\n  return Array.isArray(selectedChunk?.positions) &&\n    selectedChunk.positions.every((x) => Array.isArray(x))\n    ? selectedChunk?.positions?.map((x) => {\n        const boundingRect = {\n          width: size.width,\n          height: size.height,\n          x1: x[1],\n          x2: x[2],\n          y1: x[3],\n          y2: x[4],\n        };\n        return {\n          id: uuid(),\n          comment: {\n            text: '',\n            emoji: '',\n          },\n          content: {\n            text:\n              get(selectedChunk, 'content_with_weight') ||\n              get(selectedChunk, 'content', ''),\n          },\n          position: {\n            boundingRect: boundingRect,\n            rects: [boundingRect],\n            pageNumber: x[0],\n          },\n        };\n      })\n    : [];\n};\n\nexport const isFileUploadDone = (file: UploadFile) => file.status === 'done';\n\nexport const getExtension = (name: string) =>\n  name?.slice(name.lastIndexOf('.') + 1).toLowerCase() ?? '';\n\nexport const isPdf = (name: string) => {\n  return getExtension(name) === 'pdf';\n};\n\nexport const getUnSupportedFilesCount = (message: string) => {\n  return message.split('\\n').length;\n};\n\nexport const isSupportedPreviewDocumentType = (fileExtension: string) => {\n  return SupportedPreviewDocumentTypes.includes(fileExtension);\n};\n\nexport const isImage = (image: string) => {\n  return [...Images, 'svg'].some((x) => x === image);\n};\n"],"names":["FileIconMap","doc","docx","pdf","xls","xlsx","ppt","pptx","jpg","jpeg","png","txt","csv","md","IconFont","_ref","name","className","_jsx","cn","children","xlinkHref","concat","FileIcon","_ref2","isFolder","type","getExtension","CheckboxFormMultiple","_ref$filters","filters","value","onChange","setOpen","fieldsDict","reduce","pre","cur","field","FormSchema","z","object","array","string","form","useForm","resolver","zodResolver","defaultValues","onReset","useCallback","useEffect","reset","Form","_objectSpread","_jsxs","onSubmit","handleSubmit","data","map","x","FormField","control","render","FormItem","FormLabel","label","list","item","_field$value","FormControl","Checkbox","checked","includes","id","onCheckedChange","_field$value2","_toConsumableArray","filter","count","FormMessage","Button","variant","size","onClick","FilterPopover","_ref3","_useState","useState","_useState2","_slicedToArray","open","Popover","onOpenChange","PopoverTrigger","asChild","PopoverContent","FilterButton","React","ref","_ref$count","props","_objectWithoutProperties","_excluded","ChevronDown","ListFilterBar","title","searchString","onSearchChange","_ref2$showFilter","showFilter","leftPanel","icon","filterCount","useMemo","_typeof","Object","values","length","SearchInput","CheckboxPrimitive","Check","displayName","_excluded2","_excluded3","_excluded4","FormProvider","FormItemContext","FormFieldContext","assign","_objectDestructuringEmpty","Provider","Controller","useFormField","fieldContext","itemContext","_useFormContext","useFormContext","getFieldState","formState","fieldState","Error","formItemId","formDescriptionId","formMessageId","InnerFormItem","tooltip","_useFormField","error","Label","htmlFor","FormTooltip","_ref4","_useFormField2","Slot","FormDescription","_ref5","_ref6","_useFormField4","body","String","message","labelVariants","cva","LabelPrimitive","PopoverPrimitive","_ref$align","align","_ref$sideOffset","sideOffset","buildChunkHighlights","selectedChunk","_selectedChunk$positi","Array","isArray","positions","every","boundingRect","width","height","x1","x2","y1","y2","uuid","comment","text","emoji","content","get","position","rects","pageNumber","_name$slice$toLowerCa","slice","lastIndexOf","toLowerCase","getUnSupportedFilesCount","split","isSupportedPreviewDocumentType","fileExtension","SupportedPreviewDocumentTypes","isImage","image","Images","some"],"sourceRoot":""}