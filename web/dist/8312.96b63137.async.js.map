{"version":3,"file":"8312.96b63137.async.js","mappings":"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","sources":["webpack:///./src/components/list-filter-bar/use-handle-filter-submit.ts","webpack:///./src/components/more-button.tsx","webpack:///./src/components/ui/badge.tsx","webpack:///./src/hooks/use-knowledge-request.ts","webpack:///./src/pages/datasets/dataset-dropdown.tsx","webpack:///./src/pages/datasets/dataset-card.tsx","webpack:///./src/pages/datasets/use-display-owner.ts","webpack:///./src/pages/datasets/use-rename-dataset.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { FilterChange, FilterValue } from './interface';\n\nexport function useHandleFilterSubmit() {\n  const [filterValue, setFilterValue] = useState<FilterValue>({});\n\n  const handleFilterSubmit: FilterChange = useCallback((value) => {\n    setFilterValue(value);\n  }, []);\n\n  return { filterValue, setFilterValue, handleFilterSubmit };\n}\n","import { cn } from '@/lib/utils';\nimport { Ellipsis } from 'lucide-react';\nimport React from 'react';\nimport { Button, ButtonProps } from './ui/button';\n\nexport const MoreButton = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, size, ...props }, ref) => {\n    return (\n      <Button\n        ref={ref}\n        variant=\"ghost\"\n        size={size || 'icon'}\n        className={cn('invisible group-hover:visible size-3.5', className)}\n        {...props}\n      >\n        <Ellipsis />\n      </Button>\n    );\n  },\n);\n","import { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary:\n          'border-transparent bg-background-card text-text-sub-title-invert hover:bg-secondary/80 rounded-md',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n        tertiary:\n          'border-transparent bg-colors-background-core-strong text-colors-text-persist-light hover:bg-colors-background-core-strong/80',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n","import { useHandleFilterSubmit } from '@/components/list-filter-bar/use-handle-filter-submit';\nimport {\n  IKnowledge,\n  IKnowledgeResult,\n  INextTestingResult,\n} from '@/interfaces/database/knowledge';\nimport { ITestRetrievalRequestBody } from '@/interfaces/request/knowledge';\nimport i18n from '@/locales/config';\nimport kbService, { listDataset } from '@/services/knowledge-service';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useDebounce } from 'ahooks';\nimport { message } from 'antd';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useParams } from 'umi';\nimport {\n  useGetPaginationWithRouter,\n  useHandleSearchChange,\n} from './logic-hooks';\n\nexport const enum KnowledgeApiAction {\n  TestRetrieval = 'testRetrieval',\n  FetchKnowledgeListByPage = 'fetchKnowledgeListByPage',\n  CreateKnowledge = 'createKnowledge',\n  DeleteKnowledge = 'deleteKnowledge',\n  SaveKnowledge = 'saveKnowledge',\n  FetchKnowledgeDetail = 'fetchKnowledgeDetail',\n}\n\nexport const useKnowledgeBaseId = () => {\n  const { id } = useParams();\n\n  return id;\n};\n\nexport const useTestRetrieval = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const [values, setValues] = useState<ITestRetrievalRequestBody>();\n  const mountedRef = useRef(false);\n  const { filterValue, handleFilterSubmit } = useHandleFilterSubmit();\n\n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n\n  const onPaginationChange = useCallback((page: number, pageSize: number) => {\n    setPage(page);\n    setPageSize(pageSize);\n  }, []);\n\n  const queryParams = useMemo(() => {\n    return {\n      ...values,\n      kb_id: values?.kb_id || knowledgeBaseId,\n      page,\n      size: pageSize,\n      doc_ids: filterValue.doc_ids,\n    };\n  }, [filterValue, knowledgeBaseId, page, pageSize, values]);\n\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<INextTestingResult>({\n    queryKey: [KnowledgeApiAction.TestRetrieval, queryParams, page, pageSize],\n    initialData: {\n      chunks: [],\n      doc_aggs: [],\n      total: 0,\n    },\n    enabled: false,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await kbService.retrieval_test(queryParams);\n      return data?.data ?? {};\n    },\n  });\n\n  useEffect(() => {\n    if (mountedRef.current) {\n      refetch();\n    }\n    mountedRef.current = true;\n  }, [page, pageSize, refetch, filterValue]);\n\n  return {\n    data,\n    loading,\n    setValues,\n    refetch,\n    onPaginationChange,\n    page,\n    pageSize,\n    handleFilterSubmit,\n    filterValue,\n  };\n};\n\nexport const useFetchNextKnowledgeListByPage = () => {\n  const { searchString, handleInputChange } = useHandleSearchChange();\n  const { pagination, setPagination } = useGetPaginationWithRouter();\n  const debouncedSearchString = useDebounce(searchString, { wait: 500 });\n  const { filterValue, handleFilterSubmit } = useHandleFilterSubmit();\n\n  const { data, isFetching: loading } = useQuery<IKnowledgeResult>({\n    queryKey: [\n      KnowledgeApiAction.FetchKnowledgeListByPage,\n      {\n        debouncedSearchString,\n        ...pagination,\n        filterValue,\n      },\n    ],\n    initialData: {\n      kbs: [],\n      total: 0,\n    },\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await listDataset(\n        {\n          keywords: debouncedSearchString,\n          page_size: pagination.pageSize,\n          page: pagination.current,\n        },\n        {\n          owner_ids: filterValue.owner,\n        },\n      );\n\n      return data?.data;\n    },\n  });\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => {\n      // setPagination({ page: 1 }); // TODO: 这里导致重复请求\n      handleInputChange(e);\n    },\n    [handleInputChange],\n  );\n\n  return {\n    ...data,\n    searchString,\n    handleInputChange: onInputChange,\n    pagination: { ...pagination, total: data?.total },\n    setPagination,\n    loading,\n    filterValue,\n    handleFilterSubmit,\n  };\n};\n\nexport const useCreateKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [KnowledgeApiAction.CreateKnowledge],\n    mutationFn: async (params: { id?: string; name: string }) => {\n      const { data = {} } = await kbService.createKb(params);\n      if (data.code === 0) {\n        message.success(\n          i18n.t(`message.${params?.id ? 'modified' : 'created'}`),\n        );\n        queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeList'] });\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, createKnowledge: mutateAsync };\n};\n\nexport const useDeleteKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [KnowledgeApiAction.DeleteKnowledge],\n    mutationFn: async (id: string) => {\n      const { data } = await kbService.rmKb({ kb_id: id });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.deleted`));\n        queryClient.invalidateQueries({\n          queryKey: [KnowledgeApiAction.FetchKnowledgeListByPage],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteKnowledge: mutateAsync };\n};\n\nexport const useUpdateKnowledge = (shouldFetchList = false) => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [KnowledgeApiAction.SaveKnowledge],\n    mutationFn: async (params: Record<string, any>) => {\n      const { data = {} } = await kbService.updateKb({\n        kb_id: params?.kb_id ? params?.kb_id : knowledgeBaseId,\n        ...params,\n      });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.updated`));\n        if (shouldFetchList) {\n          queryClient.invalidateQueries({\n            queryKey: [KnowledgeApiAction.FetchKnowledgeListByPage],\n          });\n        } else {\n          queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeDetail'] });\n        }\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, saveKnowledgeConfiguration: mutateAsync };\n};\n\nexport const useFetchKnowledgeBaseConfiguration = (refreshCount?: number) => {\n  const { id } = useParams();\n\n  let queryKey: (KnowledgeApiAction | number)[] = [\n    KnowledgeApiAction.FetchKnowledgeDetail,\n  ];\n  if (typeof refreshCount === 'number') {\n    queryKey = [KnowledgeApiAction.FetchKnowledgeDetail, refreshCount];\n  }\n\n  const { data, isFetching: loading } = useQuery<IKnowledge>({\n    queryKey,\n    initialData: {} as IKnowledge,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await kbService.get_kb_detail({\n        kb_id: id,\n      });\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n","import { ConfirmDeleteDialog } from '@/components/confirm-delete-dialog';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { useDeleteKnowledge } from '@/hooks/use-knowledge-request';\nimport { IKnowledge } from '@/interfaces/database/knowledge';\nimport { PenLine, Trash2 } from 'lucide-react';\nimport { MouseEventHandler, PropsWithChildren, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useRenameDataset } from './use-rename-dataset';\n\nexport function DatasetDropdown({\n  children,\n  showDatasetRenameModal,\n  dataset,\n}: PropsWithChildren &\n  Pick<ReturnType<typeof useRenameDataset>, 'showDatasetRenameModal'> & {\n    dataset: IKnowledge;\n  }) {\n  const { t } = useTranslation();\n  const { deleteKnowledge } = useDeleteKnowledge();\n\n  const handleShowDatasetRenameModal: MouseEventHandler<HTMLDivElement> =\n    useCallback(\n      (e) => {\n        e.stopPropagation();\n        showDatasetRenameModal(dataset);\n      },\n      [dataset, showDatasetRenameModal],\n    );\n\n  const handleDelete: MouseEventHandler<HTMLDivElement> = useCallback(() => {\n    deleteKnowledge(dataset.id);\n  }, [dataset.id, deleteKnowledge]);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>{children}</DropdownMenuTrigger>\n      <DropdownMenuContent>\n        <DropdownMenuItem onClick={handleShowDatasetRenameModal}>\n          {t('common.rename')} <PenLine />\n        </DropdownMenuItem>\n        <DropdownMenuSeparator />\n        <ConfirmDeleteDialog onOk={handleDelete}>\n          <DropdownMenuItem\n            className=\"text-text-delete-red\"\n            onSelect={(e) => {\n              e.preventDefault();\n            }}\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          >\n            {t('common.delete')} <Trash2 />\n          </DropdownMenuItem>\n        </ConfirmDeleteDialog>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n","import { MoreButton } from '@/components/more-button';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { useNavigatePage } from '@/hooks/logic-hooks/navigate-hooks';\nimport { IKnowledge } from '@/interfaces/database/knowledge';\nimport { formatDate } from '@/utils/date';\nimport { ChevronRight } from 'lucide-react';\nimport { DatasetDropdown } from './dataset-dropdown';\nimport { useDisplayOwnerName } from './use-display-owner';\nimport { useRenameDataset } from './use-rename-dataset';\n\nexport type DatasetCardProps = {\n  dataset: IKnowledge;\n} & Pick<ReturnType<typeof useRenameDataset>, 'showDatasetRenameModal'>;\n\nexport function DatasetCard({\n  dataset,\n  showDatasetRenameModal,\n}: DatasetCardProps) {\n  const { navigateToDataset } = useNavigatePage();\n  const displayOwnerName = useDisplayOwnerName();\n\n  const owner = displayOwnerName(dataset.tenant_id, dataset.nickname);\n\n  return (\n    <Card\n      key={dataset.id}\n      className=\"w-40\"\n      onClick={navigateToDataset(dataset.id)}\n    >\n      <CardContent className=\"p-2.5 pt-2 group\">\n        <section className=\"flex justify-between mb-2\">\n          <div className=\"flex gap-2 items-center\">\n            <Avatar className=\"size-6 rounded-lg\">\n              <AvatarImage src={dataset.avatar} />\n              <AvatarFallback className=\"rounded-lg \">CN</AvatarFallback>\n            </Avatar>\n            {owner && (\n              <Badge className=\"h-5 rounded-sm px-1 bg-background-badge text-text-badge\">\n                {owner}\n              </Badge>\n            )}\n          </div>\n          <DatasetDropdown\n            showDatasetRenameModal={showDatasetRenameModal}\n            dataset={dataset}\n          >\n            <MoreButton></MoreButton>\n          </DatasetDropdown>\n        </section>\n        <div className=\"flex justify-between items-end\">\n          <div className=\"w-full\">\n            <h3 className=\"text-lg font-semibold mb-2 line-clamp-1\">\n              {dataset.name}\n            </h3>\n            <p className=\"text-xs text-text-sub-title\">\n              {dataset.doc_num} files\n            </p>\n            <p className=\"text-xs text-text-sub-title\">\n              {formatDate(dataset.update_time)}\n            </p>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function SeeAllCard() {\n  const { navigateToDatasetList } = useNavigatePage();\n\n  return (\n    <Card\n      className=\"bg-colors-background-inverse-weak w-40\"\n      onClick={navigateToDatasetList}\n    >\n      <CardContent className=\"p-2.5 pt-1 w-full h-full flex items-center justify-center gap-1.5 text-text-sub-title\">\n        See All <ChevronRight className=\"size-4\" />\n      </CardContent>\n    </Card>\n  );\n}\n","import { useFetchTenantInfo } from '@/hooks/user-setting-hooks';\nimport { useCallback } from 'react';\n\nexport function useDisplayOwnerName() {\n  const { data } = useFetchTenantInfo();\n  const getOwnerName = useCallback(\n    (tenantId: string, nickname: string) => {\n      if (tenantId === data.tenant_id) {\n        return null;\n      }\n      return nickname;\n    },\n    [data.tenant_id],\n  );\n\n  return getOwnerName;\n}\n","import { useSetModalState } from '@/hooks/common-hooks';\nimport { useUpdateKnowledge } from '@/hooks/use-knowledge-request';\nimport { IKnowledge } from '@/interfaces/database/knowledge';\nimport { omit } from 'lodash';\nimport { useCallback, useState } from 'react';\n\nexport const useRenameDataset = () => {\n  const [dataset, setDataset] = useState<IKnowledge>({} as IKnowledge);\n  const {\n    visible: datasetRenameVisible,\n    hideModal: hideDatasetRenameModal,\n    showModal: showDatasetRenameModal,\n  } = useSetModalState();\n  const { saveKnowledgeConfiguration, loading } = useUpdateKnowledge(true);\n\n  const onDatasetRenameOk = useCallback(\n    async (name: string) => {\n      const ret = await saveKnowledgeConfiguration({\n        ...omit(dataset, [\n          'id',\n          'update_time',\n          'nickname',\n          'tenant_avatar',\n          'tenant_id',\n        ]),\n        kb_id: dataset.id,\n        name,\n      });\n\n      if (ret.code === 0) {\n        hideDatasetRenameModal();\n      }\n    },\n    [saveKnowledgeConfiguration, dataset, hideDatasetRenameModal],\n  );\n\n  const handleShowDatasetRenameModal = useCallback(\n    async (record: IKnowledge) => {\n      setDataset(record);\n      showDatasetRenameModal();\n    },\n    [showDatasetRenameModal],\n  );\n\n  return {\n    datasetRenameLoading: loading,\n    initialDatasetName: dataset?.name,\n    onDatasetRenameOk,\n    datasetRenameVisible,\n    hideDatasetRenameModal,\n    showDatasetRenameModal: handleShowDatasetRenameModal,\n  };\n};\n"],"names":["useHandleFilterSubmit","_useState","useState","_useState2","_slicedToArray","filterValue","setFilterValue","handleFilterSubmit","useCallback","value","MoreButton","React","_ref","ref","className","size","props","_objectWithoutProperties","_excluded","_jsx","Button","_objectSpread","variant","cn","children","Ellipsis","badgeVariants","cva","variants","default","secondary","destructive","outline","tertiary","defaultVariants","Badge","KnowledgeApiAction","useKnowledgeBaseId","useParams","id","useTestRetrieval","_queryFn","knowledgeBaseId","values","setValues","mountedRef","useRef","_useHandleFilterSubmi","_useState3","_useState4","page","setPage","_useState5","_useState6","pageSize","setPageSize","onPaginationChange","queryParams","useMemo","kb_id","doc_ids","_useQuery","useQuery","queryKey","initialData","chunks","doc_aggs","total","enabled","gcTime","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_yield$kbService$retr","data","wrap","_context","prev","next","kbService","retrieval_test","sent","abrupt","stop","apply","arguments","loading","isFetching","refetch","useEffect","current","useFetchNextKnowledgeListByPage","_queryFn2","_useHandleSearchChang","useHandleSearchChange","searchString","handleInputChange","_useGetPaginationWith","useGetPaginationWithRouter","pagination","setPagination","debouncedSearchString","useDebounce","wait","_useHandleFilterSubmi2","_useQuery2","kbs","_callee2","_yield$listDataset","_context2","listDataset","keywords","page_size","owner_ids","owner","onInputChange","e","useCreateKnowledge","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","_callee3","params","_yield$kbService$crea","_yield$kbService$crea2","_context3","createKb","code","message","success","i18n","t","concat","invalidateQueries","_x","isPending","createKnowledge","mutateAsync","useDeleteKnowledge","_mutationFn2","_useMutation2","_callee4","_data$data2","_yield$kbService$rmKb","_context4","rmKb","_x2","deleteKnowledge","useUpdateKnowledge","_mutationFn3","shouldFetchList","length","undefined","_useMutation3","_callee5","_yield$kbService$upda","_yield$kbService$upda2","_context5","updateKb","_x3","saveKnowledgeConfiguration","useFetchKnowledgeBaseConfiguration","refreshCount","_queryFn3","_useQuery3","_callee6","_data$data3","_yield$kbService$get_","_context6","get_kb_detail","DatasetDropdown","showDatasetRenameModal","dataset","useTranslation","handleShowDatasetRenameModal","stopPropagation","handleDelete","_jsxs","DropdownMenu","DropdownMenuTrigger","asChild","DropdownMenuContent","DropdownMenuItem","onClick","PenLine","DropdownMenuSeparator","ConfirmDeleteDialog","onOk","onSelect","preventDefault","Trash2","DatasetCard","navigateToDataset","useNavigatePage","useFetchTenantInfo","tenantId","nickname","tenant_id","Card","CardContent","Avatar","AvatarImage","src","avatar","AvatarFallback","name","doc_num","formatDate","update_time","SeeAllCard","navigateToDatasetList","ChevronRight","useRenameDataset","setDataset","_useSetModalState","useSetModalState","datasetRenameVisible","visible","hideDatasetRenameModal","hideModal","showModal","_useUpdateKnowledge","onDatasetRenameOk","omit","_ref2","record","datasetRenameLoading","initialDatasetName"],"sourceRoot":""}