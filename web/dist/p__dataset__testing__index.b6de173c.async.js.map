{"version":3,"file":"p__dataset__testing__index.b6de173c.async.js","mappings":"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","sources":["webpack:///./src/components/form-container.tsx","webpack:///./src/components/list-filter-bar/use-handle-filter-submit.ts","webpack:///./src/components/rerank.tsx","webpack:///./src/components/similarity-slider/index.tsx","webpack:///./src/components/slider-input-form-field.tsx","webpack:///./src/components/switch-fom-field.tsx","webpack:///./src/components/ui/badge.tsx","webpack:///./src/components/ui/command.tsx","webpack:///./src/components/ui/dialog.tsx","webpack:///./src/components/ui/dual-range-slider.tsx","webpack:///./src/components/ui/multi-select.tsx","webpack:///./src/components/ui/switch.tsx","webpack:///./src/components/ui/textarea.tsx","webpack:///./src/components/use-knowledge-graph-item.tsx","webpack:///./src/hooks/use-knowledge-request.ts","webpack:///./src/pages/dataset/dataset-title.tsx","webpack:///./src/components/cross-language-item-ui.tsx","webpack:///./src/pages/dataset/testing/testing-form.tsx","webpack:///./src/pages/dataset/testing/testing-result.tsx","webpack:///./src/pages/dataset/testing/index.tsx","webpack:///./src/services/knowledge-service.ts"],"sourcesContent":["import { cn } from '@/lib/utils';\nimport { PropsWithChildren } from 'react';\n\nexport type FormContainerProps = {\n  className?: string;\n  show?: boolean;\n} & PropsWithChildren;\n\nexport function FormContainer({\n  children,\n  show = true,\n  className,\n}: FormContainerProps) {\n  return show ? (\n    <section className={cn('border rounded-lg p-5 space-y-5', className)}>\n      {children}\n    </section>\n  ) : (\n    children\n  );\n}\n","import { useCallback, useState } from 'react';\nimport { FilterChange, FilterValue } from './interface';\n\nexport function useHandleFilterSubmit() {\n  const [filterValue, setFilterValue] = useState<FilterValue>({});\n\n  const handleFilterSubmit: FilterChange = useCallback((value) => {\n    setFilterValue(value);\n  }, []);\n\n  return { filterValue, setFilterValue, handleFilterSubmit };\n}\n","import { LlmModelType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useSelectLlmOptionsByModelType } from '@/hooks/llm-hooks';\nimport { Select as AntSelect, Form, message, Slider } from 'antd';\nimport { useCallback } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { z } from 'zod';\nimport { SliderInputFormField } from './slider-input-form-field';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\nimport { RAGFlowSelect } from './ui/select';\n\ntype FieldType = {\n  rerank_id?: string;\n  top_k?: number;\n};\n\nexport const RerankItem = () => {\n  const { t } = useTranslate('knowledgeDetails');\n  const allOptions = useSelectLlmOptionsByModelType();\n  const [messageApi, contextHolder] = message.useMessage();\n\n  const handleChange = useCallback(\n    (val: string) => {\n      if (val) {\n        messageApi.open({\n          type: 'warning',\n          content: t('reRankModelWaring'),\n        });\n      }\n    },\n    [messageApi, t],\n  );\n\n  return (\n    <>\n      {contextHolder}\n      <Form.Item\n        label={t('rerankModel')}\n        name={'rerank_id'}\n        tooltip={t('rerankTip')}\n      >\n        <AntSelect\n          options={allOptions[LlmModelType.Rerank]}\n          allowClear\n          placeholder={t('rerankPlaceholder')}\n          onChange={handleChange}\n        />\n      </Form.Item>\n    </>\n  );\n};\n\nexport const topKSchema = {\n  top_k: z.number().optional(),\n};\n\nexport const initialTopKValue = {\n  top_k: 1024,\n};\n\nconst Rerank = () => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <RerankItem></RerankItem>\n      <Form.Item noStyle dependencies={['rerank_id']}>\n        {({ getFieldValue }) => {\n          const rerankId = getFieldValue('rerank_id');\n          return (\n            rerankId && (\n              <Form.Item<FieldType>\n                label={t('topK')}\n                name={'top_k'}\n                initialValue={1024}\n                tooltip={t('topKTip')}\n              >\n                <Slider max={2048} min={1} />\n              </Form.Item>\n            )\n          );\n        }}\n      </Form.Item>\n    </>\n  );\n};\n\nexport default Rerank;\n\nconst RerankId = 'rerank_id';\n\nfunction RerankFormField() {\n  const form = useFormContext();\n  const { t } = useTranslate('knowledgeDetails');\n  const allOptions = useSelectLlmOptionsByModelType();\n  const options = allOptions[LlmModelType.Rerank];\n\n  return (\n    <FormField\n      control={form.control}\n      name={RerankId}\n      render={({ field }) => (\n        <FormItem>\n          <FormLabel tooltip={t('rerankTip')}>{t('rerankModel')}</FormLabel>\n          <FormControl>\n            <RAGFlowSelect\n              allowClear\n              {...field}\n              options={options}\n            ></RAGFlowSelect>\n          </FormControl>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n\nexport function RerankFormFields() {\n  const { watch } = useFormContext();\n  const { t } = useTranslate('knowledgeDetails');\n  const rerankId = watch(RerankId);\n\n  return (\n    <>\n      <RerankFormField></RerankFormField>\n      {rerankId && (\n        <SliderInputFormField\n          name={'top_k'}\n          label={t('topK')}\n          max={2048}\n          min={1}\n          tooltip={t('topKTip')}\n        ></SliderInputFormField>\n      )}\n    </>\n  );\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Slider } from 'antd';\nimport { z } from 'zod';\nimport { SliderInputFormField } from '../slider-input-form-field';\n\ntype FieldType = {\n  similarity_threshold?: number;\n  // vector_similarity_weight?: number;\n};\n\ninterface IProps {\n  isTooltipShown?: boolean;\n  vectorSimilarityWeightName?: string;\n}\n\nconst SimilaritySlider = ({\n  isTooltipShown = false,\n  vectorSimilarityWeightName = 'vector_similarity_weight',\n}: IProps) => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <Form.Item<FieldType>\n        label={t('similarityThreshold')}\n        name={'similarity_threshold'}\n        tooltip={isTooltipShown && t('similarityThresholdTip')}\n        initialValue={0.2}\n      >\n        <Slider max={1} step={0.01} />\n      </Form.Item>\n      <Form.Item\n        label={t('vectorSimilarityWeight')}\n        name={vectorSimilarityWeightName}\n        initialValue={1 - 0.3}\n        tooltip={isTooltipShown && t('vectorSimilarityWeightTip')}\n      >\n        <Slider max={1} step={0.01} />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default SimilaritySlider;\n\ninterface SimilaritySliderFormFieldProps {\n  vectorSimilarityWeightName?: string;\n  isTooltipShown?: boolean;\n}\n\nexport const initialSimilarityThresholdValue = {\n  similarity_threshold: 0.2,\n};\nexport const initialKeywordsSimilarityWeightValue = {\n  keywords_similarity_weight: 0.7,\n};\n\nexport const similarityThresholdSchema = { similarity_threshold: z.number() };\n\nexport const keywordsSimilarityWeightSchema = {\n  keywords_similarity_weight: z.number(),\n};\n\nexport function SimilaritySliderFormField({\n  vectorSimilarityWeightName = 'vector_similarity_weight',\n  isTooltipShown,\n}: SimilaritySliderFormFieldProps) {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <SliderInputFormField\n        name={'similarity_threshold'}\n        label={t('similarityThreshold')}\n        max={1}\n        step={0.01}\n        tooltip={isTooltipShown && t('similarityThresholdTip')}\n      ></SliderInputFormField>\n      <SliderInputFormField\n        name={vectorSimilarityWeightName}\n        label={t('vectorSimilarityWeight')}\n        max={1}\n        step={0.01}\n        tooltip={isTooltipShown && t('vectorSimilarityWeightTip')}\n      ></SliderInputFormField>\n    </>\n  );\n}\n","import { cn } from '@/lib/utils';\nimport { ReactNode } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { SingleFormSlider } from './ui/dual-range-slider';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\nimport { Input } from './ui/input';\n\ntype SliderInputFormFieldProps = {\n  max?: number;\n  min?: number;\n  step?: number;\n  name: string;\n  label: string;\n  tooltip?: ReactNode;\n  defaultValue?: number;\n  className?: string;\n};\n\nexport function SliderInputFormField({\n  max,\n  min,\n  step,\n  label,\n  name,\n  tooltip,\n  defaultValue,\n  className,\n}: SliderInputFormFieldProps) {\n  const form = useFormContext();\n\n  return (\n    <FormField\n      control={form.control}\n      name={name}\n      defaultValue={defaultValue || 0}\n      render={({ field }) => (\n        <FormItem className=\" items-center space-y-0 \">\n          <div className=\"flex items-center\">\n            <FormLabel\n              tooltip={tooltip}\n              className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n            >\n              {label}\n            </FormLabel>\n            <div\n              className={cn(\n                'flex items-center gap-14 justify-between',\n                'w-3/4',\n                className,\n              )}\n            >\n              <FormControl>\n                <SingleFormSlider\n                  {...field}\n                  max={max}\n                  min={min}\n                  step={step}\n                  // defaultValue={\n                  //   typeof defaultValue === 'number' ? [defaultValue] : undefined\n                  // }\n                ></SingleFormSlider>\n              </FormControl>\n              <FormControl>\n                <Input\n                  type={'number'}\n                  className=\"h-7 w-20\"\n                  max={max}\n                  min={min}\n                  step={step}\n                  {...field}\n                  onChange={(ev) => {\n                    const value = ev.target.value;\n                    field.onChange(value === '' ? 0 : Number(value)); // convert to number\n                  }}\n                  // defaultValue={defaultValue}\n                ></Input>\n              </FormControl>\n            </div>\n          </div>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n","import {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n} from '@/components/ui/form';\nimport { Switch } from '@/components/ui/switch';\nimport { cn } from '@/lib/utils';\nimport { ReactNode } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\ninterface SwitchFormItemProps {\n  name: string;\n  label: ReactNode;\n  vertical?: boolean;\n  tooltip?: ReactNode;\n}\n\nexport function SwitchFormField({\n  label,\n  name,\n  vertical = true,\n  tooltip,\n}: SwitchFormItemProps) {\n  const form = useFormContext();\n\n  return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem\n          className={cn('flex', {\n            'gap-2': vertical,\n            'flex-col': vertical,\n            'justify-between': !vertical,\n          })}\n        >\n          <FormLabel tooltip={tooltip}>{label}</FormLabel>\n          <FormControl>\n            <Switch\n              checked={field.value}\n              onCheckedChange={field.onChange}\n              aria-readonly\n              className=\"!m-0\"\n            />\n          </FormControl>\n        </FormItem>\n      )}\n    />\n  );\n}\n","import { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary:\n          'border-transparent bg-background-card text-text-sub-title-invert hover:bg-secondary/80 rounded-md',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n        tertiary:\n          'border-transparent bg-colors-background-core-strong text-colors-text-persist-light hover:bg-colors-background-core-strong/80',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n","'use client';\n\nimport { type DialogProps } from '@radix-ui/react-dialog';\nimport { Command as CommandPrimitive } from 'cmdk';\nimport { Search } from 'lucide-react';\nimport * as React from 'react';\n\nimport { Dialog, DialogContent } from '@/components/ui/dialog';\nimport { cn } from '@/lib/utils';\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      'flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground',\n      className,\n    )}\n    {...props}\n  />\n));\nCommand.displayName = CommandPrimitive.displayName;\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        'flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50',\n        className,\n      )}\n      {...props}\n    />\n  </div>\n));\n\nCommandInput.displayName = CommandPrimitive.Input.displayName;\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn('max-h-[300px] overflow-y-auto overflow-x-hidden', className)}\n    {...props}\n  />\n));\n\nCommandList.displayName = CommandPrimitive.List.displayName;\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n));\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName;\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      'overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground',\n      className,\n    )}\n    {...props}\n  />\n));\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName;\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 h-px bg-border', className)}\n    {...props}\n  />\n));\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName;\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className,\n    )}\n    {...props}\n  />\n));\n\nCommandItem.displayName = CommandPrimitive.Item.displayName;\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        'ml-auto text-xs tracking-widest text-muted-foreground',\n        className,\n      )}\n      {...props}\n    />\n  );\n};\nCommandShortcut.displayName = 'CommandShortcut';\n\nexport {\n  Command,\n  CommandDialog,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n  CommandShortcut,\n};\n","'use client';\n\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-colors-background-neutral-standard p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col space-y-1.5 text-center sm:text-left',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      'text-lg font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n","'use client';\n\nimport * as SliderPrimitive from '@radix-ui/react-slider';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\ninterface DualRangeSliderProps\n  extends React.ComponentProps<typeof SliderPrimitive.Root> {\n  labelPosition?: 'top' | 'bottom';\n  label?: (value: number | undefined) => React.ReactNode;\n}\n\nconst DualRangeSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  DualRangeSliderProps\n>(({ className, label, labelPosition = 'top', ...props }, ref) => {\n  const initialValue = Array.isArray(props.value)\n    ? props.value\n    : [props.min, props.max];\n\n  return (\n    <SliderPrimitive.Root\n      ref={ref}\n      className={cn(\n        'relative flex w-full touch-none select-none items-center',\n        className,\n      )}\n      {...props}\n    >\n      <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n        <SliderPrimitive.Range className=\"absolute h-full bg-background-checked\" />\n      </SliderPrimitive.Track>\n      {initialValue.map((value, index) => (\n        <React.Fragment key={index}>\n          <SliderPrimitive.Thumb className=\"relative block h-4 w-4 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 cursor-pointer\">\n            {label && (\n              <span\n                className={cn(\n                  'absolute flex w-full justify-center',\n                  labelPosition === 'top' && '-top-7',\n                  labelPosition === 'bottom' && 'top-4',\n                )}\n              >\n                {label(value)}\n              </span>\n            )}\n          </SliderPrimitive.Thumb>\n        </React.Fragment>\n      ))}\n    </SliderPrimitive.Root>\n  );\n});\nDualRangeSlider.displayName = 'DualRangeSlider';\n\ntype SingleSliderProps = Omit<\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>,\n  'onChange' | 'value'\n> & { onChange: (value: number) => void; value: number };\n\nconst SingleFormSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  SingleSliderProps\n>(({ value, onChange, ...props }, ref) => {\n  return (\n    <DualRangeSlider\n      ref={ref}\n      value={[value]}\n      onValueChange={(vals) => {\n        onChange(vals[0]);\n      }}\n      {...props}\n    />\n  );\n});\n\nexport { DualRangeSlider, SingleFormSlider };\n","// src/components/multi-select.tsx\n\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport {\n  CheckIcon,\n  ChevronDown,\n  WandSparkles,\n  XCircle,\n  XIcon,\n} from 'lucide-react';\nimport * as React from 'react';\n\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n} from '@/components/ui/command';\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\nimport { Separator } from '@/components/ui/separator';\nimport { cn } from '@/lib/utils';\n\n/**\n * Variants for the multi-select component to handle different styles.\n * Uses class-variance-authority (cva) to define different styles based on \"variant\" prop.\n */\nconst multiSelectVariants = cva(\n  'm-1 transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110 duration-300',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-foreground/10 text-foreground bg-card hover:bg-card/80',\n        secondary:\n          'border-foreground/10 bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        inverted: 'inverted',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\n/**\n * Props for MultiSelect component\n */\ninterface MultiSelectProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof multiSelectVariants> {\n  /**\n   * An array of option objects to be displayed in the multi-select component.\n   * Each option object has a label, value, and an optional icon.\n   */\n  options: {\n    /** The text to display for the option. */\n    label: string;\n    /** The unique value associated with the option. */\n    value: string;\n    /** Optional icon component to display alongside the option. */\n    icon?: React.ComponentType<{ className?: string }>;\n  }[];\n\n  /**\n   * Callback function triggered when the selected values change.\n   * Receives an array of the new selected values.\n   */\n  onValueChange: (value: string[]) => void;\n\n  /** The default selected values when the component mounts. */\n  defaultValue?: string[];\n\n  /**\n   * Placeholder text to be displayed when no values are selected.\n   * Optional, defaults to \"Select options\".\n   */\n  placeholder?: string;\n\n  /**\n   * Animation duration in seconds for the visual effects (e.g., bouncing badges).\n   * Optional, defaults to 0 (no animation).\n   */\n  animation?: number;\n\n  /**\n   * Maximum number of items to display. Extra selected items will be summarized.\n   * Optional, defaults to 3.\n   */\n  maxCount?: number;\n\n  /**\n   * The modality of the popover. When set to true, interaction with outside elements\n   * will be disabled and only popover content will be visible to screen readers.\n   * Optional, defaults to false.\n   */\n  modalPopover?: boolean;\n\n  /**\n   * If true, renders the multi-select component as a child of another component.\n   * Optional, defaults to false.\n   */\n  asChild?: boolean;\n\n  /**\n   * Additional class names to apply custom styles to the multi-select component.\n   * Optional, can be used to add custom styles.\n   */\n  className?: string;\n}\n\nexport const MultiSelect = React.forwardRef<\n  HTMLButtonElement,\n  MultiSelectProps\n>(\n  (\n    {\n      options,\n      onValueChange,\n      variant,\n      defaultValue = [],\n      placeholder = 'Select options',\n      animation = 0,\n      maxCount = 3,\n      modalPopover = false,\n      asChild = false,\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    const [selectedValues, setSelectedValues] =\n      React.useState<string[]>(defaultValue);\n    const [isPopoverOpen, setIsPopoverOpen] = React.useState(false);\n    const [isAnimating, setIsAnimating] = React.useState(false);\n\n    const handleInputKeyDown = (\n      event: React.KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key === 'Enter') {\n        setIsPopoverOpen(true);\n      } else if (event.key === 'Backspace' && !event.currentTarget.value) {\n        const newSelectedValues = [...selectedValues];\n        newSelectedValues.pop();\n        setSelectedValues(newSelectedValues);\n        onValueChange(newSelectedValues);\n      }\n    };\n\n    const toggleOption = (option: string) => {\n      const newSelectedValues = selectedValues.includes(option)\n        ? selectedValues.filter((value) => value !== option)\n        : [...selectedValues, option];\n      setSelectedValues(newSelectedValues);\n      onValueChange(newSelectedValues);\n    };\n\n    const handleClear = () => {\n      setSelectedValues([]);\n      onValueChange([]);\n    };\n\n    const handleTogglePopover = () => {\n      setIsPopoverOpen((prev) => !prev);\n    };\n\n    const clearExtraOptions = () => {\n      const newSelectedValues = selectedValues.slice(0, maxCount);\n      setSelectedValues(newSelectedValues);\n      onValueChange(newSelectedValues);\n    };\n\n    const toggleAll = () => {\n      if (selectedValues.length === options.length) {\n        handleClear();\n      } else {\n        const allValues = options.map((option) => option.value);\n        setSelectedValues(allValues);\n        onValueChange(allValues);\n      }\n    };\n\n    return (\n      <Popover\n        open={isPopoverOpen}\n        onOpenChange={setIsPopoverOpen}\n        modal={modalPopover}\n      >\n        <PopoverTrigger asChild>\n          <Button\n            ref={ref}\n            {...props}\n            onClick={handleTogglePopover}\n            className={cn(\n              'flex w-full p-1 rounded-md border min-h-10 h-auto items-center justify-between bg-inherit hover:bg-inherit [&_svg]:pointer-events-auto',\n              className,\n            )}\n          >\n            {selectedValues.length > 0 ? (\n              <div className=\"flex justify-between items-center w-full\">\n                <div className=\"flex flex-wrap items-center\">\n                  {selectedValues.slice(0, maxCount).map((value) => {\n                    const option = options.find((o) => o.value === value);\n                    const IconComponent = option?.icon;\n                    return (\n                      <Badge\n                        key={value}\n                        className={cn(\n                          isAnimating ? 'animate-bounce' : '',\n                          multiSelectVariants({ variant }),\n                        )}\n                        style={{ animationDuration: `${animation}s` }}\n                      >\n                        {IconComponent && (\n                          <IconComponent className=\"h-4 w-4 mr-2\" />\n                        )}\n                        {option?.label}\n                        <XCircle\n                          className=\"ml-2 h-4 w-4 cursor-pointer\"\n                          onClick={(event) => {\n                            event.stopPropagation();\n                            toggleOption(value);\n                          }}\n                        />\n                      </Badge>\n                    );\n                  })}\n                  {selectedValues.length > maxCount && (\n                    <Badge\n                      className={cn(\n                        'bg-transparent text-foreground border-foreground/1 hover:bg-transparent',\n                        isAnimating ? 'animate-bounce' : '',\n                        multiSelectVariants({ variant }),\n                      )}\n                      style={{ animationDuration: `${animation}s` }}\n                    >\n                      {`+ ${selectedValues.length - maxCount} more`}\n                      <XCircle\n                        className=\"ml-2 h-4 w-4 cursor-pointer\"\n                        onClick={(event) => {\n                          event.stopPropagation();\n                          clearExtraOptions();\n                        }}\n                      />\n                    </Badge>\n                  )}\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <XIcon\n                    className=\"h-4 mx-2 cursor-pointer text-muted-foreground\"\n                    onClick={(event) => {\n                      event.stopPropagation();\n                      handleClear();\n                    }}\n                  />\n                  <Separator\n                    orientation=\"vertical\"\n                    className=\"flex min-h-6 h-full\"\n                  />\n                  <ChevronDown className=\"h-4 mx-2 cursor-pointer text-muted-foreground\" />\n                </div>\n              </div>\n            ) : (\n              <div className=\"flex items-center justify-between w-full mx-auto\">\n                <span className=\"text-sm text-muted-foreground mx-3\">\n                  {placeholder}\n                </span>\n                <ChevronDown className=\"h-4 cursor-pointer text-muted-foreground mx-2\" />\n              </div>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent\n          className=\"w-auto p-0\"\n          align=\"start\"\n          onEscapeKeyDown={() => setIsPopoverOpen(false)}\n        >\n          <Command>\n            <CommandInput\n              placeholder=\"Search...\"\n              onKeyDown={handleInputKeyDown}\n            />\n            <CommandList>\n              <CommandEmpty>No results found.</CommandEmpty>\n              <CommandGroup>\n                <CommandItem\n                  key=\"all\"\n                  onSelect={toggleAll}\n                  className=\"cursor-pointer\"\n                >\n                  <div\n                    className={cn(\n                      'mr-2 flex h-4 w-4 items-center justify-center rounded-sm border border-primary',\n                      selectedValues.length === options.length\n                        ? 'bg-primary text-primary-foreground'\n                        : 'opacity-50 [&_svg]:invisible',\n                    )}\n                  >\n                    <CheckIcon className=\"h-4 w-4\" />\n                  </div>\n                  <span>(Select All)</span>\n                </CommandItem>\n                {options.map((option) => {\n                  const isSelected = selectedValues.includes(option.value);\n                  return (\n                    <CommandItem\n                      key={option.value}\n                      onSelect={() => toggleOption(option.value)}\n                      className=\"cursor-pointer\"\n                    >\n                      <div\n                        className={cn(\n                          'mr-2 flex h-4 w-4 items-center justify-center rounded-sm border border-primary',\n                          isSelected\n                            ? 'bg-primary text-primary-foreground'\n                            : 'opacity-50 [&_svg]:invisible',\n                        )}\n                      >\n                        <CheckIcon className=\"h-4 w-4\" />\n                      </div>\n                      {option.icon && (\n                        <option.icon className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                      )}\n                      <span>{option.label}</span>\n                    </CommandItem>\n                  );\n                })}\n              </CommandGroup>\n              <CommandSeparator />\n              <CommandGroup>\n                <div className=\"flex items-center justify-between\">\n                  {selectedValues.length > 0 && (\n                    <>\n                      <CommandItem\n                        onSelect={handleClear}\n                        className=\"flex-1 justify-center cursor-pointer\"\n                      >\n                        Clear\n                      </CommandItem>\n                      <Separator\n                        orientation=\"vertical\"\n                        className=\"flex min-h-6 h-full\"\n                      />\n                    </>\n                  )}\n                  <CommandItem\n                    onSelect={() => setIsPopoverOpen(false)}\n                    className=\"flex-1 justify-center cursor-pointer max-w-full\"\n                  >\n                    Close\n                  </CommandItem>\n                </div>\n              </CommandGroup>\n            </CommandList>\n          </Command>\n        </PopoverContent>\n        {animation > 0 && selectedValues.length > 0 && (\n          <WandSparkles\n            className={cn(\n              'cursor-pointer my-2 text-foreground bg-background w-3 h-3',\n              isAnimating ? '' : 'text-muted-foreground',\n            )}\n            onClick={() => setIsAnimating(!isAnimating)}\n          />\n        )}\n      </Popover>\n    );\n  },\n);\n\nMultiSelect.displayName = 'MultiSelect';\n","'use client';\n\nimport * as SwitchPrimitives from '@radix-ui/react-switch';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      'peer inline-flex h-3.5 w-6 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-background-checked data-[state=unchecked]:bg-text-sub-title',\n      className,\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        'pointer-events-none block size-3 rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-2 data-[state=unchecked]:translate-x-0',\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<'textarea'>\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        'flex min-h-[80px] w-full rounded-md border border-input bg-colors-background-inverse-weak px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm overflow-hidden',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nTextarea.displayName = 'Textarea';\n\nexport { Textarea };\n\ntype Value = string | readonly string[] | number | undefined;\n\nexport const BlurTextarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<'textarea'> & {\n    value: Value;\n    onChange(value: Value): void;\n  }\n>(({ value, onChange, ...props }, ref) => {\n  const [val, setVal] = React.useState<Value>();\n\n  const handleChange: React.ChangeEventHandler<HTMLTextAreaElement> =\n    React.useCallback((e) => {\n      setVal(e.target.value);\n    }, []);\n\n  const handleBlur: React.FocusEventHandler<HTMLTextAreaElement> =\n    React.useCallback(\n      (e) => {\n        onChange?.(e.target.value);\n      },\n      [onChange],\n    );\n\n  React.useEffect(() => {\n    setVal(value);\n  }, [value]);\n\n  return (\n    <Textarea\n      {...props}\n      value={val}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      ref={ref}\n    ></Textarea>\n  );\n});\n","import { Form, Switch } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { SwitchFormField } from './switch-fom-field';\n\ntype IProps = {\n  filedName: string[] | string;\n};\n\nexport function UseKnowledgeGraphItem({ filedName }: IProps) {\n  const { t } = useTranslation();\n\n  return (\n    <Form.Item\n      label={t('chat.useKnowledgeGraph')}\n      tooltip={t('chat.useKnowledgeGraphTip')}\n      name={filedName}\n      initialValue={false}\n    >\n      <Switch></Switch>\n    </Form.Item>\n  );\n}\n\ninterface UseKnowledgeGraphFormFieldProps {\n  name: string;\n}\n\nexport function UseKnowledgeGraphFormField({\n  name,\n}: UseKnowledgeGraphFormFieldProps) {\n  const { t } = useTranslation();\n\n  return (\n    <SwitchFormField\n      name={name}\n      label={t('chat.useKnowledgeGraph')}\n      tooltip={t('chat.useKnowledgeGraphTip')}\n    ></SwitchFormField>\n  );\n}\n","import { useHandleFilterSubmit } from '@/components/list-filter-bar/use-handle-filter-submit';\nimport {\n  IKnowledge,\n  IKnowledgeResult,\n  INextTestingResult,\n} from '@/interfaces/database/knowledge';\nimport { ITestRetrievalRequestBody } from '@/interfaces/request/knowledge';\nimport i18n from '@/locales/config';\nimport kbService, { listDataset } from '@/services/knowledge-service';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useDebounce } from 'ahooks';\nimport { message } from 'antd';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useParams } from 'umi';\nimport {\n  useGetPaginationWithRouter,\n  useHandleSearchChange,\n} from './logic-hooks';\n\nexport const enum KnowledgeApiAction {\n  TestRetrieval = 'testRetrieval',\n  FetchKnowledgeListByPage = 'fetchKnowledgeListByPage',\n  CreateKnowledge = 'createKnowledge',\n  DeleteKnowledge = 'deleteKnowledge',\n  SaveKnowledge = 'saveKnowledge',\n  FetchKnowledgeDetail = 'fetchKnowledgeDetail',\n}\n\nexport const useKnowledgeBaseId = () => {\n  const { id } = useParams();\n\n  return id;\n};\n\nexport const useTestRetrieval = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const [values, setValues] = useState<ITestRetrievalRequestBody>();\n  const mountedRef = useRef(false);\n  const { filterValue, handleFilterSubmit } = useHandleFilterSubmit();\n\n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n\n  const onPaginationChange = useCallback((page: number, pageSize: number) => {\n    setPage(page);\n    setPageSize(pageSize);\n  }, []);\n\n  const queryParams = useMemo(() => {\n    return {\n      ...values,\n      kb_id: values?.kb_id || knowledgeBaseId,\n      page,\n      size: pageSize,\n      doc_ids: filterValue.doc_ids,\n    };\n  }, [filterValue, knowledgeBaseId, page, pageSize, values]);\n\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<INextTestingResult>({\n    queryKey: [KnowledgeApiAction.TestRetrieval, queryParams, page, pageSize],\n    initialData: {\n      chunks: [],\n      doc_aggs: [],\n      total: 0,\n    },\n    enabled: false,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await kbService.retrieval_test(queryParams);\n      return data?.data ?? {};\n    },\n  });\n\n  useEffect(() => {\n    if (mountedRef.current) {\n      refetch();\n    }\n    mountedRef.current = true;\n  }, [page, pageSize, refetch, filterValue]);\n\n  return {\n    data,\n    loading,\n    setValues,\n    refetch,\n    onPaginationChange,\n    page,\n    pageSize,\n    handleFilterSubmit,\n    filterValue,\n  };\n};\n\nexport const useFetchNextKnowledgeListByPage = () => {\n  const { searchString, handleInputChange } = useHandleSearchChange();\n  const { pagination, setPagination } = useGetPaginationWithRouter();\n  const debouncedSearchString = useDebounce(searchString, { wait: 500 });\n  const { filterValue, handleFilterSubmit } = useHandleFilterSubmit();\n\n  const { data, isFetching: loading } = useQuery<IKnowledgeResult>({\n    queryKey: [\n      KnowledgeApiAction.FetchKnowledgeListByPage,\n      {\n        debouncedSearchString,\n        ...pagination,\n        filterValue,\n      },\n    ],\n    initialData: {\n      kbs: [],\n      total: 0,\n    },\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await listDataset(\n        {\n          keywords: debouncedSearchString,\n          page_size: pagination.pageSize,\n          page: pagination.current,\n        },\n        {\n          owner_ids: filterValue.owner,\n        },\n      );\n\n      return data?.data;\n    },\n  });\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => {\n      // setPagination({ page: 1 }); // TODO: 这里导致重复请求\n      handleInputChange(e);\n    },\n    [handleInputChange],\n  );\n\n  return {\n    ...data,\n    searchString,\n    handleInputChange: onInputChange,\n    pagination: { ...pagination, total: data?.total },\n    setPagination,\n    loading,\n    filterValue,\n    handleFilterSubmit,\n  };\n};\n\nexport const useCreateKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [KnowledgeApiAction.CreateKnowledge],\n    mutationFn: async (params: { id?: string; name: string }) => {\n      const { data = {} } = await kbService.createKb(params);\n      if (data.code === 0) {\n        message.success(\n          i18n.t(`message.${params?.id ? 'modified' : 'created'}`),\n        );\n        queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeList'] });\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, createKnowledge: mutateAsync };\n};\n\nexport const useDeleteKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [KnowledgeApiAction.DeleteKnowledge],\n    mutationFn: async (id: string) => {\n      const { data } = await kbService.rmKb({ kb_id: id });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.deleted`));\n        queryClient.invalidateQueries({\n          queryKey: [KnowledgeApiAction.FetchKnowledgeListByPage],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteKnowledge: mutateAsync };\n};\n\nexport const useUpdateKnowledge = (shouldFetchList = false) => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [KnowledgeApiAction.SaveKnowledge],\n    mutationFn: async (params: Record<string, any>) => {\n      const { data = {} } = await kbService.updateKb({\n        kb_id: params?.kb_id ? params?.kb_id : knowledgeBaseId,\n        ...params,\n      });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.updated`));\n        if (shouldFetchList) {\n          queryClient.invalidateQueries({\n            queryKey: [KnowledgeApiAction.FetchKnowledgeListByPage],\n          });\n        } else {\n          queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeDetail'] });\n        }\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, saveKnowledgeConfiguration: mutateAsync };\n};\n\nexport const useFetchKnowledgeBaseConfiguration = (refreshCount?: number) => {\n  const { id } = useParams();\n\n  let queryKey: (KnowledgeApiAction | number)[] = [\n    KnowledgeApiAction.FetchKnowledgeDetail,\n  ];\n  if (typeof refreshCount === 'number') {\n    queryKey = [KnowledgeApiAction.FetchKnowledgeDetail, refreshCount];\n  }\n\n  const { data, isFetching: loading } = useQuery<IKnowledge>({\n    queryKey,\n    initialData: {} as IKnowledge,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await kbService.get_kb_detail({\n        kb_id: id,\n      });\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n","import { ReactNode } from 'react';\n\ntype TopTitleProps = {\n  title: ReactNode;\n  description: ReactNode;\n};\n\nexport function TopTitle({ title, description }: TopTitleProps) {\n  return (\n    <div className=\"pb-5\">\n      <div className=\"text-2xl font-semibold\">{title}</div>\n      <p className=\"text-text-sub-title pt-2\">{description}</p>\n    </div>\n  );\n}\n","import { FormLabel } from '@/components/ui/form';\nimport { MultiSelect } from '@/components/ui/multi-select';\nimport { useTranslation } from 'react-i18next';\n\nconst Languages = [\n  'English',\n  'Chinese',\n  'Spanish',\n  'French',\n  'German',\n  'Japanese',\n  'Korean',\n];\n\nconst options = Languages.map((x) => ({ label: x, value: x }));\n\ntype CrossLanguageItemProps = {\n  name?: string | Array<string>;\n  onChange: (arg: string[]) => void;\n};\n\nexport const CrossLanguageItem = ({\n  name = ['prompt_config', 'cross_languages'],\n  onChange = () => {},\n}: CrossLanguageItemProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <div className=\"pb-2\">\n        <FormLabel tooltip={t('chat.crossLanguageTip')}>\n          {t('chat.crossLanguage')}\n        </FormLabel>\n      </div>\n      <MultiSelect\n        options={options}\n        onValueChange={(val) => {\n          onChange(val);\n        }}\n        //   defaultValue={field.value}\n        placeholder={t('fileManager.pleaseSelect')}\n        maxCount={100}\n        //   {...field}\n        modalPopover\n      />\n    </div>\n  );\n};\n","'use client';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { z } from 'zod';\n\nimport { CrossLanguageItem } from '@/components/cross-language-item-ui';\nimport { FormContainer } from '@/components/form-container';\nimport {\n  initialTopKValue,\n  RerankFormFields,\n  topKSchema,\n} from '@/components/rerank';\nimport {\n  initialKeywordsSimilarityWeightValue,\n  initialSimilarityThresholdValue,\n  keywordsSimilarityWeightSchema,\n  SimilaritySliderFormField,\n  similarityThresholdSchema,\n} from '@/components/similarity-slider';\nimport { ButtonLoading } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Textarea } from '@/components/ui/textarea';\nimport { UseKnowledgeGraphFormField } from '@/components/use-knowledge-graph-item';\nimport { useTestRetrieval } from '@/hooks/use-knowledge-request';\nimport { trim } from 'lodash';\nimport { CirclePlay } from 'lucide-react';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ntype TestingFormProps = Pick<\n  ReturnType<typeof useTestRetrieval>,\n  'loading' | 'refetch' | 'setValues'\n>;\n\nexport default function TestingForm({\n  loading,\n  refetch,\n  setValues,\n}: TestingFormProps) {\n  const { t } = useTranslation();\n  const [cross_languages, setCrossLangArr] = useState<string[]>([]);\n\n  const formSchema = z.object({\n    question: z.string().min(1, {\n      message: t('knowledgeDetails.testTextPlaceholder'),\n    }),\n    ...similarityThresholdSchema,\n    ...keywordsSimilarityWeightSchema,\n    ...topKSchema,\n  });\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      ...initialSimilarityThresholdValue,\n      ...initialKeywordsSimilarityWeightValue,\n      ...initialTopKValue,\n    },\n  });\n\n  const question = form.watch('question');\n\n  const values = useWatch({ control: form.control });\n\n  useEffect(() => {\n    // setValues(values as Required<z.infer<typeof formSchema>>);\n    setValues({ ...values, cross_languages });\n  }, [setValues, values, cross_languages]);\n\n  function onSubmit() {\n    refetch();\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormContainer className=\"p-10\">\n          <SimilaritySliderFormField\n            vectorSimilarityWeightName=\"keywords_similarity_weight\"\n            isTooltipShown\n          ></SimilaritySliderFormField>\n          <RerankFormFields></RerankFormFields>\n          <UseKnowledgeGraphFormField name=\"use_kg\"></UseKnowledgeGraphFormField>\n          <CrossLanguageItem\n            name={'cross_languages'}\n            onChange={(valArr) => {\n              setCrossLangArr(valArr);\n            }}\n          ></CrossLanguageItem>\n        </FormContainer>\n        <FormField\n          control={form.control}\n          name=\"question\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('knowledgeDetails.testText')}</FormLabel>\n              <FormControl>\n                <Textarea\n                  {...field}\n                  className=\"bg-colors-background-inverse-weak\"\n                ></Textarea>\n              </FormControl>\n\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <div className=\"flex justify-end\">\n          <ButtonLoading\n            type=\"submit\"\n            disabled={!!!trim(question)}\n            loading={loading}\n          >\n            {!loading && <CirclePlay />}\n            {t('knowledgeDetails.testingLabel')}\n          </ButtonLoading>\n        </div>\n      </form>\n    </Form>\n  );\n}\n","import { FormContainer } from '@/components/form-container';\nimport { FilterButton } from '@/components/list-filter-bar';\nimport { FilterPopover } from '@/components/list-filter-bar/filter-popover';\nimport { FilterCollection } from '@/components/list-filter-bar/interface';\nimport { RAGFlowPagination } from '@/components/ui/ragflow-pagination';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useTestRetrieval } from '@/hooks/use-knowledge-request';\nimport { ITestingChunk } from '@/interfaces/database/knowledge';\nimport camelCase from 'lodash/camelCase';\nimport { useMemo } from 'react';\n\nconst similarityList: Array<{ field: keyof ITestingChunk; label: string }> = [\n  { field: 'similarity', label: 'Hybrid Similarity' },\n  { field: 'term_similarity', label: 'Term Similarity' },\n  { field: 'vector_similarity', label: 'Vector Similarity' },\n];\n\nconst ChunkTitle = ({ item }: { item: ITestingChunk }) => {\n  const { t } = useTranslate('knowledgeDetails');\n  return (\n    <div className=\"flex gap-3 text-xs text-text-sub-title-invert italic\">\n      {similarityList.map((x) => (\n        <div key={x.field} className=\"space-x-1\">\n          <span>{((item[x.field] as number) * 100).toFixed(2)}</span>\n          <span>{t(camelCase(x.field))}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\ntype TestingResultProps = Pick<\n  ReturnType<typeof useTestRetrieval>,\n  | 'data'\n  | 'filterValue'\n  | 'handleFilterSubmit'\n  | 'page'\n  | 'pageSize'\n  | 'onPaginationChange'\n>;\n\nexport function TestingResult({\n  filterValue,\n  handleFilterSubmit,\n  page,\n  pageSize,\n  onPaginationChange,\n  data,\n}: TestingResultProps) {\n  const filters: FilterCollection[] = useMemo(() => {\n    return [\n      {\n        field: 'doc_ids',\n        label: 'File',\n        list:\n          data.doc_aggs?.map((x) => ({\n            id: x.doc_id,\n            label: x.doc_name,\n            count: x.count,\n          })) ?? [],\n      },\n    ];\n  }, [data.doc_aggs]);\n\n  return (\n    <div className=\"p-4 flex-1\">\n      <div className=\"flex justify-between pb-2.5\">\n        <span className=\"text-text-title font-semibold text-2xl\">\n          Test results\n        </span>\n        <FilterPopover\n          filters={filters}\n          onChange={handleFilterSubmit}\n          value={filterValue}\n        >\n          <FilterButton></FilterButton>\n        </FilterPopover>\n      </div>\n      <section className=\"flex flex-col gap-5 overflow-auto h-[76vh] mb-5\">\n        {data.chunks?.map((x) => (\n          <FormContainer key={x.chunk_id} className=\"px-5 py-2.5\">\n            <ChunkTitle item={x}></ChunkTitle>\n            <p className=\"!mt-2.5\"> {x.content_with_weight}</p>\n          </FormContainer>\n        ))}\n      </section>\n      <RAGFlowPagination\n        total={data.total}\n        onChange={onPaginationChange}\n        current={page}\n        pageSize={pageSize}\n      ></RAGFlowPagination>\n    </div>\n  );\n}\n","import { useTestRetrieval } from '@/hooks/use-knowledge-request';\nimport { useCallback, useState } from 'react';\nimport { TopTitle } from '../dataset-title';\nimport TestingForm from './testing-form';\nimport { TestingResult } from './testing-result';\n\nfunction Vertical() {\n  return <div>xxx</div>;\n}\n\nexport default function RetrievalTesting() {\n  const {\n    loading,\n    setValues,\n    refetch,\n    data,\n    onPaginationChange,\n    page,\n    pageSize,\n    handleFilterSubmit,\n    filterValue,\n  } = useTestRetrieval();\n\n  const [count, setCount] = useState(1);\n\n  const addCount = useCallback(() => {\n    setCount(2);\n  }, []);\n\n  const removeCount = useCallback(() => {\n    setCount(1);\n  }, []);\n\n  return (\n    <div className=\"p-5\">\n      <section className=\"flex justify-between items-center\">\n        <TopTitle\n          title={'Configuration'}\n          description={`  Update your knowledge base configuration here, particularly the chunk\n                  method.`}\n        ></TopTitle>\n        {/* <Button>Save as Preset</Button> */}\n      </section>\n      {count === 1 ? (\n        <section className=\"flex divide-x h-full\">\n          <div className=\"p-4 flex-1\">\n            <div className=\"flex justify-between pb-2.5\">\n              <span className=\"text-text-title font-semibold text-2xl\">\n                Test setting\n              </span>\n              {/* <Button variant={'outline'} onClick={addCount}>\n                <Plus /> Add New Test\n              </Button> */}\n            </div>\n            <TestingForm\n              loading={loading}\n              setValues={setValues}\n              refetch={refetch}\n            ></TestingForm>\n          </div>\n          <TestingResult\n            data={data}\n            page={page}\n            pageSize={pageSize}\n            filterValue={filterValue}\n            handleFilterSubmit={handleFilterSubmit}\n            onPaginationChange={onPaginationChange}\n          ></TestingResult>\n        </section>\n      ) : (\n        <section className=\"flex gap-2\">\n          <div className=\"flex-1\">\n            <TestingForm\n              loading={loading}\n              setValues={setValues}\n              refetch={refetch}\n            ></TestingForm>\n            <TestingResult\n              data={data}\n              page={page}\n              pageSize={pageSize}\n              filterValue={filterValue}\n              handleFilterSubmit={handleFilterSubmit}\n              onPaginationChange={onPaginationChange}\n            ></TestingResult>\n          </div>\n          <div className=\"flex-1\">\n            <TestingForm\n              loading={loading}\n              setValues={setValues}\n              refetch={refetch}\n            ></TestingForm>\n            <TestingResult\n              data={data}\n              page={page}\n              pageSize={pageSize}\n              filterValue={filterValue}\n              handleFilterSubmit={handleFilterSubmit}\n              onPaginationChange={onPaginationChange}\n            ></TestingResult>\n          </div>\n        </section>\n      )}\n    </div>\n  );\n}\n","import { IRenameTag } from '@/interfaces/database/knowledge';\nimport {\n  IFetchDocumentListRequestBody,\n  IFetchKnowledgeListRequestBody,\n  IFetchKnowledgeListRequestParams,\n} from '@/interfaces/request/knowledge';\nimport api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request, { post } from '@/utils/request';\n\nconst {\n  create_kb,\n  update_kb,\n  rm_kb,\n  get_kb_detail,\n  kb_list,\n  get_document_list,\n  document_change_status,\n  document_rm,\n  document_delete,\n  document_create,\n  document_change_parser,\n  document_thumbnails,\n  chunk_list,\n  create_chunk,\n  set_chunk,\n  get_chunk,\n  switch_chunk,\n  rm_chunk,\n  retrieval_test,\n  document_rename,\n  document_run,\n  document_upload,\n  web_crawl,\n  knowledge_graph,\n  document_infos,\n  upload_and_parse,\n  listTagByKnowledgeIds,\n  setMeta,\n} = api;\n\nconst methods = {\n  // 知识库管理\n  createKb: {\n    url: create_kb,\n    method: 'post',\n  },\n  updateKb: {\n    url: update_kb,\n    method: 'post',\n  },\n  rmKb: {\n    url: rm_kb,\n    method: 'post',\n  },\n  get_kb_detail: {\n    url: get_kb_detail,\n    method: 'get',\n  },\n  getList: {\n    url: kb_list,\n    method: 'post',\n  },\n  // document manager\n  get_document_list: {\n    url: get_document_list,\n    method: 'get',\n  },\n  document_change_status: {\n    url: document_change_status,\n    method: 'post',\n  },\n  document_rm: {\n    url: document_rm,\n    method: 'post',\n  },\n  document_rename: {\n    url: document_rename,\n    method: 'post',\n  },\n  document_create: {\n    url: document_create,\n    method: 'post',\n  },\n  document_run: {\n    url: document_run,\n    method: 'post',\n  },\n  document_change_parser: {\n    url: document_change_parser,\n    method: 'post',\n  },\n  document_thumbnails: {\n    url: document_thumbnails,\n    method: 'get',\n  },\n  document_upload: {\n    url: document_upload,\n    method: 'post',\n  },\n  web_crawl: {\n    url: web_crawl,\n    method: 'post',\n  },\n  document_infos: {\n    url: document_infos,\n    method: 'post',\n  },\n  setMeta: {\n    url: setMeta,\n    method: 'post',\n  },\n  // chunk管理\n  chunk_list: {\n    url: chunk_list,\n    method: 'post',\n  },\n  create_chunk: {\n    url: create_chunk,\n    method: 'post',\n  },\n  set_chunk: {\n    url: set_chunk,\n    method: 'post',\n  },\n  get_chunk: {\n    url: get_chunk,\n    method: 'get',\n  },\n  switch_chunk: {\n    url: switch_chunk,\n    method: 'post',\n  },\n  rm_chunk: {\n    url: rm_chunk,\n    method: 'post',\n  },\n  retrieval_test: {\n    url: retrieval_test,\n    method: 'post',\n  },\n  knowledge_graph: {\n    url: knowledge_graph,\n    method: 'get',\n  },\n  document_delete: {\n    url: document_delete,\n    method: 'delete',\n  },\n  upload_and_parse: {\n    url: upload_and_parse,\n    method: 'post',\n  },\n  listTagByKnowledgeIds: {\n    url: listTagByKnowledgeIds,\n    method: 'get',\n  },\n};\n\nconst kbService = registerServer<keyof typeof methods>(methods, request);\n\nexport const listTag = (knowledgeId: string) =>\n  request.get(api.listTag(knowledgeId));\n\nexport const removeTag = (knowledgeId: string, tags: string[]) =>\n  post(api.removeTag(knowledgeId), { tags });\n\nexport const renameTag = (\n  knowledgeId: string,\n  { fromTag, toTag }: IRenameTag,\n) => post(api.renameTag(knowledgeId), { fromTag, toTag });\n\nexport function getKnowledgeGraph(knowledgeId: string) {\n  return request.get(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport function deleteKnowledgeGraph(knowledgeId: string) {\n  return request.delete(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport const listDataset = (\n  params?: IFetchKnowledgeListRequestParams,\n  body?: IFetchKnowledgeListRequestBody,\n) => request.post(api.kb_list, { data: body || {}, params });\n\nexport const listDocument = (\n  params?: IFetchKnowledgeListRequestParams,\n  body?: IFetchDocumentListRequestBody,\n) => request.post(api.get_document_list, { data: body || {}, params });\n\nexport default kbService;\n"],"names":["FormContainer","_ref","children","_ref$show","show","className","_jsx","cn","useHandleFilterSubmit","_useState","useState","_useState2","_slicedToArray","filterValue","setFilterValue","handleFilterSubmit","useCallback","value","RerankItem","t","useTranslate","allOptions","useSelectLlmOptionsByModelType","_message$useMessage","message","useMessage","_message$useMessage2","messageApi","contextHolder","handleChange","val","open","type","content","_jsxs","_Fragment","Form","Item","label","name","tooltip","AntSelect","options","LlmModelType","Rerank","allowClear","placeholder","onChange","topKSchema","top_k","z","number","optional","initialTopKValue","noStyle","dependencies","getFieldValue","initialValue","Slider","max","min","RerankId","RerankFormField","form","useFormContext","FormField","control","render","_ref2","field","FormItem","FormLabel","FormControl","RAGFlowSelect","_objectSpread","FormMessage","RerankFormFields","watch","rerankId","SliderInputFormField","_ref$isTooltipShown","isTooltipShown","_ref$vectorSimilarity","vectorSimilarityWeightName","step","initialSimilarityThresholdValue","similarity_threshold","initialKeywordsSimilarityWeightValue","keywords_similarity_weight","similarityThresholdSchema","keywordsSimilarityWeightSchema","SimilaritySliderFormField","_ref2$vectorSimilarit","defaultValue","SingleFormSlider","Input","ev","target","Number","SwitchFormField","_ref$vertical","vertical","Switch","checked","onCheckedChange","badgeVariants","cva","variants","variant","default","secondary","destructive","outline","tertiary","defaultVariants","Badge","props","_objectWithoutProperties","_excluded","_excluded3","_excluded4","_excluded5","_excluded6","_excluded7","Command","React","ref","CommandPrimitive","displayName","CommandInput","_ref3","Search","CommandList","_ref4","List","CommandEmpty","Empty","CommandGroup","_ref5","Group","CommandSeparator","_ref6","Separator","CommandItem","_ref7","_excluded2","Dialog","DialogPrimitive","DialogTrigger","DialogPortal","DialogOverlay","DialogContent","X","DialogHeader","DialogFooter","DialogTitle","DualRangeSlider","_ref$labelPosition","labelPosition","Array","isArray","SliderPrimitive","map","index","onValueChange","vals","multiSelectVariants","inverted","MultiSelect","_ref$defaultValue","_ref$placeholder","_ref$animation","animation","_ref$maxCount","maxCount","_ref$modalPopover","modalPopover","asChild","_React$useState","_React$useState2","selectedValues","setSelectedValues","_React$useState3","_React$useState4","isPopoverOpen","setIsPopoverOpen","_React$useState5","_React$useState6","isAnimating","setIsAnimating","toggleOption","option","newSelectedValues","includes","filter","concat","_toConsumableArray","handleClear","Popover","onOpenChange","modal","PopoverTrigger","Button","onClick","prev","length","slice","find","o","IconComponent","icon","style","animationDuration","XCircle","event","stopPropagation","XIcon","orientation","ChevronDown","PopoverContent","align","onEscapeKeyDown","onKeyDown","key","currentTarget","pop","onSelect","allValues","CheckIcon","isSelected","WandSparkles","SwitchPrimitives","Textarea","BlurTextarea","setVal","e","handleBlur","onBlur","UseKnowledgeGraphItem","filedName","useTranslation","UseKnowledgeGraphFormField","KnowledgeApiAction","useKnowledgeBaseId","useParams","id","useTestRetrieval","_queryFn","knowledgeBaseId","values","setValues","mountedRef","useRef","_useHandleFilterSubmi","_useState3","_useState4","page","setPage","_useState5","_useState6","pageSize","setPageSize","onPaginationChange","queryParams","useMemo","kb_id","size","doc_ids","_useQuery","useQuery","queryKey","initialData","chunks","doc_aggs","total","enabled","gcTime","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_yield$kbService$retr","data","wrap","_context","next","kbService","retrieval_test","sent","abrupt","stop","apply","arguments","loading","isFetching","refetch","useEffect","current","useFetchNextKnowledgeListByPage","_queryFn2","_useHandleSearchChang","useHandleSearchChange","searchString","handleInputChange","_useGetPaginationWith","useGetPaginationWithRouter","pagination","setPagination","debouncedSearchString","useDebounce","wait","_useHandleFilterSubmi2","_useQuery2","kbs","_callee2","_yield$listDataset","_context2","listDataset","keywords","page_size","owner_ids","owner","onInputChange","useCreateKnowledge","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","_callee3","params","_yield$kbService$crea","_yield$kbService$crea2","_context3","createKb","code","success","i18n","invalidateQueries","_x","isPending","createKnowledge","mutateAsync","useDeleteKnowledge","_mutationFn2","_useMutation2","_callee4","_data$data2","_yield$kbService$rmKb","_context4","rmKb","_x2","deleteKnowledge","useUpdateKnowledge","_mutationFn3","shouldFetchList","undefined","_useMutation3","_callee5","_yield$kbService$upda","_yield$kbService$upda2","_context5","updateKb","_x3","saveKnowledgeConfiguration","useFetchKnowledgeBaseConfiguration","refreshCount","_queryFn3","_useQuery3","_callee6","_data$data3","_yield$kbService$get_","_context6","get_kb_detail","TopTitle","title","description","x","CrossLanguageItem","_ref$onChange","TestingForm","cross_languages","setCrossLangArr","formSchema","object","question","string","useForm","resolver","zodResolver","defaultValues","useWatch","onSubmit","handleSubmit","valArr","ButtonLoading","disabled","trim","CirclePlay","similarityList","ChunkTitle","item","toFixed","camelCase","TestingResult","_data$chunks","filters","_data$doc_aggs$map","_data$doc_aggs","list","doc_id","doc_name","count","FilterPopover","FilterButton","content_with_weight","chunk_id","RAGFlowPagination","RetrievalTesting","_useTestRetrieval","setCount","create_kb","api","update_kb","rm_kb","kb_list","get_document_list","document_change_status","document_rm","document_delete","document_create","document_change_parser","document_thumbnails","chunk_list","create_chunk","set_chunk","get_chunk","switch_chunk","rm_chunk","document_rename","document_run","document_upload","web_crawl","knowledge_graph","document_infos","upload_and_parse","listTagByKnowledgeIds","methods","url","method","getList","setMeta","registerServer","request","listTag","knowledgeId","removeTag","tags","post","renameTag","fromTag","toTag","getKnowledgeGraph","deleteKnowledgeGraph","body","listDocument"],"sourceRoot":""}