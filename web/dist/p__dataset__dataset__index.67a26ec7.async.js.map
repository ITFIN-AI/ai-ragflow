{"version":3,"file":"p__dataset__dataset__index.67a26ec7.async.js","mappings":"0OAiBO,SAASA,EAAcC,GAAuC,IAApCC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAC/BC,GAAeC,EAAAA,EAAAA,cAAY,SAACC,GAChC,MAAc,WAAPA,CACT,GAAG,IAEH,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,UAAU,OAAMC,UACpBC,EAAAA,EAAAA,MAACC,EAAAA,GAAW,CAACH,UAAU,mCAAkCC,SAAA,EACvDC,EAAAA,EAAAA,MAAA,WAASF,UAAU,qDAAoDC,SAAA,EACrEC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,aAAWP,EAAM,aACvBI,EAAAA,EAAAA,KAACM,EAAAA,EAAa,CAACJ,UAAU,eAE3BF,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAACC,YAAa,WAAYN,UAAU,SAC9CF,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYC,SACvBR,EAAKc,KAAI,SAACC,GAAC,OACVV,EAAAA,EAAAA,KAAA,MAEEE,WAAWS,EAAAA,EAAAA,IAAEC,IAAC,CAAC,EAAE,uBAAyBf,EAAaa,EAAEX,MAAOI,UAEhEH,EAAAA,EAAAA,KAACa,EAAAA,EAAmB,CAClBC,QAASjB,EAAaa,EAAEX,IACxBgB,KAAML,EAAEM,QAAQb,UAEhBC,EAAAA,EAAAA,MAACa,EAAAA,GAAM,CACLC,QAAS,QACTF,QAASnB,EAAaa,EAAEX,IAAM,WAAO,EAAIW,EAAEM,QAAQb,SAAA,CAElDO,EAAES,KAAK,IAAET,EAAEU,YAXXV,EAAEX,GAcJ,UAMjB,C,qMCrDasB,EAAA,cAAAC,EAAA,cAAAC,EAAA,cAOPC,EAAOC,EAAAA,GAEPC,EAAWC,EAAAA,YAGf,SAAAjC,EAA0BkC,GAAG,IAA1B1B,EAASR,EAATQ,UAAc2B,EAAKC,IAAApC,EAAA2B,GAAA,OACtBrB,EAAAA,EAAAA,KAACyB,EAAAA,GAAkBM,IAAA,CACjBH,IAAKA,EACL1B,WAAWS,EAAAA,EAAAA,IACT,sIACAT,IAEE2B,GACJ,IAEJH,EAASM,YAAcP,EAAAA,GAAmBO,YAE1C,IAAMC,EAAcN,EAAAA,YAGlB,SAAAO,EAA0BN,GAAG,IAA1B1B,EAASgC,EAAThC,UAAc2B,EAAKC,IAAAI,EAAAZ,GAAA,OACtBtB,EAAAA,EAAAA,KAACyB,EAAAA,GAAqBM,IAAA,CACpBH,IAAKA,EACL1B,WAAWS,EAAAA,EAAAA,IACT,4aACAT,IAEE2B,GACJ,IAEJI,EAAYD,YAAcP,EAAAA,GAAsBO,YAEhD,IAAMG,EAAcR,EAAAA,YAGlB,SAAAS,EAA0BR,GAAG,IAA1B1B,EAASkC,EAATlC,UAAc2B,EAAKC,IAAAM,EAAAb,GAAA,OACtBvB,EAAAA,EAAAA,KAACyB,EAAAA,GAAqBM,IAAA,CACpBH,IAAKA,EACL1B,WAAWS,EAAAA,EAAAA,IACT,kIACAT,IAEE2B,GACJ,IAEJM,EAAYH,YAAcP,EAAAA,GAAsBO,Y,0BClCzC,SAASK,EAAY3C,GAAkC,IAA/B4C,EAAQ5C,EAAR4C,SACrBC,GAAMC,EAAAA,EAAAA,MAAND,EAER,OACEnC,EAAAA,EAAAA,MAACoB,EAAI,CAACiB,aAAa,UAAStC,SAAA,EAC1BC,EAAAA,EAAAA,MAACsB,EAAQ,CAACxB,UAAU,+BAA8BC,SAAA,EAChDH,EAAAA,EAAAA,KAACiC,EAAW,CAACS,MAAM,UAASvC,SAAEoC,EAAE,wBAChCvC,EAAAA,EAAAA,KAACiC,EAAW,CAACS,MAAM,WAAUvC,SAAEoC,EAAE,wBAEnCvC,EAAAA,EAAAA,KAACmC,EAAW,CAACO,MAAM,UAASvC,UAC1BH,EAAAA,EAAAA,KAAC2C,EAAAA,EAAY,CACXC,aAAc,EACdC,QAAS,QACTC,cAAeR,EACfS,OAAQ,CAAE,IAAK,SAGnB/C,EAAAA,EAAAA,KAACmC,EAAW,CAACO,MAAM,WAAUvC,SAAEoC,EAAE,yBAGvC,CAEO,SAASS,EAAgBd,GAIR,IAHtBe,EAASf,EAATe,UACAlC,EAAImB,EAAJnB,KACAmC,EAAOhB,EAAPgB,QAEQX,GAAMC,EAAAA,EAAAA,MAAND,EACRY,GAA0BC,EAAAA,EAAAA,UAAiB,IAAGC,EAAAC,IAAAH,EAAA,GAAvCI,EAAKF,EAAA,GAAEf,EAAQe,EAAA,GAEhBG,GAAW1D,EAAAA,EAAAA,cAAY,WAC3BiB,SAAAA,EAAOwC,EACT,GAAG,CAACA,EAAOxC,IAEX,OACEf,EAAAA,EAAAA,KAACyD,EAAAA,GAAM,CAACC,MAAI,EAACC,aAAcV,EAAU9C,UACnCC,EAAAA,EAAAA,MAACwD,EAAAA,GAAa,CAAC1D,UAAU,mBAAkBC,SAAA,EACzCH,EAAAA,EAAAA,KAAC6D,EAAAA,GAAY,CAAA1D,UACXH,EAAAA,EAAAA,KAAC8D,EAAAA,GAAW,CAAA3D,SAAEoC,EAAE,+BAElBvC,EAAAA,EAAAA,KAACqC,EAAY,CAACC,SAAUA,KACxBtC,EAAAA,EAAAA,KAAC+D,EAAAA,GAAY,CAAA5D,UACXH,EAAAA,EAAAA,KAACgE,EAAAA,GAAa,CAACC,KAAK,SAASjD,QAASwC,EAAUN,QAASA,EAAQ/C,SAC9DoC,EAAE,uBAMf,C,iRCnEalB,EAAA,4BAAAC,EAAA,yBAOP4C,EAAYvC,EAAAA,YAGhB,SAAAjC,EAAoDkC,GAAG,IAApD1B,EAASR,EAATQ,UAASiE,EAAAzE,EAAEc,YAAAA,OAAW,IAAA2D,EAAG,WAAUA,EAAKtC,EAAKC,IAAApC,EAAA2B,GAAA,OAChDrB,EAAAA,EAAAA,KAACoE,EAAAA,GAAuCrC,IAAAA,IAAA,CACtCH,IAAKA,EACLpB,YAAaA,EACbN,WAAWS,EAAAA,EAAAA,IACT,gDACgB,aAAhBH,GACE,qDACc,eAAhBA,GACE,uDACFN,IAEE2B,GAAK,IAAA1B,UAETH,EAAAA,EAAAA,KAACoE,EAAAA,GAAmC,CAAClE,UAAU,6CACP,IAE5CgE,EAAUlC,YAAcoC,EAAAA,GAAwCpC,YAEhE,IAAMqC,EAAa1C,EAAAA,YAGjB,SAAAO,EAAoCN,GAAG,IAApC1B,EAASgC,EAAThC,UAAWC,EAAQ+B,EAAR/B,SAAa0B,EAAKC,IAAAI,EAAAZ,GAAA,OAChClB,EAAAA,EAAAA,MAACgE,EAAAA,GAAwBrC,IAAAA,IAAA,CACvBH,IAAKA,EACL1B,WAAWS,EAAAA,EAAAA,IAAG,2BAA4BT,IACtC2B,GAAK,IAAA1B,SAAA,EAETH,EAAAA,EAAAA,KAACoE,EAAAA,GAA4B,CAAClE,UAAU,kCAAiCC,SACtEA,KAEHH,EAAAA,EAAAA,KAACkE,EAAS,KACVlE,EAAAA,EAAAA,KAACoE,EAAAA,GAA0B,OACF,ICjC7B,SAASE,EACPC,GAEA,IAAMC,EAAc7C,EAAAA,OAAa4C,GAOjC,OALA5C,EAAAA,WAAgB,WACd6C,EAAYC,QAAUF,CACxB,IAGO5C,EAAAA,SACL,kBAAO,mBAAA+C,EAAAC,EAAAC,UAAAC,OAAIC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GAAA,OAAwB,QAAxBN,EAAKF,EAAYC,eAAO,IAAAC,OAAA,EAAnBA,EAAAO,KAAAC,MAAAR,EAAA,CAAAF,GAAWW,OAAcL,GAAK,IAClD,GAEJ,CCWA,SAASM,EAAoBlD,GAIK,IAHhCmD,EAAInD,EAAJmD,KACAC,EAAWpD,EAAXoD,YAAWC,EAAArD,EACXsD,SAAAA,OAAQ,IAAAD,EAAG,WAAO,EAACA,EAEnBE,EAxBF,SAA6B/F,GAGmB,IAF9C4F,EAAW5F,EAAX4F,YACAE,EAAQ9F,EAAR8F,SAEME,EAAoB/D,EAAAA,SAA8B2D,GACjD5C,EAAPY,IAAgBoC,EAAiB,GAArB,GACNC,EAAehE,EAAAA,OAAae,GAC5BkD,EAAetB,EAAekB,GASpC,OAPA7D,EAAAA,WAAgB,WACVgE,EAAalB,UAAY/B,IAC3BkD,EAAalD,GACbiD,EAAalB,QAAU/B,EAE3B,GAAG,CAACA,EAAOiD,EAAcC,IAElBF,CACT,CAOkDG,CAAqB,CACnEP,YAAAA,EACAE,SAAAA,IACAM,EAAAxC,IAAAmC,EAAA,GAHKM,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAItCG,OAAwBC,IAATb,EACf3C,EAAQuD,EAAeZ,EAAOU,EAC9BH,EAAetB,EAAekB,GAiBpC,MAAO,CAAC9C,EAdNf,EAAAA,aACE,SAACwE,GACC,GAAIF,EAAc,CAChB,IACMvD,EACiB,mBAAdyD,EAFMA,EAE4Bd,GAAQc,EAC/CzD,IAAU2C,GAAMO,EAAalD,EACnC,MACEsD,EAAoBG,EAExB,GACA,CAACF,EAAcZ,EAAMW,EAAqBJ,IAIhD,CFnBAvB,EAAWrC,YAAcoC,EAAAA,GAAyBpC,YG3CrC,IAAAX,EAAA,sHAgBb,SAAS+E,EAAkBC,GACzB,MAAO,YAAaA,GAAgC,iBAAjBA,EAAKC,OAC1C,CAYA,SAASC,EAAW7G,GAA6B,IAA1B2G,EAAI3G,EAAJ2G,KACrB,OAAIA,EAAKpC,KAAKuC,WAAW,WAErBxG,EAAAA,EAAAA,KAAA,OACEyG,IAAKJ,EAAKC,QACVI,IAAKL,EAAKM,KACVC,MAAO,GACPC,OAAQ,GACR3D,QAAQ,OACRhD,UAAU,oDAMdF,EAAAA,EAAAA,KAAC8G,EAAAA,EAAQ,CAAC5G,UAAU,gCAAgC,cAAY,QAEpE,CAEA,SAAS6G,EAAQ7E,GAA8C,IAA3CmE,EAAInE,EAAJmE,KAAMW,EAAQ9E,EAAR8E,SAAUC,EAAQ/E,EAAR+E,SAClC,OACE7G,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qCAAoCC,SAAA,EACjDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,CACjCiG,EAAkBC,IAAQrG,EAAAA,EAAAA,KAACuG,EAAW,CAACF,KAAMA,IAAW,MACzDjG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCH,EAAAA,EAAAA,KAAA,KAAGE,UAAU,sDAAqDC,SAC/DkG,EAAKM,QAER3G,EAAAA,EAAAA,KAAA,KAAGE,UAAU,gCAA+BC,UACzC+G,EAAAA,EAAAA,GAAYb,EAAKc,WAGrBH,GAAWhH,EAAAA,EAAAA,KAACoH,EAAAA,EAAQ,CAAC1E,MAAOsE,IAAe,YAGhDhH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,0BAAyBC,UACtCC,EAAAA,EAAAA,MAACa,EAAAA,GAAM,CACLgD,KAAK,SACL/C,QAAQ,UACRiG,KAAK,OACLjH,UAAU,SACVc,QAASiG,EAAS9G,SAAA,EAElBH,EAAAA,EAAAA,KAACqH,EAAAA,EAAC,CAACnH,UAAU,SAAS,cAAY,UAClCF,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASC,SAAC,uBAKpC,CA+EO,SAASwC,EAAad,GAA0B,IAAAyF,EAE5CC,EAaL1F,EAbFa,MACAI,EAYEjB,EAZFiB,cACA0E,EAWE3F,EAXF2F,SACAC,EAUE5F,EAVF4F,WAAUC,EAUR7F,EATFkB,OAAAA,OAAM,IAAA2E,EAAG,CACP,UAAW,IACZA,EAAAC,EAOC9F,EANFgB,QAAAA,OAAO,IAAA8E,EAAG,QAAeA,EAAAC,EAMvB/F,EALFe,aAAAA,OAAY,IAAAgF,EAAG,EAACA,EAAAC,EAKdhG,EAJFiG,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAIdlG,EAHFmG,SAAAA,OAAQ,IAAAD,GAAQA,EAChB7H,EAEE2B,EAFF3B,UACG+H,EAAanG,IACdD,EAAKR,GAET6G,EAA0B9C,EAAqB,CAC7CC,KAAMkC,EACN/B,SAAU1C,IACVqF,EAAA7E,IAAA4E,EAAA,GAHK3E,EAAK4E,EAAA,GAAE7F,EAAQ6F,EAAA,GAKhBC,EAASzG,EAAAA,aACb,SAAC0G,EAAuBC,GAAmC,IAAAC,EACzD,IAAKT,GAA6B,IAAjBlF,GAAsByF,EAAcxD,OAAS,EAC5D2D,EAAAA,GAAMC,MAAM,iDAId,IAAkB,QAAdF,EAAChF,aAAK,EAALA,EAAOsB,cAAM,IAAA0D,EAAAA,EAAI,GAAKF,EAAcxD,OAASjC,EAChD4F,EAAAA,GAAMC,MAAM,2BAADtD,OAA4BvC,EAAY,eADrD,CAKA,IAAM8F,EAAWL,EAAc5H,KAAI,SAAC4F,GAAI,OACtCsC,OAAOC,OAAOvC,EAAM,CAClBC,QAASuC,IAAIC,gBAAgBzC,IAC7B,IAGE0C,EAAexF,EAAQ,GAAH4B,OAAA6D,IAAOzF,GAAKyF,IAAKN,IAAYA,EAUvD,GARApG,EAASyG,GAELT,EAAczD,OAAS,GACzByD,EAAcW,SAAQ,SAAA7G,GAAc,IAAXiE,EAAIjE,EAAJiE,KACvBmC,EAAAA,GAAMC,MAAM,QAADtD,OAASkB,EAAKM,KAAI,iBAC/B,IAIAa,GACAuB,EAAalE,OAAS,GACtBkE,EAAalE,QAAUjC,EACvB,CACA,IAAMsG,EACJH,EAAalE,OAAS,EAAI,GAAHM,OAAM4D,EAAalE,OAAM,iBAElD2D,EAAAA,GAAMW,QAAQ3B,EAASuB,GAAe,CACpC7F,QAAS,aAAFiC,OAAe+D,EAAM,OAC5BE,QAAS,WAEP,OADA9G,EAAS,IACF,GAAP6C,OAAU+D,EAAM,YAClB,EACAT,MAAO,oBAAFtD,OAAsB+D,IAE/B,CAlCA,CAmCF,GAEA,CAAC3F,EAAOX,EAAckF,EAAUN,EAAUlF,IAW5CX,EAAAA,WAAgB,WACd,OAAO,WACA4B,GACLA,EAAM0F,SAAQ,SAAC5C,GACTD,EAAkBC,IACpBwC,IAAIQ,gBAAgBhD,EAAKC,QAE7B,GACF,CAEF,GAAG,IAEH,IAAMgD,EAAatB,IAA0B,QAAdV,EAAC/D,aAAK,EAALA,EAAOsB,cAAM,IAAAyC,EAAAA,EAAI,IAAM1E,EAEvD,OACExC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+CAA8CC,SAAA,EAC3DH,EAAAA,EAAAA,KAACuJ,EAAAA,GAAQ,CACPnB,OAAQA,EACRrF,OAAQA,EACRF,QAASA,EACT2G,SAAU5G,EACVkF,SAAUlF,EAAe,GAAKkF,EAC9BE,SAAUsB,EAAWnJ,SAEpB,SAAAsJ,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAaF,EAAbE,cAAeC,EAAYH,EAAZG,aAAY,OAC3CxJ,EAAAA,EAAAA,MAAA,MAAA2B,IAAAA,IAAAA,IAAA,GACM2H,KAAc,IAClBxJ,WAAWS,EAAAA,EAAAA,IACT,sLACA,6HACAiJ,GAAgB,6BAChBN,GAAc,iCACdpJ,IAEE+H,GAAa,IAAA9H,SAAA,EAEjBH,EAAAA,EAAAA,KAAA,QAAA+B,IAAA,GAAW4H,MACVC,GACCxJ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0DAAyDC,SAAA,EACtEH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wCAAuCC,UACpDH,EAAAA,EAAAA,KAAC6J,EAAAA,EAAM,CACL3J,UAAU,+BACV,cAAY,YAGhBF,EAAAA,EAAAA,KAAA,KAAGE,UAAU,oCAAmCC,SAAC,4BAKnDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0DAAyDC,SAAA,EACtEH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wCAAuCC,UACpDH,EAAAA,EAAAA,KAAC6J,EAAAA,EAAM,CACL3J,UAAU,+BACV,cAAY,YAGhBE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,oCAAmCC,SAAA,CAAC,QAC1C,MAAO,iDAEdC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mCAAkCC,SAAA,CAAC,iBAE7CyC,EAAe,EAAC,IAAAuC,OACTvC,IAAiBkH,IAAW,WAAalH,EAAY,yCAAAuC,QAC5C+B,EAAAA,EAAAA,GAAYrE,GAAQ,0BAAAsC,QACjB+B,EAAAA,EAAAA,GAAYrE,gBAKpC,IAGTU,SAAAA,EAAOsB,QACN7E,EAAAA,EAAAA,KAACqE,EAAU,CAACnE,UAAU,oBAAmBC,UACvCH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,+BAA8BC,SAC1CoD,aAAK,EAALA,EAAO9C,KAAI,SAAC4F,EAAM0D,GAAK,OACtB/J,EAAAA,EAAAA,KAAC+G,EAAQ,CAEPV,KAAMA,EACNY,SAAU,kBAzFxB,SAAkB8C,GAChB,GAAKxG,EAAL,CACA,IAAMmF,EAAWnF,EAAMyG,QAAO,SAACC,EAAGC,GAAC,OAAKA,IAAMH,CAAK,IACnDzH,EAASoG,GACT5F,SAAAA,EAAgB4F,EAHE,CAIpB,CAoF8BzB,CAAS8C,EAAM,EAC/B/C,SAAUS,aAAU,EAAVA,EAAapB,EAAKM,OAHvBoD,EAIL,QAIN,OAGV,C,mVCvUM9J,EAAO0B,EAAAA,YAGX,SAAAjC,EAA0BkC,GAAG,IAA1B1B,EAASR,EAATQ,UAAc2B,EAAKC,IAAApC,EAAA2B,GAAA,OACtBrB,EAAAA,EAAAA,KAAA,MAAA+B,IAAA,CACEH,IAAKA,EACL1B,WAAWS,EAAAA,EAAAA,IACT,iEACAT,IAEE2B,GACJ,IAEJ5B,EAAK+B,YAAc,OAEnB,IAAMmI,EAAaxI,EAAAA,YAGjB,SAAAO,EAA0BN,GAAG,IAA1B1B,EAASgC,EAAThC,UAAc2B,EAAKC,IAAAI,EAAAZ,GAAA,OACtBtB,EAAAA,EAAAA,KAAA,MAAA+B,IAAA,CACEH,IAAKA,EACL1B,WAAWS,EAAAA,EAAAA,IAAG,gCAAiCT,IAC3C2B,GACJ,IAEJsI,EAAWnI,YAAc,aAEzB,IAAMoI,EAAYzI,EAAAA,YAGhB,SAAAS,EAA0BR,GAAG,IAA1B1B,EAASkC,EAATlC,UAAc2B,EAAKC,IAAAM,EAAAb,GAAA,OACtBvB,EAAAA,EAAAA,KAAA,MAAA+B,IAAA,CACEH,IAAKA,EACL1B,WAAWS,EAAAA,EAAAA,IACT,qDACAT,IAEE2B,GACJ,IAEJuI,EAAUpI,YAAc,YAExB,IAAMqI,EAAkB1I,EAAAA,YAGtB,SAAA8H,EAA0B7H,GAAG,IAA1B1B,EAASuJ,EAATvJ,UAAc2B,EAAKC,IAAA2H,EAAAa,GAAA,OACtBtK,EAAAA,EAAAA,KAAA,MAAA+B,IAAA,CACEH,IAAKA,EACL1B,WAAWS,EAAAA,EAAAA,IAAG,gCAAiCT,IAC3C2B,GACJ,IAEJwI,EAAgBrI,YAAc,kBAE9B,IAAM3B,EAAcsB,EAAAA,YAGlB,SAAA4I,EAA0B3I,GAAG,IAA1B1B,EAASqK,EAATrK,UAAc2B,EAAKC,IAAAyI,EAAAC,GAAA,OACtBxK,EAAAA,EAAAA,KAAA,MAAA+B,IAAA,CAAKH,IAAKA,EAAK1B,WAAWS,EAAAA,EAAAA,IAAG,WAAYT,IAAgB2B,GAAS,IAEpExB,EAAY2B,YAAc,cAEPL,EAAAA,YAGjB,SAAA8I,EAA0B7I,GAAG,IAA1B1B,EAASuK,EAATvK,UAAc2B,EAAKC,IAAA2I,EAAAC,GAAA,OACtB1K,EAAAA,EAAAA,KAAA,MAAA+B,IAAA,CACEH,IAAKA,EACL1B,WAAWS,EAAAA,EAAAA,IAAG,6BAA8BT,IACxC2B,GACJ,IAEOG,YAAc,Y,8MC5EZX,EAAA,mCAOPsJ,EAAYC,EAAAA,GAEZC,EAAmBD,EAAAA,GAEnBE,EAAmBnJ,EAAAA,YAGvB,SAAAjC,EAA4DkC,GAAG,IAA5D1B,EAASR,EAATQ,UAAS6K,EAAArL,EAAEsL,MAAAA,OAAK,IAAAD,EAAG,SAAQA,EAAAE,EAAAvL,EAAEwL,WAAAA,OAAU,IAAAD,EAAG,EAACA,EAAKpJ,EAAKC,IAAApC,EAAA2B,GAAA,OACxDrB,EAAAA,EAAAA,KAAC4K,EAAAA,GAA0B7I,IAAA,CACzBH,IAAKA,EACLoJ,MAAOA,EACPE,WAAYA,EACZhL,WAAWS,EAAAA,EAAAA,IACT,keACAT,IAEE2B,GACJ,IAEJiJ,EAAiB9I,YAAc4I,EAAAA,GAA2B5I,W,6JC1B7CX,EAAA,sBAOP+F,EAAWzF,EAAAA,YAGf,SAAAjC,EAAiCkC,GAAG,IAAjC1B,EAASR,EAATQ,UAAWwC,EAAKhD,EAALgD,MAAUb,EAAKC,IAAApC,EAAA2B,GAAA,OAC7BrB,EAAAA,EAAAA,KAACmL,EAAAA,GAAsBpJ,IAAAA,IAAA,CACrBH,IAAKA,EACL1B,WAAWS,EAAAA,EAAAA,IACT,gEACAT,IAEE2B,GAAK,IAAA1B,UAETH,EAAAA,EAAAA,KAACmL,EAAAA,GAA2B,CAC1BjL,UAAU,iDACVkL,MAAO,CAAEC,UAAW,eAAFlG,OAAiB,KAAOzC,GAAS,GAAE,WAEhC,IAE3B0E,EAASpF,YAAcmJ,EAAAA,GAAuBnJ,W,qKCrBlCsJ,EAAc,SAAdA,GAAc,OAAdA,EAAc,0BAAdA,CAAc,MAIbC,EAAkB,WAC7B,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAuBC,EAAAA,EAAAA,MAAhBC,EAAiCtI,IAAAoI,EAAA,GAArB,GACX3L,GAAO8L,EAAAA,EAAAA,MAAP9L,GAEF+L,GAAwBhM,EAAAA,EAAAA,cAAY,WACxC0L,EAASO,EAAAA,EAAOC,SAClB,GAAG,CAACR,IAEES,GAAoBnM,EAAAA,EAAAA,cACxB,SAACC,GAAU,OAAK,WACdyL,EAAS,GAADrG,OAAI4G,EAAAA,EAAOG,QAAO,KAAA/G,OAAIpF,GAChC,CAAC,GACD,CAACyL,IAGGW,GAAiBrM,EAAAA,EAAAA,cAAY,WACjC0L,EAASO,EAAAA,EAAOK,KAClB,GAAG,CAACZ,IAEEa,GAAoBvM,EAAAA,EAAAA,cAAY,WACpC0L,EAASO,EAAAA,EAAOO,eAClB,GAAG,CAACd,IAEEe,GAAqBzM,EAAAA,EAAAA,cAAY,WACrC0L,EAASO,EAAAA,EAAOS,MAClB,GAAG,CAAChB,IAEEiB,GAAiB3M,EAAAA,EAAAA,cAAY,WACjC0L,EAASO,EAAAA,EAAOW,KAClB,GAAG,CAAClB,IAEEmB,GAAsB7M,EAAAA,EAAAA,cAAY,WACtC0L,EAASO,EAAAA,EAAOa,OAClB,GAAG,CAACpB,IAEEqB,GAAkB/M,EAAAA,EAAAA,cACtB,SAACC,GAAU,OAAK,WACdyL,EAAS,GAADrG,OAAI4G,EAAAA,EAAOe,MAAK,KAAA3H,OAAIpF,GAC9B,CAAC,GACD,CAACyL,IAGGuB,GAA2BjN,EAAAA,EAAAA,cAAY,WAC3C0L,EAASO,EAAAA,EAAOiB,eAClB,GAAG,CAACxB,IAEEyB,GAAuBnN,EAAAA,EAAAA,cAAY,WACvC0L,EAASO,EAAAA,EAAOmB,SAClB,GAAG,CAAC1B,IAEE2B,GAAmBrN,EAAAA,EAAAA,cAAY,WACnC0L,EAASO,EAAAA,EAAOqB,OAClB,GAAG,CAAC5B,IAEE6B,GAA8BvN,EAAAA,EAAAA,cAClC,SAACC,EAAYuN,GAAoB,OAAK,WACpC9B,EACE,GAAArG,OACG4G,EAAAA,EAAOwB,aAAY,eAAApI,OAAcmI,EAAW,YAAAnI,OAAWpF,GAE9D,CAAC,GACD,CAACyL,IAGGgC,GAAiB1N,EAAAA,EAAAA,cACrB,SAAC2N,GACC,IAAMC,EAAc9M,IAAA,GACjB0K,EAAeqC,YAAc/B,EAAagC,IACzCtC,EAAeqC,cAGnB,OAAIF,EACKC,EAAeD,GAEjBC,CACT,GACA,CAAC9B,IAGGiC,GAAkB/N,EAAAA,EAAAA,cACtB,SAACgO,GACCtC,EAAS,GAADrG,OACH2I,EAAK,KAAA3I,OAAIpF,EAAE,KAAAoF,OAAImG,EAAeqC,YAAW,KAAAxI,OAAIqI,EAAelC,EAAeqC,cAElF,GACA,CAACH,EAAgBzN,EAAIyL,IAGjBuC,GAAkBjO,EAAAA,EAAAA,cACtB,SAACkO,GACCxC,EAAS,GAADrG,OAAI4G,EAAAA,EAAOkC,MAAK,cAAA9I,OAAa6I,GACvC,GACA,CAACxC,IAGH,MAAO,CACLM,sBAAAA,EACAG,kBAAAA,EACAE,eAAAA,EACAE,kBAAAA,EACAE,mBAAAA,EACAE,eAAAA,EACAY,4BAAAA,EACAG,eAAAA,EACAK,gBAAAA,EACAlB,oBAAAA,EACAE,gBAAAA,EACAE,yBAAAA,EACAE,qBAAAA,EACAE,iBAAAA,EACAY,gBAAAA,EAEJ,C,wICrHO,SAASG,IACd,IAAA/K,GAAwCC,EAAAA,EAAAA,UAA4B,CAAC,GAAEC,EAAAC,IAAAH,EAAA,GAAhEgL,EAAY9K,EAAA,GAAE+K,EAAe/K,EAAA,GAE9BgL,GAAoBvO,EAAAA,EAAAA,cAAY,WACpCsO,EAAgB,CAAC,EACnB,GAAG,IAEGE,GAAgBC,EAAAA,EAAAA,UAAQ,WAC5B,OAAO5F,OAAO6F,KAAKL,GAActJ,MACnC,GAAG,CAACsJ,IAEJ,MAAO,CACLA,aAAAA,EACAC,gBAAAA,EACAK,qBAAqBC,EAAAA,EAAAA,SAAQP,GAC7BE,kBAAAA,EACAC,cAAAA,EAEJ,CAIO,SAASK,EACdR,EACAxO,GASA,MAAO,CAAEiP,aAPWL,EAAAA,EAAAA,UAAQ,WAC1B,IAAMM,EAAUlG,OAAO6F,KAAKL,GAC5B,OAAOxO,EACJqK,QAAO,SAACtJ,EAAGoO,GAAG,OAAKD,EAAQE,MAAK,SAACC,GAAC,OAAKC,OAAOD,KAAOF,CAAG,GAAC,IACzDrO,KAAI,SAACC,GAAC,OAAKA,EAAEX,EAAE,GACpB,GAAG,CAACJ,EAAMwO,IAGZ,C,2WCfkBe,EAAiB,CAAAC,eAAA,iBAAAC,kBAAA,oBAAAC,qBAAA,uBAAAC,iBAAA,mBAAAC,eAAA,iBAAAC,iBAAA,mBAAAC,kBAAA,oBAAAC,gBAAA,kBAAAC,qBAAA,uBAAAC,eAAA,kBAqDtBC,EAAuB,WAClC,IAoBSC,EApBDxC,GAAgByC,EAAAA,EAAAA,MAAhBzC,YACR0C,GAA4CC,EAAAA,EAAAA,MAApCC,EAAYF,EAAZE,aAAcC,EAAiBH,EAAjBG,kBACtBC,GAAsCC,EAAAA,EAAAA,MAA9BC,EAAUF,EAAVE,WAAYC,EAAaH,EAAbG,cACZxQ,GAAO8L,EAAAA,EAAAA,MAAP9L,GACFyQ,GAAwBC,EAAAA,EAAAA,GAAYP,EAAc,CAAEQ,KAAM,MAChEC,GAA4CC,EAAAA,EAAAA,KAApCC,EAAWF,EAAXE,YAAaC,EAAkBH,EAAlBG,mBAErBC,GAAsCC,EAAAA,EAAAA,GAGnC,CACDC,SAAU,CACR/B,EAAkBE,kBAClBoB,EACAF,EACAO,GAEFK,YAAa,CAAEC,KAAM,GAAIC,MAAO,GAEhCC,UAAW/D,KAAiBvN,EAC5BuR,SAAOxB,EAAAyB,IAAAC,MAAAC,MAAE,SAAAC,IAAA,IAAAC,EAAA,OAAAH,MAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACWC,EAAAA,EAAAA,IAChB,CACEC,MAAO3E,GAAevN,EACtBmS,SAAU1B,EACV2B,UAAW7B,EAAW8B,SACtBC,KAAM/B,EAAW7L,SAEnB,CACE6N,MAAOzB,EAAY5M,KACnBsO,WAAY1B,EAAY2B,MAE3B,OAXQ,GAYa,KAZhBb,EAAGE,EAAAY,MAYDC,KAAKC,KAAU,CAAAd,EAAAE,KAAA,eAAAF,EAAAe,OAAA,SACdjB,EAAIe,KAAKA,MAAI,cAAAb,EAAAe,OAAA,SAGf,CACLzB,KAAM,GACNC,MAAO,IACR,wBAAAS,EAAAgB,OAAA,GAAAnB,EAAA,KACF,kBAAA5B,EAAA5K,MAAA,KAAAN,UAAA,KAlCK8N,EAAI3B,EAAJ2B,KAAkBxP,EAAO6N,EAAnB+B,WAqCRC,GAA4DjT,EAAAA,EAAAA,cAChE,SAACkT,GACCzC,EAAc,CAAE8B,KAAM,IACtBlC,EAAkB6C,EACpB,GACA,CAAC7C,EAAmBI,IAGtB,MAAO,CACLrN,QAAAA,EACAgN,aAAAA,EACA+C,UAAWP,EAAKvB,KAChBb,WAAUvO,IAAAA,IAAA,GAAOuO,GAAU,IAAEc,MAAOsB,aAAI,EAAJA,EAAMtB,QAC1CjB,kBAAmB4C,EACnBxC,cAAAA,EACAM,YAAAA,EACAC,mBAAAA,EAEJ,EA8BO,IAAMoC,EAAuB,WAClC,IAQYC,EARNC,GAAcC,EAAAA,EAAAA,MAEpBC,GAIIC,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAACtE,EAAkBG,sBAChCoE,YAAUN,EAAA5B,IAAAC,MAAAC,MAAE,SAAAiC,EAAAhU,GAAA,IAAAiU,EAAAC,EAAAC,EAAAnB,EAAA,OAAAlB,MAAAI,MAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,OAEA,OADV4B,EAAMjU,EAANiU,OACAC,EAAUlU,EAAVkU,WAAUE,EAAA/B,KAAA,EAKagC,EAAAA,GAAUC,uBAAuB,CACtDC,OAAQL,EACRD,OAAQ1E,OAAO0E,KACf,OAMD,OANCE,EAAAC,EAAArB,KACgB,KAJVC,EAAImB,EAAJnB,MAICC,OACPuB,EAAAA,GAAQ9K,QAAQ+K,EAAAA,EAAK5R,EAAE,qBACvB6Q,EAAYgB,kBAAkB,CAC5BnD,SAAU,CAAC/B,EAAkBE,sBAEhC0E,EAAAlB,OAAA,SACMF,GAAI,wBAAAoB,EAAAjB,OAAA,GAAAa,EAAA,KACZ,SAAAW,GAAA,OAAAlB,EAAAjO,MAAA,KAAAN,UAAA,KAvBD8N,EAAIY,EAAJZ,KACWxP,EAAOoQ,EAAlBgB,UAyBF,MAAO,CAAEC,kBAxBIjB,EAAXkB,YAwBuC9B,KAAAA,EAAMxP,QAAAA,EACjD,EAEauR,EAAiB,WAC5B,IAQYC,EARNtB,GAAcC,EAAAA,EAAAA,MAEpBsB,GAIIpB,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAACtE,EAAkBI,kBAChCmE,YAAUiB,EAAAnD,IAAAC,MAAAC,MAAE,SAAAmD,EAAA1S,GAAA,IAAA2S,EAAArC,EAAAsC,EAAAnD,EAAAgB,EAAA,OAAAnB,MAAAI,MAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,OAWP,OAVH8C,EAAW3S,EAAX2S,YACArC,EAAGtQ,EAAHsQ,IACAsC,EAAY5S,EAAZ4S,aAMA1B,EAAYgB,kBAAkB,CAC5BnD,SAAU,CAAC/B,EAAkBE,qBAC5B2F,EAAAhD,KAAA,EAEegC,EAAAA,GAAUiB,aAAa,CACvCC,QAASJ,EACTrC,IAAAA,EACA0C,OAAQJ,IACR,OAOD,OAXKnD,EAAGoD,EAAAtC,KAMI,KADPE,GAAO/E,EAAAA,EAAAA,KAAI+D,EAAK,gBAEpByB,EAAYgB,kBAAkB,CAC5BnD,SAAU,CAAC/B,EAAkBE,qBAE/B8E,EAAAA,GAAQ9K,QAAQ+K,EAAAA,EAAK5R,EAAE,sBACxBwS,EAAAnC,OAAA,SAEMD,GAAI,wBAAAoC,EAAAlC,OAAA,GAAA+B,EAAA,KACZ,SAAAO,GAAA,OAAAT,EAAAxP,MAAA,KAAAN,UAAA,KAhCD8N,EAAIiC,EAAJjC,KACWxP,EAAOyR,EAAlBL,UAkCF,MAAO,CAAEc,iBAjCIT,EAAXH,YAiCsCtR,QAAAA,EAASwP,KAAAA,EACnD,EAEa2C,EAAoB,WAC/B,IAOYC,EAPNlC,GAAcC,EAAAA,EAAAA,MACpBkC,GAIIhC,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAACtE,EAAkBK,gBAChCkE,YAAU6B,EAAA/D,IAAAC,MAAAC,MAAE,SAAA+D,EAAOX,GAA8B,IAAAY,EAAA/C,EAAA,OAAAlB,MAAAI,MAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,cAAA2D,EAAA3D,KAAA,EACxBgC,EAAAA,GAAU4B,YAAY,CAAE1B,OAAQY,IAAc,OAMpE,OANoEY,EAAAC,EAAAjD,KACnD,KADVC,EAAI+C,EAAJ/C,MACCC,OACPuB,EAAAA,GAAQ9K,QAAQ+K,EAAAA,EAAK5R,EAAE,oBACvB6Q,EAAYgB,kBAAkB,CAC5BnD,SAAU,CAAC/B,EAAkBE,sBAEhCsG,EAAA9C,OAAA,SACMF,EAAKC,MAAI,wBAAA+C,EAAA7C,OAAA,GAAA2C,EAAA,KACjB,SAAAI,GAAA,OAAAN,EAAApQ,MAAA,KAAAN,UAAA,KAGH,MAAO,CAAE8N,KAjBH6C,EAAJ7C,KAiBaxP,QAhBKqS,EAAlBjB,UAgBsBuB,eAfXN,EAAXf,YAgBJ,E,8WCxPO,SAASsB,KACd,IAAQvT,GAAMC,EAAAA,EAAAA,MAAND,EACFwT,GAAOC,EAAAA,EAAAA,MAEbC,GAAmCC,EAAAA,EAAAA,IAAc,CAC/CvP,KAAM,sBACNwP,QAASJ,EAAKI,UAFRC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAML,EAANK,OAKxB,OACElW,EAAAA,GAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,GAAAA,KAACuW,EAAAA,GAAS,CAACC,QAASjU,EAAE,kCAAkCpC,SACrDoC,EAAE,iCAEJ6T,EAAO3V,KAAI,SAACgW,EAAO1M,GAClB,IAAM2M,EAAY,uBAAHvR,OAA0B4E,EAAK,SAC9C,OACE3J,EAAAA,GAAAA,MAAA,OAAoBF,UAAU,+BAA8BC,SAAA,EAC1DH,EAAAA,GAAAA,KAAC2W,EAAAA,GAAS,CACRR,QAASJ,EAAKI,QACdxP,KAAM+P,EACNE,OAAQ,SAAAlX,GAAA,IAAG+W,EAAK/W,EAAL+W,MAAK,OACdrW,EAAAA,GAAAA,MAACyW,EAAAA,GAAQ,CAAC3W,UAAU,QAAOC,SAAA,EACzBH,EAAAA,GAAAA,KAAC8W,EAAAA,GAAe,KAChB9W,EAAAA,GAAAA,KAAC+W,EAAAA,GAAW,CAAA5W,UACVH,EAAAA,GAAAA,KAACgX,GAAAA,GAAKjV,IAAA,CACJkC,KAAK,SACLgT,YAAa1U,EAAE,sBACfrC,UAAU,QACNuW,OAGRzW,EAAAA,GAAAA,KAACkX,EAAAA,GAAW,MACH,KAGflX,EAAAA,GAAAA,KAACO,GAAAA,EAAS,CAACL,UAAU,UACrBF,EAAAA,GAAAA,KAAC2W,EAAAA,GAAS,CACRR,QAASJ,EAAKI,QACdxP,KAAI,uBAAAxB,OAAyB4E,EAAK,OAClC6M,OAAQ,SAAA1U,GAAA,IAAGuU,EAAKvU,EAALuU,MAAK,OACdrW,EAAAA,GAAAA,MAACyW,EAAAA,GAAQ,CAAC3W,UAAU,SAAQC,SAAA,EAC1BH,EAAAA,GAAAA,KAAC8W,EAAAA,GAAe,KAChB9W,EAAAA,GAAAA,KAAC+W,EAAAA,GAAW,CAAA5W,UACVH,EAAAA,GAAAA,KAACgX,GAAAA,GAAKjV,IAAA,CACJkC,KAAK,SACLgT,YAAa1U,EAAE,sBACfrC,UAAU,QACNuW,OAGRzW,EAAAA,GAAAA,KAACkX,EAAAA,GAAW,MACH,KAGflX,EAAAA,GAAAA,KAACiB,EAAAA,GAAM,CAACC,QAAS,QAASF,QAAS,kBAAMqV,EAAOtM,EAAM,EAAC5J,UACrDH,EAAAA,GAAAA,KAACqH,GAAAA,EAAC,QAvCIoP,EAAM1W,GA2CpB,KACAK,EAAAA,GAAAA,MAACa,EAAAA,GAAM,CACLD,QAAS,kBAAMsV,EAAO,CAAEa,KAAM,EAAGC,GAAI,KAAM,EAC3ClX,UAAU,4BACVgB,QAAS,UACT+C,KAAK,SAAQ9D,SAAA,EAEbH,EAAAA,GAAAA,KAACqX,GAAAA,EAAI,IACJ9U,EAAE,iCAIX,C,uCCtFM+U,GAAgB,IAAIC,IAAI,CAC5B,CACE,CAAC,OACD,CACE,QACA,SACA,SACA,QACA,OACA,OACA,eACA,MACA,KACA,oBAGJ,CACE,CAAC,MAAO,QACR,CACE,QACA,SACA,OACA,OACA,MACA,KACA,SACA,oBAGJ,CACE,CAAC,OAAQ,OACT,CAAC,QAAS,KAAM,QAAS,MAAO,oBAElC,CAAC,CAAC,MAAO,QAAS,CAAC,iBACnB,CACE,CAAC,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,MAAO,OACnE,CAAC,YAEH,CACE,CAAC,OACD,CACE,QACA,SACA,OACA,OACA,MACA,KACA,QACA,oBAGJ,CACE,CAAC,OACD,CACE,QACA,SACA,OACA,OACA,MACA,KACA,QACA,oBAGJ,CAAC,CAAC,MAAO,CAAC,QAAS,KAAM,oBACzB,CAAC,CAAC,QAAS,CAAC,QAAS,oBACrB,CAAC,CAAC,OAAQ,CAAC,YAGPC,GAAgB,SACpBC,EACAC,GAKA,OAAOA,EAAW1N,QAAO,SAACtJ,GAAC,OAAK+W,aAAM,EAANA,EAAQ1I,MAAK,SAACC,GAAC,OAAKA,IAAMtO,EAAEgC,KAAK,GAAC,GACpE,EAEaiV,GAA4B,SAACC,GACxC,IAAMF,GAAaG,EAAAA,GAAAA,MAEbC,GAAiBvJ,EAAAA,EAAAA,UAAQ,WAC7B,IAAMwJ,EAAM/O,KAAIsO,GAAc9I,QAAQwJ,MAAK,SAACtX,GAAC,OAC3CA,EAAEqO,MAAK,SAACC,GAAC,OAAKA,IAAM4I,CAAiB,GAAC,IAExC,GAAIG,EAAK,CACP,IAAMN,EAASH,GAAc1J,IAAImK,GACjC,OAAOP,GAAcC,QAAAA,EAAU,GAAIC,EACrC,CAEA,OAAOF,GACL,CAAC,QAAS,SAAU,OAAQ,OAAQ,MAAO,KAAM,SACjDE,EAEJ,GAAG,CAACA,EAAYE,IAEhB,MAAO,CAAEF,WAAYI,EACvB,EAEMG,GAAmB,CAAC,KAAM,QAAS,SAAU,kBAAmB,OAEzDC,GAAsB,WACjC,IAAMC,GAAmBrY,EAAAA,EAAAA,cAAY,SAACsY,GACpC,OAAOH,GAAiBI,OAAM,SAAC3X,GAAC,OAAK0X,IAAgB1X,CAAC,GACxD,GAAG,IAEH,OAAOyX,CACT,EC1GO,SAASG,KACd,IAAQ/V,GAAMC,EAAAA,EAAAA,MAAND,EA6BR,OA3B4BgM,EAAAA,EAAAA,UAAQ,WAwBlC,MAvB4B,CAC1BgK,eAAgB,GAChBC,iBAAkBC,GAAAA,EAAaC,QAC/BC,gBAAiB,IACjBC,UAAW,KACXC,cAAe,EACfC,eAAgB,EAChBC,YAAY,EACZC,OAAQ,CACNC,YAAY,EACZC,OAAQ3W,EAAE,qCACV4W,UAAW,IACXC,UAAW,GACXC,YAAa,GACbC,YAAa,GAEfC,SAAU,CACRC,cAAc,GAEhBC,aAAc,GACdC,MAAO,GAIX,GAAG,CAACnX,GAGN,CCmBA,IAAMoX,GAAS,wBAcTC,GAAwB,CAC5BC,EAAAA,GAAmBC,GACnBD,EAAAA,GAAmBE,MACnBF,EAAAA,GAAmBG,QACnBH,EAAAA,GAAmBI,OACnBJ,EAAAA,GAAmBK,IACnBL,EAAAA,GAAmBM,gBAGd,SAASC,GAAiB1a,GAStB,IAAA2a,EARTpX,EAASvD,EAATuD,UACAlC,EAAIrB,EAAJqB,KACAuZ,EAAQ5a,EAAR4a,SAEA1C,GADUlY,EAAVkU,WACiBlU,EAAjBkY,mBACA2C,EAAO7a,EAAP6a,QACAC,EAAY9a,EAAZ8a,aACAtX,EAAOxD,EAAPwD,QAEQX,GAAMC,EAAAA,EAAAA,MAAND,EAEAmV,EAAeC,GAA0BC,GAAzCF,WAEM+C,GAAqBC,EAAAA,EAAAA,MAA3BhI,KAEFiI,GAAcpM,EAAAA,EAAAA,UAAQ,WAAM,IAAAqM,EAChC,OAAqC,QAArCA,EAAOH,EAAiBI,qBAAa,IAAAD,GAAU,QAAVA,EAA9BA,EAAgCrB,gBAAQ,IAAAqB,OAAA,EAAxCA,EAA0CpB,YACnD,GAAG,CAA+B,QAA/Ba,EAACI,EAAiBI,qBAAa,IAAAR,GAAU,QAAVA,EAA9BA,EAAgCd,gBAAQ,IAAAc,OAAA,EAAxCA,EAA0Cb,eAExCsB,EAAsBxC,KAEtByC,ED9DD,WACL,IAAMD,EAAsBxC,KAmB5B,OAjByBxY,EAAAA,EAAAA,cACvB,SAAC0a,GACC,OAAO7R,OAAOqS,QAAQF,GAAqBG,QACzC,SAACC,EAAGxb,GAAmB,IAAAwC,EAAAoB,IAAA5D,EAAA,GAAhBqY,EAAG7V,EAAA,GAAEQ,EAAKR,EAAA,GAMf,OAJEgZ,EAAInD,GADFA,KAAOyC,EACEA,EAAazC,GAEbrV,EAENwY,CACT,GACA,CAAC,EAEL,GACA,CAACJ,GAIL,CCyCiCK,GAEzBC,EAAaC,EAAAA,EAAEC,OAAO,CAC1BC,UAAWF,EAAAA,EACRG,SACAC,IAAI,EAAG,CACNvH,QAAS3R,EAAE,yBAEZmZ,OACHb,cAAeQ,EAAAA,EAAEC,OAAO,CACtB/C,eAAgB8C,EAAAA,EAAEM,OAAOC,SAASC,WAClCrD,iBAAkB6C,EAAAA,EAAEG,SAASK,WAC7BlD,gBAAiB0C,EAAAA,EAAEM,OAAOC,SAASC,WACnCjD,UAAWyC,EAAAA,EAAEG,SAASK,WACtBhD,cAAewC,EAAAA,EAAEM,OAAOC,SAASC,WACjC/C,eAAgBuC,EAAAA,EAAEM,OAAOC,SAASC,WAClC9C,WAAYsC,EAAAA,EAAC,UAAWQ,WACxB7C,OAAQqC,EAAAA,EACLC,OAAO,CACNrC,WAAYoC,EAAAA,EAAC,UAAWQ,WACxB3C,OAAQmC,EAAAA,EAAEG,SAASK,WAAWA,WAC9B1C,UAAWkC,EAAAA,EAAEM,OAAOC,SAASC,WAC7BzC,UAAWiC,EAAAA,EAAEM,OAAOC,SAASC,WAC7BxC,YAAagC,EAAAA,EAAEM,OAAOC,SAASC,WAC/BvC,YAAa+B,EAAAA,EAAEM,OAAOC,SAASC,aAEhCA,WACHtC,SAAU8B,EAAAA,EAAEC,OAAO,CACjB9B,aAAc6B,EAAAA,EAAC,UAAWQ,aAE5BpC,aAAc4B,EAAAA,EAAES,MAAMT,EAAAA,EAAEG,UAAUK,WAClCnC,MAAO2B,EAAAA,EACJS,MAAMT,EAAAA,EAAEC,OAAO,CAAEnE,KAAMkE,EAAAA,EAAEM,OAAOC,SAAUxE,GAAIiE,EAAAA,EAAEM,OAAOC,YACvDC,eAID9F,GAAOgG,EAAAA,EAAAA,IAAoC,CAC/CC,UAAUC,EAAAA,EAAAA,GAAYb,GACtBc,cAAe,CACbX,UAAWjB,EAEXO,cAAeC,KAIbqB,GAAkBC,EAAAA,EAAAA,IAAS,CAC/BzV,KAAM,iCACNwP,QAASJ,EAAKI,UAGViC,GAAcgE,EAAAA,EAAAA,IAAS,CAC3BzV,KAAM,YACNwP,QAASJ,EAAKI,UAGVkG,EAA8B,QAAtBzE,EAER0E,GAAY/N,EAAAA,EAAAA,UAAQ,WACxB,OAAO8N,GAASzC,GAAsBvB,OAAM,SAAC3X,GAAC,OAAKA,IAAM0X,CAAW,GACtE,GAAG,CAACA,EAAaiE,IAEXE,GAAUhO,EAAAA,EAAAA,UAAQ,WACtB,OACE8N,GACAzC,GACG5P,QAAO,SAACtJ,GAAC,OAAKA,IAAMmZ,EAAAA,GAAmBK,GAAG,IAC1C7B,OAAM,SAAC3X,GAAC,OAAKA,IAAM0X,CAAW,GAErC,GAAG,CAACA,EAAaiE,IAEXG,EACJpE,IAAgByB,EAAAA,GAAmB4C,OACnCrE,IAAgByB,EAAAA,GAAmBM,eAE/BuC,EAAkBtE,IAAgByB,EAAAA,GAAmBM,eAErDwC,EACJvE,IAAgByB,EAAAA,GAAmB4C,OAA+B,SAAtB7E,EAExCO,EAAmBD,KAEF,SAAA0E,IActB,OAdsBA,EAAArL,IAAAC,MAAAC,MAAvB,SAAAoL,EAAwBnK,GAAgC,IAAAoK,EAAAC,EAAAC,EAAA,OAAAxL,MAAAI,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,OASH,OARnDmL,QAAQC,IAAI,wBAAyBzK,GAC/BsK,EAAQjb,IAAAA,IAAA,GACT2Q,GAAI,IACPmI,cAAa9Y,IAAAA,IAAA,GACR2Q,EAAKmI,eAAa,IACrBnB,MAAiE,QAA5DoD,EAAoB,QAApBC,EAAErK,EAAKmI,qBAAa,IAAAkC,GAAO,QAAPA,EAAlBA,EAAoBrD,aAAK,IAAAqD,OAAA,EAAzBA,EAA2Btc,KAAI,SAACC,GAAM,MAAK,CAACA,EAAEyW,KAAMzW,EAAE0W,GAAG,WAAC,IAAA0F,EAAAA,EAAI,OAGzEI,QAAQC,IAAI,4BAA6BH,GAAUC,EAAAlL,KAAA,EACjChR,aAAI,EAAJA,EAAOic,GAAS,OAAzBC,EAAAxK,OAEPxP,SAAAA,KACD,wBAAAga,EAAApK,OAAA,GAAAgK,EAAA,KACFD,EAAA1X,MAAA,KAAAN,UAAA,CA+BD,OA7BAwY,EAAAA,EAAAA,YAAU,WACR,GAAI7C,EAAS,KAAA8C,EAAAC,EACL5D,EACuD,QADlD2D,EACT7C,SAAmB,QAAP8C,EAAZ9C,EAAcd,aAAK,IAAA4D,OAAA,EAAnBA,EAAqB7c,KAAI,SAACC,GAAC,MAAM,CAAEyW,KAAMzW,EAAE,GAAI0W,GAAI1W,EAAE,GAAI,WAAE,IAAA2c,EAAAA,EAAI,GACjEtH,EAAKwH,MAAM,CACThC,UAAWjB,EACXO,cAAeE,EAAsBhZ,IAAAA,IAAC,CACpC2X,MAAOA,EAAM7U,OAAS,EAAI6U,EAAQ,CAAC,CAAEvC,KAAM,EAAGC,GAAI,QAC/CoG,IAAKhD,EAAc,UAAQ,IAC9BjB,SAAU,CACRC,aAAc5L,IACZ4M,EACA,wBACAG,QAKV,CACF,GAAG,CACDI,EACAhF,EACA0E,EAAiBI,cACjBL,EACAF,EACAK,EACAJ,KAIAva,EAAAA,GAAAA,KAACyD,EAAAA,GAAM,CAACC,MAAI,EAACC,aAAcV,EAAU9C,UACnCC,EAAAA,GAAAA,MAACwD,EAAAA,GAAa,CAAC1D,UAAU,eAAcC,SAAA,EACrCH,EAAAA,GAAAA,KAAC6D,EAAAA,GAAY,CAAA1D,UACXH,EAAAA,GAAAA,KAAC8D,EAAAA,GAAW,CAAA3D,SAAEoC,EAAE,qCAElBvC,EAAAA,GAAAA,KAACyd,EAAAA,GAAI1b,IAAAA,IAAA,GAAKgU,GAAI,IAAA5V,UACZC,EAAAA,GAAAA,MAAA,QACEsd,SAAU3H,EAAK4H,cAvDsB,SAExBC,GAAA,OAAAhB,EAAA1X,MAAC,KAADN,UAAA,IAsDb1E,UAAU,uCACVH,GAAI4Z,GAAOxZ,SAAA,EAEXC,EAAAA,GAAAA,MAACyd,GAAAA,EAAa,CAAA1d,SAAA,EACZH,EAAAA,GAAAA,KAAC2W,EAAAA,GAAS,CACRR,QAASJ,EAAKI,QACdxP,KAAK,YACLiQ,OAAQ,SAAA1U,GAAA,IAAGuU,EAAKvU,EAALuU,MAAK,OACdrW,EAAAA,GAAAA,MAACyW,EAAAA,GAAQ,CAAA1W,SAAA,EACPH,EAAAA,GAAAA,KAACuW,EAAAA,GAAS,CAAApW,SAAEoC,EAAE,mCACdvC,EAAAA,GAAAA,KAAC+W,EAAAA,GAAW,CAAA5W,UACVH,EAAAA,GAAAA,KAAC8d,GAAAA,GAAa/b,IAAAA,IAAA,GACR0U,GAAK,IACTsH,QAASrG,QAGb1X,EAAAA,GAAAA,KAACkX,EAAAA,GAAW,MACH,IAGdoF,IAAatc,EAAAA,GAAAA,KAAC8V,GAAgB,IAC9BwG,GAAaH,IACZnc,EAAAA,GAAAA,KAAC2W,EAAAA,GAAS,CACRR,QAASJ,EAAKI,QACdxP,KAAK,+BACLiQ,OAAQ,SAAAxU,GAAA,IAAGqU,EAAKrU,EAALqU,MAAK,OACdrW,EAAAA,GAAAA,MAACyW,EAAAA,GAAQ,CAAA1W,SAAA,EACPH,EAAAA,GAAAA,KAACuW,EAAAA,GAAS,CACRC,QAASjU,EAAE,oCAAoCpC,SAE9CoC,EAAE,oCAELvC,EAAAA,GAAAA,KAAC+W,EAAAA,GAAW,CAAA5W,UACVH,EAAAA,GAAAA,KAACgX,GAAAA,GAAKjV,IAAAA,IAAA,GACA0U,GAAK,IACTxS,KAAM,SACNwX,IAAK,EACLuC,IAAK,UAGThe,EAAAA,GAAAA,KAACkX,EAAAA,GAAW,MACH,QAKnB9W,EAAAA,GAAAA,MAACyd,GAAAA,EAAa,CACZI,KAAM1B,GAAWC,EACjBtc,UAAU,YAAWC,SAAA,CAEpBoc,IAAWvc,EAAAA,GAAAA,KAACke,GAAAA,EAAwB,IACpC1B,IACCpc,EAAAA,GAAAA,MAAA+d,GAAAA,SAAA,CAAAhe,SAAA,EACEH,EAAAA,GAAAA,KAACoe,GAAAA,EAAuB,CACtBJ,IACE5F,IAAgByB,EAAAA,GAAmBM,eAC/B,MACA,QAGRna,EAAAA,GAAAA,KAACqe,EAAAA,EAAkB,WAIzBje,EAAAA,GAAAA,MAACyd,GAAAA,EAAa,CACZI,KAAM9F,EAAiBC,IAAgBuE,EACvCzc,UAAU,YAAWC,SAAA,CAEpBgY,EAAiBC,KAChBhY,EAAAA,GAAAA,MAAA+d,GAAAA,SAAA,CAAAhe,SAAA,EACEH,EAAAA,GAAAA,KAACse,EAAAA,EAAqB,KACtBte,EAAAA,GAAAA,KAACue,EAAAA,EAAsB,OAG1B5B,IAAmB3c,EAAAA,GAAAA,KAACwe,GAAAA,EAAoB,QAE1CC,EAAAA,GAAAA,IACCrG,KAEApY,EAAAA,GAAAA,KAAC6d,GAAAA,EAAa,CAAA1d,UACZH,EAAAA,GAAAA,KAAC0e,GAAAA,GAAgB,OAGpBC,EAAAA,GAAAA,IAAkBvG,IACjBuC,IAAe3a,EAAAA,GAAAA,KAAC4e,GAAAA,GAAoB,IACrClC,IAAmB1c,EAAAA,GAAAA,KAAC6e,EAAAA,EAAoB,WAG7C7e,EAAAA,GAAAA,KAAC+D,EAAAA,GAAY,CAAA5D,UACXH,EAAAA,GAAAA,KAACgE,EAAAA,GAAa,CAACC,KAAK,SAAS8R,KAAM4D,GAAQzW,QAASA,EAAQ/C,SACzDoC,EAAE,uBAMf,C,qFC7SO,SAASuc,GAAapf,GAK6C,IAJxEuD,EAASvD,EAATuD,UACAlC,EAAIrB,EAAJqB,KACAmC,EAAOxD,EAAPwD,QACA6b,EAAerf,EAAfqf,gBAEQxc,GAAMC,EAAAA,EAAAA,MAAND,EAEF6Y,EAAaC,EAAAA,EAAEC,OAAO,CAC1B0D,KAAM3D,EAAAA,EACHG,SACAC,IAAI,EAAG,CACNvH,QAAS3R,EAAE,sCAEZmZ,OACAuD,QACC,SAACvc,GACC,IAEE,OADAwc,KAAKC,MAAMzc,IACJ,CACT,CAAE,MAAO+F,GACP,OAAO,CACT,CACF,GACA,CAAEyL,QAAS3R,EAAE,wCAIbwT,GAAOgG,EAAAA,EAAAA,IAAoC,CAC/CC,UAAUC,EAAAA,EAAAA,GAAYb,GACtBc,cAAe,CAAC,IAGK,SAAAU,IAKtB,OALsBA,EAAArL,IAAAC,MAAAC,MAAvB,SAAAoL,EAAwBnK,GAAgC,OAAAlB,MAAAI,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,cAAAkL,EAAAlL,KAAA,EACpChR,aAAI,EAAJA,EAAO2R,EAAKsM,MAAK,OAA1B/B,EAAAxK,OAEPxP,SAAAA,KACD,wBAAAga,EAAApK,OAAA,GAAAgK,EAAA,MACF3X,MAAA,KAAAN,UAAA,CAMD,OAJAwY,EAAAA,EAAAA,YAAU,WACRrH,EAAKqJ,SAAS,OAAQF,KAAKG,UAAUN,EAAiB,KAAM,GAC9D,GAAG,CAAChJ,EAAMgJ,KAGR/e,EAAAA,GAAAA,KAACyD,EAAAA,GAAM,CAACC,MAAI,EAACC,aAAcV,EAAU9C,UACnCC,EAAAA,GAAAA,MAACwD,EAAAA,GAAa,CAAAzD,SAAA,EACZH,EAAAA,GAAAA,KAAC6D,EAAAA,GAAY,CAAA1D,UACXH,EAAAA,GAAAA,KAAC8D,EAAAA,GAAW,CAAA3D,SAAEoC,EAAE,qCAElBvC,EAAAA,GAAAA,KAACyd,EAAAA,GAAI1b,IAAAA,IAAA,GAAKgU,GAAI,IAAA5V,UACZH,EAAAA,GAAAA,KAAA,QACE0d,SAAU3H,EAAK4H,cArBtB,SAEoBC,GAAA,OAAAhB,EAAA1X,MAAC,KAADN,UAAA,IAoBb1E,UAAU,YACVH,GAAIuf,GAAAA,GAAYnf,UAEhBH,EAAAA,GAAAA,KAAC2W,EAAAA,GAAS,CACRR,QAASJ,EAAKI,QACdxP,KAAK,OACLiQ,OAAQ,SAAA1U,GAAA,IAAGuU,EAAKvU,EAALuU,MAAK,OACdrW,EAAAA,GAAAA,MAACyW,EAAAA,GAAQ,CAAA1W,SAAA,EACPH,EAAAA,GAAAA,KAACuW,EAAAA,GAAS,CACRC,SACExW,EAAAA,GAAAA,KAAA,OACEuf,wBAAyB,CACvBC,OAAQC,KAAAA,SACNld,EAAE,yCAITpC,SAEAoC,EAAE,gCAELvC,EAAAA,GAAAA,KAAC+W,EAAAA,GAAW,CAAA5W,UACVH,EAAAA,GAAAA,KAAC0f,GAAAA,GAAM3d,IAAA,CACL8E,OAAQ,IACR8Y,gBAAgB,OAChBC,MAAM,WACFnJ,OAGRzW,EAAAA,GAAAA,KAACkX,EAAAA,GAAW,MACH,UAKnBlX,EAAAA,GAAAA,KAAC+D,EAAAA,GAAY,CAAA5D,UACXH,EAAAA,GAAAA,KAACgE,EAAAA,GAAa,CAACC,KAAK,SAAS8R,KAAMuJ,GAAAA,GAAapc,QAASA,EAAQ/C,SAC9DoC,EAAE,uBAMf,CAlGAsd,GAAAA,GAAOC,OAAO,CAAEC,MAAO,CAAEC,GAAI,S,gBCvBhBC,GAA0B,WACrC,IAAAC,ENqSkC,WAClC,IAQYC,EARN/M,GAAcC,EAAAA,EAAAA,MAEpB+M,GAII7M,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAACtE,EAAkBO,mBAChCgE,YAAU0M,EAAA5O,IAAAC,MAAAC,MAAE,SAAA4O,EAAA5W,GAAA,IAAA6Q,EAAA1G,EAAA4G,EAAA8F,EAAA5N,EAAA,OAAAlB,MAAAI,MAAA,SAAA2O,GAAA,cAAAA,EAAAzO,KAAAyO,EAAAxO,MAAA,OAGE,OAFZuI,EAAQ7Q,EAAR6Q,SACA1G,EAAUnK,EAAVmK,WACA4G,EAAY/Q,EAAZ+Q,aAAY+F,EAAAxO,KAAA,EAMWgC,EAAAA,GAAUyM,uBAAuB,CACtDjF,UAAWjB,EACXrG,OAAQL,EACRiH,cAAeL,IACf,OAOD,OAPC8F,EAAAC,EAAA9N,KACgB,KALVC,EAAI4N,EAAJ5N,MAKCC,OACPS,EAAYgB,kBAAkB,CAC5BnD,SAAU,CAAC/B,EAAkBE,qBAG/B8E,EAAAA,GAAQ9K,QAAQ+K,EAAAA,EAAK5R,EAAE,sBACxBge,EAAA3N,OAAA,SACMF,EAAKC,MAAI,wBAAA4N,EAAA1N,OAAA,GAAAwN,EAAA,KACjB,SAAAI,GAAA,OAAAN,EAAAjb,MAAA,KAAAN,UAAA,KA3BD8N,EAAI0N,EAAJ1N,KACWxP,EAAOkd,EAAlB9L,UA6BF,MAAO,CAAEoM,kBA5BIN,EAAX5L,YA4BuC9B,KAAAA,EAAMxP,QAAAA,EACjD,CMxUyCyd,GAA/BD,EAAiBR,EAAjBQ,kBAAmBxd,EAAOgd,EAAPhd,QAC3BC,GAA4BC,EAAAA,EAAAA,UAAwB,CAAC,GAAmBC,EAAAC,IAAAH,EAAA,GAAjEyd,EAAMvd,EAAA,GAAEwd,EAASxd,EAAA,GAExByd,GAIIC,EAAAA,GAAAA,MAHOC,EAAmBF,EAA5BvG,QACW0G,EAAqBH,EAAhC7d,UACWie,EAAqBJ,EAAhCK,UAGIC,GAAmBthB,EAAAA,EAAAA,aAAW,eAAAJ,EAAA6R,IAAAC,MAAAC,MAClC,SAAAoL,EAAOwE,GAA0C,OAAA7P,MAAAI,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,UAC3C6O,UAAAA,EAAQ7gB,GAAE,CAAAkd,EAAAlL,KAAA,eAAAkL,EAAAlL,KAAA,EACM2O,EAAkB,CAClCpG,SAAU+G,EAAiB9F,UAC3B3H,WAAYgN,aAAM,EAANA,EAAQ7gB,GACpBya,aAAc6G,EAAiBxG,gBAC/B,OACU,IALHoC,EAAAxK,MAMPwO,IACD,wBAAAhE,EAAApK,OAAA,GAAAgK,EAAA,KAEJ,gBAAAe,GAAA,OAAAle,EAAAwF,MAAA,KAAAN,UAAA,EAZiC,GAalC,CAACgc,aAAM,EAANA,EAAQ7gB,GAAI2gB,EAAmBO,IAG5BK,GAA8BxhB,EAAAA,EAAAA,cAClC,SAACyhB,GACCV,EAAUU,GACVL,GACF,GACA,CAACA,IAGH,MAAO,CACLM,oBAAqBte,EACrBke,iBAAAA,EACAJ,oBAAAA,EACAC,sBAAAA,EACAC,sBAAuBI,EACvBG,mBAAoBb,EAExB,E,kNC9Cac,GAAgB9gB,KAAAA,KAAAA,KAAAA,KAAAA,KAAA,GAC1B+gB,EAAAA,GAAcC,QAAU,CACvBxgB,MAAO,UACPygB,MAAO,SAERF,EAAAA,GAAcG,QAAU,CACvB1gB,MAAO,UACPygB,MAAO,SAERF,EAAAA,GAAcI,OAAS,CAAE3gB,MAAO,SAAUygB,MAAO,WACjDF,EAAAA,GAAcK,KAAO,CAAE5gB,MAAO,UAAWygB,MAAO,SAChDF,EAAAA,GAAcM,KAAO,CAAE7gB,MAAO,OAAQygB,MAAO,QCXnCK,GAAkB,SAACC,GAE9B,OADkBA,IAASR,EAAAA,GAAcG,OAE3C,ECaMM,GAAS,CAAC,OAAQ,OAAQ,OAAQ,cAAe,eAEjDC,GAAc,CAClBlb,KAAMmb,GAAAA,GACNC,YAAaC,GAAAA,GACbC,YAAaD,GAAAA,IAGR,SAASE,GAAiBhjB,GAGyB,IAFxDkhB,EAAMlhB,EAANkhB,OACA+B,EAAejjB,EAAfijB,gBAEQ5iB,EAAkB6gB,EAAlB7gB,GAAIyS,EAAcoO,EAAdpO,IAAKvO,EAAS2c,EAAT3c,KACX2e,EAAYV,GAAgB1P,GAC5BqQ,EAAoB5e,IAASwU,EAAAA,GAAaqK,QAExCjN,EAAmBR,IAAnBQ,eAEFkN,GAAqBjjB,EAAAA,EAAAA,cAAY,YACrCkjB,EAAAA,GAAAA,IAAiB,CACfjjB,GAAAA,EACAkjB,SAAUrC,EAAOja,MAErB,GAAG,CAAC5G,EAAI6gB,EAAOja,OAETuc,GAAepjB,EAAAA,EAAAA,cAAY,WAC/B+V,EAAe9V,EACjB,GAAG,CAACA,EAAI8V,IAEFsN,GAAerjB,EAAAA,EAAAA,cAAY,WAC/B6iB,EAAgB/B,EAClB,GAAG,CAACA,EAAQ+B,IAEZ,OACEviB,EAAAA,GAAAA,MAAA,WAASF,UAAU,qDAAoDC,SAAA,EACrEH,EAAAA,GAAAA,KAACiB,EAAAA,GAAM,CACLC,QAAS,QACTiG,KAAM,KACNa,SAAU4a,EACV5hB,QAASmiB,EAAahjB,UAEtBH,EAAAA,GAAAA,KAACojB,GAAAA,EAAS,OAEZhjB,EAAAA,GAAAA,MAACuK,GAAAA,GAAS,CAAAxK,SAAA,EACRH,EAAAA,GAAAA,KAAC6K,GAAAA,GAAgB,CAAA1K,UACfH,EAAAA,GAAAA,KAACiB,EAAAA,GAAM,CAACC,QAAQ,QAAQ8G,SAAU4a,EAAWzb,KAAM,KAAKhH,UACtDH,EAAAA,GAAAA,KAACqjB,GAAAA,EAAU,SAGfrjB,EAAAA,GAAAA,KAAC8K,GAAAA,GAAgB,CAAC5K,UAAU,sCAAqCC,UAC/DH,EAAAA,GAAAA,KAAA,MAAIE,UAAU,YAAWC,SACtBwI,OAAOqS,QAAQ4F,GACb5W,QAAO,SAAA9H,GAAA,IAAE6V,EAAFzU,IAAApB,EAAA,GAAK,UAAMkgB,GAAOrT,MAAK,SAACrO,GAAC,OAAKA,IAAMqX,CAAG,GAAC,IAE/CtX,KAAI,SAAAgJ,EAAeqF,GAAQ,IAAAvE,EAAAjH,IAAAmG,EAAA,GAArBsO,EAAGxN,EAAA,GAAE7H,EAAK6H,EAAA,GACf,OACEnK,EAAAA,GAAAA,MAAA,MAAcF,UAAU,aAAYC,SAAA,CACjC4X,EAAI,KACL/X,EAAAA,GAAAA,KAAA,OAAAG,SACG4X,KAAOsK,GACJA,GAAYtK,GAAiCrV,GAC7CA,MALCoM,EASb,WAKP+T,IACC7iB,EAAAA,GAAAA,KAACiB,EAAAA,GAAM,CACLC,QAAS,QACTF,QAAS+hB,EACT/a,SAAU4a,EACVzb,KAAM,KAAKhH,UAEXH,EAAAA,GAAAA,KAACsjB,GAAAA,EAAe,OAGpBtjB,EAAAA,GAAAA,KAACa,GAAAA,EAAmB,CAACE,KAAMmiB,EAAa/iB,UACtCH,EAAAA,GAAAA,KAACiB,EAAAA,GAAM,CAACC,QAAS,QAASiG,KAAM,KAAMa,SAAU4a,EAAUziB,UACxDH,EAAAA,GAAAA,KAACujB,GAAAA,EAAM,UAKjB,C,2EC1FA,SAASC,GAAG9jB,GAAkC,IAA/B8S,EAAG9S,EAAH8S,IACPiR,EAAgB/B,GAAiBlP,GACvC,OACExS,EAAAA,GAAAA,KAAA,QACEE,UAAW,8BACXkL,MAAO,CAAEsY,gBAAiBD,EAAc5B,QAG9C,CAEO,IAAM8B,GAAiB,SAAHzhB,GAA2B,IAI/BigB,EAEbyB,EANuBhD,EAAM1e,EAAN0e,OACvBre,GAAMC,EAAAA,EAAAA,MAAND,EACFnB,EAAQmB,EAAE,iCAAD4C,OAAkCyb,EAAOpO,MAqBlDqR,EAAQ,CACZ,CACE9L,IAAK,mBACL3W,MAAOmB,EAAE,mCACTpC,SAAUygB,EAAOkD,kBAEnB,CACE/L,IAAK,mCACL3W,MAAOmB,EAAE,mBACTpC,SAAU,GAAFgF,OAAKyb,EAAOmD,gBAAgBC,QAAQ,GAAE,OAEhD,CACEjM,IAAK,eACL3W,MAAOmB,EAAE,gCACTpC,UAjCiBgiB,EAiCKvB,EAAOqD,aAAavI,OA/BtCkI,EAAWzB,EAAK+B,QAAQ,WAAY,MAErBC,KACnBP,EACA,oBACA,SAACQ,EAAOla,GACN,OACElK,EAAAA,GAAAA,KAAA,QAAcE,UAAW,eAAeC,SACrCikB,GADQla,EAIf,OAwBJ,OACE9J,EAAAA,GAAAA,MAAA,WAAAD,SAAA,EACEC,EAAAA,GAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CH,EAAAA,GAAAA,KAACwjB,GAAG,CAAChR,IAAKoO,EAAOpO,MAAW,IAAEpR,MAEhCpB,EAAAA,GAAAA,KAAA,OAAKE,UAAU,2CAA0CC,SACtD0jB,EAAMpjB,KAAI,SAACC,EAAGoO,GACb,OACE1O,EAAAA,GAAAA,MAAA,OAAiBF,UAAW4O,EAAM,EAAI,aAAe,GAAG3O,SAAA,EACtDC,EAAAA,GAAAA,MAAA,KAAAD,SAAA,CAAIO,EAAEU,MAAM,QACZpB,EAAAA,GAAAA,KAAA,OAAKE,UAAW,yCAAyCC,SACtDO,EAAEP,aAHGO,EAAEqX,IAOhB,QAIR,EAEO,SAASsM,GAAWjiB,GAAqB,IAAlBwe,EAAMxe,EAANwe,OAC5B,OACExgB,EAAAA,GAAAA,MAACuK,GAAAA,GAAS,CAAAxK,SAAA,EACRH,EAAAA,GAAAA,KAAC6K,GAAAA,GAAgB,CAACyZ,SAAO,EAAAnkB,UACvBH,EAAAA,GAAAA,KAACiB,EAAAA,GAAM,CAACC,QAAS,QAASiG,KAAM,KAAKhH,UACnCH,EAAAA,GAAAA,KAACwjB,GAAG,CAAChR,IAAKoO,EAAOpO,WAGrBxS,EAAAA,GAAAA,KAAC8K,GAAAA,GAAgB,CAAC5K,UAAU,WAAUC,UACpCH,EAAAA,GAAAA,KAAC2jB,GAAc,CAAC/C,OAAQA,QAIhC,CCjGO,IAAM2D,GAA4B,SAACxkB,GACxC,IAAAykB,EAAsC/P,IAA9BW,EAAgBoP,EAAhBpP,iBAAkBlS,EAAOshB,EAAPthB,QAC1BC,GAAkCC,EAAAA,EAAAA,UAAiB,IAAGC,EAAAC,IAAAH,EAAA,GAA/CshB,EAASphB,EAAA,GAAEqhB,EAAYrhB,EAAA,GACxBshB,EAAYzhB,GAAyB,KAAduhB,GAAoBA,IAAc1kB,EAEzD6kB,EAAsB,eAAAllB,EAAA6R,IAAAC,MAAAC,MAAG,SAAAoL,EAC7BjJ,EACAgP,GAAkB,IAAA9N,EAAA+P,EAAAjgB,UAAA,OAAA4M,MAAAI,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,OACW,GAA7B+C,EAAqB+P,EAAAhgB,OAAA,QAAAqB,IAAA2e,EAAA,IAAAA,EAAA,IAEjBF,EAAW,CAAF1H,EAAAlL,KAAA,eAAAkL,EAAArK,OAAA,iBAGY,OAAzB8R,EAAa9Q,GAAYqJ,EAAAnL,KAAA,EAAAmL,EAAAlL,KAAA,EAEjBqD,EAAiB,CACrBP,YAAa,CAACjB,GACdpB,IAAKoQ,EAAY,EAAI,EACrB9N,aAAAA,IACA,OACF4P,EAAa,IAAIzH,EAAAlL,KAAA,iBAAAkL,EAAAnL,KAAA,GAAAmL,EAAA6H,GAAA7H,EAAA,SAEjByH,EAAa,IAAI,yBAAAzH,EAAApK,OAAA,GAAAgK,EAAA,mBAEpB,gBAnB2Be,EAAAvJ,GAAA,OAAA3U,EAAAwF,MAAA,KAAAN,UAAA,KAqB5B,MAAO,CACLggB,uBAAAA,EACA1hB,QAASyhB,EAEb,ECZMI,GAAOnkB,KAAAA,KAAAA,KAAAA,KAAAA,KAAA,GACV+gB,EAAAA,GAAcC,SAAU5hB,EAAAA,GAAAA,KAACglB,GAAAA,EAAI,KAC7BrD,EAAAA,GAAcG,SAAU9hB,EAAAA,GAAAA,KAACilB,GAAAA,EAAO,KAChCtD,EAAAA,GAAcI,QAAS/hB,EAAAA,GAAAA,KAACklB,GAAAA,EAAS,KACjCvD,EAAAA,GAAcK,MAAOhiB,EAAAA,GAAAA,KAACklB,GAAAA,EAAS,KAC/BvD,EAAAA,GAAcM,MAAOjiB,EAAAA,GAAAA,KAACklB,GAAAA,EAAS,KAG3B,SAASC,GAAiBzlB,GAKV,IAJrBkhB,EAAMlhB,EAANkhB,OACAM,EAAqBxhB,EAArBwhB,sBACAkE,EAAgB1lB,EAAhB0lB,iBAGQ7iB,GAAMC,EAAAA,EAAAA,MAAND,EACAiQ,EAA4CoO,EAA5CpO,IAAK+I,EAAuCqF,EAAvCrF,UAAWvU,EAA4B4Z,EAA5B5Z,SAAUqe,EAAkBzE,EAAlByE,UAAWtlB,EAAO6gB,EAAP7gB,GACvCulB,EAAgBP,GAAQvS,GACxB+S,EAAItW,QAAmB,IAAXjI,GAAgBgd,QAAQ,IAClCY,EAA2BL,GAA0BxkB,GAArD6kB,uBACFhC,EAAYV,GAAgB1P,GAC5BgT,EAA4B,IAAdH,EAEdI,EACJ,WAD4B,IAC3B3Q,EAAqBlQ,UAAAC,OAAA,QAAAqB,IAAAtB,UAAA,IAAAA,UAAA,GAAQ,OAC9B,WACEggB,EAAuBhE,EAAO7gB,GAAI6iB,EAAW9N,EAC/C,CAAC,EAEGwM,GAA8BxhB,EAAAA,EAAAA,cAAY,WAC9CohB,EAAsBN,EACxB,GAAG,CAACA,EAAQM,IAENwE,GAAyB5lB,EAAAA,EAAAA,cAAY,WACzCslB,EAAiBxE,EACnB,GAAG,CAACA,EAAQwE,IAEZ,OACEhlB,EAAAA,GAAAA,MAAA,WAASF,UAAU,0BAAyBC,SAAA,EAC1CC,EAAAA,GAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,GAAAA,MAACulB,EAAAA,GAAY,CAAAxlB,SAAA,EACXH,EAAAA,GAAAA,KAAC4lB,EAAAA,GAAmB,CAACtB,SAAO,EAAAnkB,UAC1BH,EAAAA,GAAAA,KAACiB,EAAAA,GAAM,CAACC,QAAS,QAASiG,KAAM,KAAKhH,SAClCob,OAGLnb,EAAAA,GAAAA,MAACylB,EAAAA,GAAmB,CAAA1lB,SAAA,EAClBH,EAAAA,GAAAA,KAAC8lB,EAAAA,GAAgB,CAAC9kB,QAASsgB,EAA4BnhB,SACpDoC,EAAE,mCAELvC,EAAAA,GAAAA,KAAC8lB,EAAAA,GAAgB,CAAC9kB,QAAS0kB,EAAuBvlB,SAC/CoC,EAAE,yCAITvC,EAAAA,GAAAA,KAACO,GAAAA,EAAS,CAACC,YAAY,WAAWN,UAAU,cAE9CF,EAAAA,GAAAA,KAACa,GAAAA,EAAmB,CAClBklB,MAAOxjB,EAAE,wBAAyB,CAAEyjB,SAAUX,IAC9CvkB,OAAQ0kB,GAAe5C,EACvB7hB,KAAM0kB,GAAyB,GAC/BQ,SAAUR,GAAyB,GAAOtlB,UAE1CH,EAAAA,GAAAA,KAACiB,EAAAA,GAAM,CACLC,QAAS,QACTiG,KAAM,KACNnG,QACEwkB,GAAe5C,EACX6C,GAAyB,GACzB,WAAO,EACZtlB,SAEAmlB,MAGJpD,GAAgB1P,IACfpS,EAAAA,GAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EACtCH,EAAAA,GAAAA,KAACoH,GAAAA,EAAQ,CAAC1E,MAAO6iB,EAAGrlB,UAAU,wBAC7BqlB,EAAE,QAGLvlB,EAAAA,GAAAA,KAACqkB,GAAW,CAACzD,OAAQA,MAI7B,CCpGO,IAAMsF,GAAoB,WAC/B,Ib8QYC,EARN/S,EAENgT,EACE1T,EazQF2T,GbsQMjT,GAAcC,EAAAA,EAAAA,MAEpB+S,GAII7S,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAACtE,EAAkBM,kBAChCiE,YAAU0S,EAAA5U,IAAAC,MAAAC,MAAE,SAAA6U,EAAAlkB,GAAA,IAAAuE,EAAAiN,EAAA2S,EAAA7T,EAAA,OAAAlB,MAAAI,MAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEA,OADVpL,EAAIvE,EAAJuE,KACAiN,EAAUxR,EAAVwR,WAAU4S,EAAAzU,KAAA,EAKagC,EAAAA,GAAU0S,gBAAgB,CAC/CxS,OAAQL,EACRjN,KAAMA,IACN,OAMD,OANC4f,EAAAC,EAAA/T,KACgB,KAJVC,EAAI6T,EAAJ7T,MAICC,OACPuB,EAAAA,GAAQ9K,QAAQ+K,EAAAA,EAAK5R,EAAE,oBACvB6Q,EAAYgB,kBAAkB,CAC5BnD,SAAU,CAAC/B,EAAkBE,sBAEhCoX,EAAA5T,OAAA,SACMF,EAAKC,MAAI,wBAAA6T,EAAA3T,OAAA,GAAAyT,EAAA,KACjB,SAAAI,GAAA,OAAAP,EAAAjhB,MAAA,KAAAN,UAAA,KAvBD8N,EAAI0T,EAAJ1T,KA0BK,CAAExP,QAzBWkjB,EAAlB9R,UAyBgBqS,SAxBLP,EAAX5R,YAwBuC9B,KAAAA,IanSjCiU,EAAQN,EAARM,SAAUzjB,EAAOmjB,EAAPnjB,QAClBC,GAA4BC,EAAAA,EAAAA,YAAyBC,EAAAC,IAAAH,EAAA,GAA9Cyd,EAAMvd,EAAA,GAAEwd,EAASxd,EAAA,GAExByd,GAIIC,EAAAA,GAAAA,MAHO6F,EAAa9F,EAAtBvG,QACWsM,EAAe/F,EAA1B7d,UACW0f,EAAe7B,EAA1BK,UAGI2F,GAAahnB,EAAAA,EAAAA,aAAW,eAAAJ,EAAA6R,IAAAC,MAAAC,MAC5B,SAAAoL,EAAOlW,GAAY,OAAA6K,MAAAI,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,UACb6O,UAAAA,EAAQ7gB,GAAE,CAAAkd,EAAAlL,KAAA,eAAAkL,EAAAlL,KAAA,EACM4U,EAAS,CAAE/S,WAAYgN,EAAO7gB,GAAI4G,KAAAA,IAAO,OAC/C,IADHsW,EAAAxK,MAEPoU,IACD,wBAAA5J,EAAApK,OAAA,GAAAgK,EAAA,KAEJ,gBAAAe,GAAA,OAAAle,EAAAwF,MAAA,KAAAN,UAAA,EAR2B,GAS5B,CAACgc,aAAM,EAANA,EAAQ7gB,GAAI4mB,EAAUE,IAGnBE,GAAajnB,EAAAA,EAAAA,cACjB,SAACyhB,GACCV,EAAUU,GACVoB,GACF,GACA,CAACA,IAGH,MAAO,CACLqE,cAAe9jB,EACf4jB,WAAAA,EACAF,cAAAA,EACAC,gBAAAA,EACAlE,gBAAiBoE,EACjBE,YAAarG,aAAM,EAANA,EAAQja,KAEzB,ECtCaugB,GAAc,WACzB,IAAAC,Ed2UgC,WAChC,IAQYC,EARNhU,GAAcC,EAAAA,EAAAA,MAEpBgU,GAII9T,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAACtE,EAAkBQ,iBAChC+D,YAAU2T,EAAA7V,IAAAC,MAAAC,MAAE,SAAA6V,EAAOC,GAAgC,IAAAC,EAAAC,EAAA,OAAAjW,MAAAI,MAAA,SAAA8V,GAAA,cAAAA,EAAA5V,KAAA4V,EAAA3V,MAAA,cAAA2V,EAAA5V,KAAA,EAAA4V,EAAA3V,KAAA,EAExBgC,EAAAA,GAAU4T,QAAQ,CACvC3I,KAAMuI,EAAOvI,KACb/K,OAAQsT,EAAO3T,aACf,OAQD,OARC4T,EAAAE,EAAAjV,KAEiB,KAAfC,OALIA,EAAI8U,EAAJ9U,WAKA,EAAJA,EAAMC,QACRS,EAAYgB,kBAAkB,CAC5BnD,SAAU,CAAC/B,EAAkBE,qBAG/B8E,EAAAA,GAAQ9K,QAAQ+K,EAAAA,EAAK5R,EAAE,sBACxBmlB,EAAA9U,OAAA,SACMF,aAAI,EAAJA,EAAMC,MAAI,OAAA+U,EAAA5V,KAAA,EAAA4V,EAAA5C,GAAA4C,EAAA,SAEjBxT,EAAAA,GAAQzL,MAAM,SAAS,yBAAAif,EAAA7U,OAAA,GAAAyU,EAAA,kBAE1B,SAAAM,GAAA,OAAAR,EAAAliB,MAAA,KAAAN,UAAA,KAvBD8N,EAAI2U,EAAJ3U,KACWxP,EAAOmkB,EAAlB/S,UAyBF,MAAO,CAAEuT,gBAxBIR,EAAX7S,YAwBqC9B,KAAAA,EAAMxP,QAAAA,EAC/C,Cc1WuC4kB,GAA7BD,EAAeV,EAAfU,gBAAiB3kB,EAAOikB,EAAPjkB,QACzBC,GAA4BC,EAAAA,EAAAA,UAAwB,CAAC,GAAmBC,EAAAC,IAAAH,EAAA,GAAjEyd,EAAMvd,EAAA,GAAEwd,EAASxd,EAAA,GAExByd,GAIIC,EAAAA,GAAAA,MAHOgH,EAAcjH,EAAvBvG,QACWyN,EAAgBlH,EAA3B7d,UACWmiB,EAAgBtE,EAA3BK,UAGI8G,GAAmBnoB,EAAAA,EAAAA,aAAW,eAAAJ,EAAA6R,IAAAC,MAAAC,MAClC,SAAAoL,EAAOmC,GAAY,OAAAxN,MAAAI,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,cAAAkL,EAAAlL,KAAA,EACC8V,EAAgB,CAChCjU,WAAYgN,aAAM,EAANA,EAAQ7gB,GACpBif,KAAAA,IACA,OACU,IAJH/B,EAAAxK,MAKPuV,IACD,wBAAA/K,EAAApK,OAAA,GAAAgK,EAAA,KACF,gBAAAe,GAAA,OAAAle,EAAAwF,MAAA,KAAAN,UAAA,EATiC,GAUlC,CAACijB,EAAiBjH,aAAM,EAANA,EAAQ7gB,GAAIioB,IAG1BtC,GAAyB5lB,EAAAA,EAAAA,cAC7B,SAACyhB,GACCV,EAAUU,GACV6D,GACF,GACA,CAACA,IAGH,MAAO,CACL8C,eAAgBhlB,EAChB+kB,iBAAAA,EACAF,eAAAA,EACAC,iBAAAA,EACA5C,iBAAkBM,EAClByC,WAAYvH,EAEhB,ECDO,SAASwH,GAAY1oB,GAMN,IAAA2oB,EAAAC,EALpBrV,EAASvT,EAATuT,UACA3C,EAAU5Q,EAAV4Q,WACAC,EAAa7Q,EAAb6Q,cACApC,EAAYzO,EAAZyO,aACAC,EAAe1O,EAAf0O,gBAEAma,EAA8B5mB,EAAAA,SAA6B,IAAG6mB,EAAAllB,IAAAilB,EAAA,GAAvDE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAA0ChnB,EAAAA,SACxC,IACDinB,EAAAtlB,IAAAqlB,EAAA,GAFME,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAGtCG,EACEpnB,EAAAA,SAAgC,CAAC,GAAEqnB,EAAA1lB,IAAAylB,EAAA,GAD9BE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAG5CG,EAOIlJ,KANFuB,EAAmB2H,EAAnB3H,oBACAJ,EAAgB+H,EAAhB/H,iBACAJ,EAAmBmI,EAAnBnI,oBACAC,EAAqBkI,EAArBlI,sBACAC,EAAqBiI,EAArBjI,sBACAO,EAAkB0H,EAAlB1H,mBAGF2H,EAOIlD,KANFc,EAAaoC,EAAbpC,cACAF,EAAUsC,EAAVtC,WACAF,EAAawC,EAAbxC,cACAC,EAAeuC,EAAfvC,gBACAlE,EAAeyG,EAAfzG,gBACAsE,EAAWmC,EAAXnC,YAGFoC,EAOInC,KANF9B,EAAgBiE,EAAhBjE,iBACA4C,EAAgBqB,EAAhBrB,iBACAD,EAAcsB,EAAdtB,eACAG,EAAcmB,EAAdnB,eACAD,EAAgBoB,EAAhBpB,iBACAE,EAAUkB,EAAVlB,WAGImB,ECzDD,SAA+B5pB,GAIP,IAH7BwhB,EAAqBxhB,EAArBwhB,sBACAyB,EAAejjB,EAAfijB,gBACAyC,EAAgB1lB,EAAhB0lB,iBAEQ7iB,GAAMC,EAAAA,EAAAA,IAAe,cAAe,CAC1C+mB,UAAW,qBADLhnB,EAIA8K,GAAgC9B,EAAAA,GAAAA,KAAhC8B,4BACAkH,EAAsBrB,IAAtBqB,kBAuIR,MArI4C,CAC1C,CACExU,GAAI,SACJypB,OAAQ,SAAAtnB,GAAA,IAAGunB,EAAKvnB,EAALunB,MAAK,OACdzpB,EAAAA,GAAAA,KAAC0pB,GAAAA,EAAQ,CACPC,QACEF,EAAMG,4BACLH,EAAMI,6BAA+B,gBAExCC,gBAAiB,SAACpnB,GAAK,OAAK+mB,EAAMM,4BAA4BrnB,EAAM,EACpE,aAAW,cACX,EAEJsnB,KAAM,SAAA5nB,GAAA,IAAGmf,EAAGnf,EAAHmf,IAAG,OACVvhB,EAAAA,GAAAA,KAAC0pB,GAAAA,EAAQ,CACPC,QAASpI,EAAI0I,gBACbH,gBAAiB,SAACpnB,GAAK,OAAK6e,EAAI2I,iBAAiBxnB,EAAM,EACvD,aAAW,cACX,EAEJynB,eAAe,EACfC,cAAc,GAEhB,CACEC,YAAa,OACbb,OAAQ,SAAA/f,GAAgB,IAAb6gB,EAAM7gB,EAAN6gB,OACT,OACElqB,EAAAA,GAAAA,MAACa,EAAAA,GAAM,CACLC,QAAQ,QACRF,QAAS,kBAAMspB,EAAOC,cAAuC,QAAzBD,EAAOE,cAAwB,EAACrqB,SAAA,CAEnEoC,EAAE,SACHvC,EAAAA,GAAAA,KAACyqB,GAAAA,EAAW,MAGlB,EACAzL,KAAM,CAAE0L,cAAe,gBACvBV,KAAM,SAAAzf,GAAa,IAAVgX,EAAGhX,EAAHgX,IACD5a,EAAe4a,EAAIoJ,SAAS,QAElC,OACEvqB,EAAAA,GAAAA,MAACwqB,GAAAA,EAAO,CAAAzqB,SAAA,EACNH,EAAAA,GAAAA,KAAC6qB,GAAAA,GAAc,CAACvG,SAAO,EAAAnkB,UACrBC,EAAAA,GAAAA,MAAA,OACEF,UAAU,4BACVc,QAASqM,EACPkU,EAAIuJ,SAAS/qB,GACbwhB,EAAIuJ,SAAS7Y,OACb9R,SAAA,EAEFH,EAAAA,GAAAA,KAAC+qB,GAAAA,EAAQ,CAACpkB,KAAMA,KAChB3G,EAAAA,GAAAA,KAAA,QAAME,WAAWS,EAAAA,GAAAA,IAAG,YAAYR,SAAEwG,UAGtC3G,EAAAA,GAAAA,KAACgrB,GAAAA,GAAc,CAAA7qB,UACbH,EAAAA,GAAAA,KAAA,KAAAG,SAAIwG,QAIZ,GAEF,CACE0jB,YAAa,cACbb,OAAQ,SAAA/e,GAAgB,IAAb6f,EAAM7f,EAAN6f,OACT,OACElqB,EAAAA,GAAAA,MAACa,EAAAA,GAAM,CACLC,QAAQ,QACRF,QAAS,kBAAMspB,EAAOC,cAAuC,QAAzBD,EAAOE,cAAwB,EAACrqB,SAAA,CAEnEoC,EAAE,eACHvC,EAAAA,GAAAA,KAACyqB,GAAAA,EAAW,MAGlB,EACAT,KAAM,SAAAiB,GAAA,IAAG1J,EAAG0J,EAAH1J,IAAG,OACVvhB,EAAAA,GAAAA,KAAA,OAAKE,UAAU,YAAWC,UACvBqiB,EAAAA,GAAAA,IAAWjB,EAAIoJ,SAAS,iBACrB,GAGV,CACEN,YAAa,SACbb,OAAQjnB,EAAE,WACVynB,KAAM,SAAAkB,GAAa,IAAV3J,EAAG2J,EAAH3J,IACDxhB,EAAKwhB,EAAIuJ,SAAS/qB,GACxB,OACEC,EAAAA,GAAAA,KAACmrB,GAAAA,EAAM,CACLxB,QAAoC,MAA3BpI,EAAIoJ,SAAS,UACtBb,gBAAiB,SAAC9W,GAChBuB,EAAkB,CAAEZ,OAAQX,EAAGY,WAAY7T,GAC7C,GAGN,GAEF,CACEsqB,YAAa,YACbb,OAAQjnB,EAAE,eACVynB,KAAM,SAAAoB,GAAA,IAAG7J,EAAG6J,EAAH7J,IAAG,OACVvhB,EAAAA,GAAAA,KAAA,OAAKE,UAAU,aAAYC,SAAEohB,EAAIoJ,SAAS,cAAmB,GAGjE,CACEN,YAAa,MACbb,OAAQjnB,EAAE,iBAEVynB,KAAM,SAAAqB,GAAa,IAAV9J,EAAG8J,EAAH9J,IACP,OACEvhB,EAAAA,GAAAA,KAACmlB,GAAiB,CAChBvE,OAAQW,EAAIuJ,SACZ5J,sBAAuBA,EACvBkE,iBAAkBA,GAGxB,GAEF,CACErlB,GAAI,UACJypB,OAAQjnB,EAAE,UACV6nB,cAAc,EACdJ,KAAM,SAAAsB,GAAa,IACX1K,EADI0K,EAAH/J,IACYuJ,SAEnB,OACE9qB,EAAAA,GAAAA,KAAC0iB,GAAiB,CAChB9B,OAAQA,EACR+B,gBAAiBA,GAGvB,GAKN,CDzFkB4I,CAAuB,CACrCrK,sBAAAA,EACAyB,gBAAAA,EACAyC,iBAAAA,IAGIoG,GAAoBjd,EAAAA,EAAAA,UAAQ,WAChC,MAAO,CACLkd,WAAYnb,EAAW7L,SAAW,GAAK,EACvC2N,SAAU9B,EAAW8B,UAAY,GAErC,GAAG,CAAC9B,IAEEmZ,GAAQiC,EAAAA,EAAAA,IAAc,CAC1BhZ,KAAMO,EACNqW,QAAAA,EACAqC,gBAAiBjD,EACjBkD,sBAAuB9C,EACvB+C,iBAAiBA,EAAAA,EAAAA,MACjBC,uBAAuBA,EAAAA,EAAAA,MACvBC,mBAAmBA,EAAAA,EAAAA,MACnBC,qBAAqBA,EAAAA,EAAAA,MACrBC,yBAA0B/C,EAC1BgD,qBAAsB9d,EACtB+d,kBAAkB,EAClBC,MAAO,CACL3D,QAAAA,EACAI,cAAAA,EACAI,iBAAAA,EACA9a,aAAAA,EACAmC,WAAYkb,GAEda,SAA0B,QAAlBhE,EAAE/X,EAAWc,aAAK,IAAAiX,EAAAA,EAAI,IAGhC,OACEjoB,EAAAA,GAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBC,EAAAA,GAAAA,MAAC2Z,GAAAA,GAAK,CAACuS,cAAc,eAAcnsB,SAAA,EACjCH,EAAAA,GAAAA,KAACusB,GAAAA,GAAW,CAAApsB,SACTspB,EAAM+C,kBAAkB/rB,KAAI,SAACgsB,GAAW,OACvCzsB,EAAAA,GAAAA,KAAC0sB,GAAAA,GAAQ,CAAAvsB,SACNssB,EAAYE,QAAQlsB,KAAI,SAAC+oB,GACxB,OACExpB,EAAAA,GAAAA,KAAC4sB,GAAAA,GAAS,CAAAzsB,SACPqpB,EAAOqD,cACJ,MACAC,EAAAA,EAAAA,IACEtD,EAAOc,OAAOyC,UAAUvD,OACxBA,EAAOwD,eALCxD,EAAOzpB,GAS3B,KAZa0sB,EAAY1sB,GAahB,OAGfC,EAAAA,GAAAA,KAACitB,GAAAA,GAAS,CAAC/sB,UAAU,WAAUC,SACJ,QAAxBmoB,EAAAmB,EAAMyD,cAAcC,YAAI,IAAA7E,GAAxBA,EAA0BzjB,OACzB4kB,EAAMyD,cAAcC,KAAK1sB,KAAI,SAAC8gB,GAAG,OAC/BvhB,EAAAA,GAAAA,KAAC0sB,GAAAA,GAAQ,CAEP,aAAYnL,EAAI0I,iBAAmB,WAAW9pB,SAE7CohB,EAAI6L,kBAAkB3sB,KAAI,SAACupB,GAAI,IAAAqD,EAAA,OAC9BrtB,EAAAA,GAAAA,KAACstB,GAAAA,GAAS,CAERptB,UAAqC,QAA5BmtB,EAAErD,EAAKM,OAAOyC,UAAU/N,YAAI,IAAAqO,OAAA,EAA1BA,EAA4B3C,cAAcvqB,UAEpD2sB,EAAAA,EAAAA,IAAW9C,EAAKM,OAAOyC,UAAU/C,KAAMA,EAAKgD,eAHxChD,EAAKjqB,GAIA,KATTwhB,EAAIxhB,GAWA,KAGbC,EAAAA,GAAAA,KAAC0sB,GAAAA,GAAQ,CAAAvsB,UACPH,EAAAA,GAAAA,KAACstB,GAAAA,GAAS,CAACC,QAASjE,EAAQzkB,OAAQ3E,UAAU,mBAAkBC,SAAC,wBAOzEH,EAAAA,GAAAA,KAAA,OAAKE,UAAU,sCAAqCC,UAClDH,EAAAA,GAAAA,KAAA,OAAKE,UAAU,YAAWC,UACxBH,EAAAA,GAAAA,KAACwtB,GAAAA,EAAiBzrB,IAAAA,IAAA,IACZ0rB,EAAAA,EAAAA,MAAKnd,EAAY,UAAW,aAAW,IAC3Cc,MAAOd,EAAWc,MAClB5L,SAAU,SAAC6M,EAAMD,GACf7B,EAAc,CAAE8B,KAAAA,EAAMD,SAAAA,GACxB,SAIL4O,IACChhB,EAAAA,GAAAA,KAACoa,GAAiB,CAChBxG,WAAY6N,EAAmB1hB,GAC/Bua,SAAUmH,EAAmBlG,UAC7Bf,aAAciH,EAAmB5G,cACjCjD,mBAAmB8V,EAAAA,GAAAA,IAAajM,EAAmB9a,MACnD5F,KAAMqgB,EACN7G,QAASyG,EACT/d,UAAWge,EACX/d,QAASse,IAIZoF,IACC5mB,EAAAA,GAAAA,KAAC2tB,EAAAA,EAAY,CACXpT,QAASqM,EACT7lB,KAAM+lB,EACN5jB,QAAS8jB,EACT/jB,UAAW4jB,EACXI,YAAaA,IAIhBc,IACC/nB,EAAAA,GAAAA,KAAC8e,GAAa,CACZ7b,UAAW+kB,EACX9kB,QAASglB,EACTnnB,KAAMknB,EACNlJ,gBAAiBoJ,EAAWyF,gBAKtC,C,wCE9MO,IAAMC,GAAyB,WACpC,IAAAC,EjB6W+B,WAC/B,IAUYC,EAVJhuB,GAAO8L,EAAAA,EAAAA,MAAP9L,GACRiuB,GAAsCC,EAAAA,EAAAA,MAA9BC,EAAmBF,EAAnBE,oBAAqB7b,EAAI2b,EAAJ3b,KACvBe,GAAcC,EAAAA,EAAAA,MAEpB8a,GAII5a,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAACtE,EAAkBU,gBAChC6D,YAAUsa,EAAAxc,IAAAC,MAAAC,MAAE,SAAA2c,EAAOznB,GAAY,IAAA0nB,EAAA3b,EAAA,OAAAlB,MAAAI,MAAA,SAAA0c,GAAA,cAAAA,EAAAxc,KAAAwc,EAAAvc,MAAA,cAAAuc,EAAAvc,KAAA,EACNgC,EAAAA,GAAUwa,gBAAgB,CAC/C5nB,KAAAA,EACAsL,MAAOlS,IACP,OAWD,OAXCsuB,EAAAC,EAAA7b,KACgB,KAJVC,EAAI2b,EAAJ3b,MAICC,OACM,IAATN,EACFe,EAAYgB,kBAAkB,CAC5BnD,SAAU,CAAC/B,EAAkBE,qBAG/B8e,IAGFha,EAAAA,GAAQ9K,QAAQ+K,EAAAA,EAAK5R,EAAE,qBACxB+rB,EAAA1b,OAAA,SACMF,EAAKC,MAAI,wBAAA2b,EAAAzb,OAAA,GAAAub,EAAA,KACjB,SAAAI,GAAA,OAAAT,EAAA7oB,MAAA,KAAAN,UAAA,KAtBD8N,EAAIyb,EAAJzb,KACWxP,EAAOirB,EAAlB7Z,UAwBF,MAAO,CAAEma,eAvBIN,EAAX3Z,YAuBoCtR,QAAAA,EAASwP,KAAAA,EACjD,CiB7YsCgc,GAA5BD,EAAcX,EAAdW,eAAgBvrB,EAAO4qB,EAAP5qB,QAExB4d,GAIIC,EAAAA,GAAAA,MAHO4N,EAAa7N,EAAtBvG,QACWqU,EAAe9N,EAA1B7d,UACW4rB,EAAe/N,EAA1BK,UAGI2N,GAAahvB,EAAAA,EAAAA,aAAW,eAAAJ,EAAA6R,IAAAC,MAAAC,MAC5B,SAAAoL,EAAOlW,GAAY,OAAA6K,MAAAI,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,cAAAkL,EAAAlL,KAAA,EACC0c,EAAe9nB,GAAK,OAC1B,IADHsW,EAAAxK,MAEPmc,IACD,wBAAA3R,EAAApK,OAAA,GAAAgK,EAAA,KACF,gBAAAe,GAAA,OAAAle,EAAAwF,MAAA,KAAAN,UAAA,EAN2B,GAO5B,CAACgqB,EAAiBH,IAGpB,MAAO,CACLM,cAAe7rB,EACf4rB,WAAAA,EACAH,cAAAA,EACAC,gBAAAA,EACAC,gBAAAA,EAEJ,E,YCzBO,SAASG,KACd,IlBiJSC,EATDlvB,EACRmvB,EkBzIAC,GlBwIQpvB,GAAO8L,EAAAA,EAAAA,MAAP9L,GACRmvB,GAAsCle,EAAAA,EAAAA,GAGnC,CACDC,SAAU,CAAC/B,EAAkBS,sBAC7BuB,YAAa,CAAEC,KAAM,GAAIC,MAAO,GAChCge,gBAAiB,KACjB/d,UAAWtR,EACXuR,SAAO2d,EAAA1d,IAAAC,MAAAC,MAAE,SAAA4d,IAAA,IAAA1d,EAAA,OAAAH,MAAAI,MAAA,SAAA0d,GAAA,cAAAA,EAAAxd,KAAAwd,EAAAvd,MAAA,cAAAud,EAAAvd,KAAA,GACWC,EAAAA,EAAAA,IAAa,CAC7BC,MAAOlS,IACP,OAFO,GAGa,KAHhB4R,EAAG2d,EAAA7c,MAGDC,KAAKC,KAAU,CAAA2c,EAAAvd,KAAA,eAAAud,EAAA1c,OAAA,SACdjB,EAAIe,KAAKA,MAAI,cAAA4c,EAAA1c,OAAA,SAGf,CACLzB,KAAM,GACNC,MAAO,IACR,wBAAAke,EAAAzc,OAAA,GAAAwc,EAAA,KACF,kBAAAJ,EAAA/pB,MAAA,KAAAN,UAAA,KAGI,CAAE8N,KAvBGwc,EAAJxc,KAuBOxP,QAvBkBgsB,EAAnBpc,akBxIEG,EAASkc,EAAvBzc,KAAQvB,KAEF5O,GAAMC,EAAAA,EAAAA,MAAND,EAEFgtB,GAAYhhB,EAAAA,EAAAA,UAAQ,WACxB,OAAOihB,EAAAA,GAAAA,IAAgBvc,EAAW,OAAQ,OAC5C,GAAG,CAACA,IAEEwc,GAAalhB,EAAAA,EAAAA,UAAQ,WACzB,OAAOihB,EAAAA,GAAAA,IAAgBvc,EAAW,MAAO,OAAOxS,KAAI,SAACC,GAAC,OAAAqB,IAAAA,IAAA,GACjDrB,GAAC,IACJU,MAAOmB,EAAE,iCAAD4C,OAAkCzE,EAAEU,SAAQ,GAExD,GAAG,CAAC6R,EAAW1Q,IAETmtB,GAAUnhB,EAAAA,EAAAA,UAAQ,WACtB,MAAO,CACL,CAAEkI,MAAO,OAAQrV,MAAO,YAAazB,KAAM4vB,GAC3C,CAAE9Y,MAAO,MAAOrV,MAAO,SAAUzB,KAAM8vB,GAE3C,GAAG,CAACA,EAAYF,IAEhB,MAAO,CAAEA,UAAAA,EAAWE,WAAAA,EAAYC,QAAAA,EAClC,CCzBO,IAAMC,GAA0B,WACrC,IAAA7O,GAIIC,EAAAA,GAAAA,MAHO6O,EAAqB9O,EAA9BvG,QACWsV,EAAuB/O,EAAlC7d,UACW6sB,EAAuBhP,EAAlCK,UAEF4O,EnByBmC,WACnC,IASYC,EATN5c,GAAcC,EAAAA,EAAAA,MACZtT,GAAO8L,EAAAA,EAAAA,MAAP9L,GAERkwB,GAII1c,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAACtE,EAAkBC,gBAChCsE,YAAUuc,EAAAze,IAAAC,MAAAC,MAAE,SAAAoL,EAAOqT,GAAgB,IAAAC,EAAAxe,EAAAgB,EAAA,OAAAnB,MAAAI,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,OAK9B,OAJGoe,EAAW,IAAIC,UACZ9Z,OAAO,QAASvW,GACzBmwB,EAASjnB,SAAQ,SAAC5C,GAChB8pB,EAAS7Z,OAAO,OAAQjQ,EAC1B,IAAG4W,EAAAnL,KAAA,EAAAmL,EAAAlL,KAAA,EAGiBgC,EAAAA,GAAUsc,gBAAgBF,GAAS,OAOpD,OAPKxe,EAAGsL,EAAAxK,KAGI,KAFPE,GAAO/E,EAAAA,EAAAA,KAAI+D,EAAK,eAEK,MAATgB,GAChBS,EAAYgB,kBAAkB,CAC5BnD,SAAU,CAAC/B,EAAkBE,qBAEhC6N,EAAArK,OAAA,SACMjB,aAAG,EAAHA,EAAKe,MAAI,QAEI,OAFJuK,EAAAnL,KAAA,GAAAmL,EAAA6H,GAAA7H,EAAA,SAEhBC,QAAQoT,KAAIrT,EAAA6H,IAAQ7H,EAAArK,OAAA,SACb,CACLD,KAAM,IACNuB,QAAS+I,EAAA6H,GAAQ,KAClB,yBAAA7H,EAAApK,OAAA,GAAAgK,EAAA,mBAEJ,SAAAe,GAAA,OAAAoS,EAAA9qB,MAAA,KAAAN,UAAA,KA7BD8N,EAAIud,EAAJvd,KACWxP,EAAO+sB,EAAlB3b,UA+BF,MAAO,CAAEic,eA9BIN,EAAXzb,YA8BoCtR,QAAAA,EAASwP,KAAAA,EACjD,CmB/DsC8d,GAA5BD,EAAcR,EAAdQ,eAAgBrtB,EAAO6sB,EAAP7sB,QAElButB,GAAqB3wB,EAAAA,EAAAA,aAAW,eAAAJ,EAAA6R,IAAAC,MAAAC,MACpC,SAAAoL,EAAOqT,GAAgB,IAAAve,EAAA/R,EAAA+S,EAAA,OAAAnB,MAAAI,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,YACjBme,EAASrrB,OAAS,GAAC,CAAAoY,EAAAlL,KAAA,gBAAAkL,EAAAlL,KAAA,EACEwe,EAAeL,GAAS,OAAjC,GACc,iBAAjBve,OADLA,EAAQsL,EAAAxK,WACA,EAAHd,EAAKuC,SAAoB,CAAA+I,EAAAlL,KAAA,eAAAkL,EAAArK,OAAA,iBAYnC,OATKhT,GAAQ8wB,EAAAA,GAAAA,IAAyB/e,aAAG,EAAHA,EAAKuC,SAExCvB,EAAOhB,aAAG,EAAHA,EAAKgB,MAEA,KAAdhB,aAAG,EAAHA,EAAKgB,OACU,OAAdhB,aAAG,EAAHA,EAAKgB,OAAgB/S,IAAUswB,EAASrrB,UAEzC8N,EAAO,EACPkd,KACD5S,EAAArK,OAAA,SACMD,GAAI,yBAAAsK,EAAApK,OAAA,GAAAgK,EAAA,KAEd,gBAAAe,GAAA,OAAAle,EAAAwF,MAAA,KAAAN,UAAA,EAnBmC,GAoBpC,CAAC2rB,EAAgBV,IAGnB,MAAO,CACLc,sBAAuBztB,EACvButB,mBAAAA,EACAb,sBAAAA,EACAC,wBAAAA,EACAC,wBAAAA,EAEJ,ECrBe,SAAS5jB,KACtB,IAAQ3J,GAAMC,EAAAA,EAAAA,MAAND,EACRquB,EAMIjB,KALFC,EAAqBgB,EAArBhB,sBACAC,EAAuBe,EAAvBf,wBACAC,EAAuBc,EAAvBd,wBACAW,EAAkBG,EAAlBH,mBACAE,EAAqBC,EAArBD,sBAGFE,EASIhhB,IARFK,EAAY2gB,EAAZ3gB,aACA+C,EAAS4d,EAAT5d,UACA3C,EAAUugB,EAAVvgB,WACAH,EAAiB0gB,EAAjB1gB,kBACAI,EAAasgB,EAAbtgB,cACAM,EAAWggB,EAAXhgB,YACAC,EAAkB+f,EAAlB/f,mBACA5N,EAAO2tB,EAAP3tB,QAEMwsB,EAAYV,KAAZU,QAERoB,EAMIjD,KALFkB,EAAa+B,EAAb/B,cACAD,EAAUgC,EAAVhC,WACAH,EAAamC,EAAbnC,cACAC,EAAekC,EAAflC,gBACAC,EAAeiC,EAAfjC,gBAGFkC,GACE7iB,EAAAA,EAAAA,KADMC,EAAY4iB,EAAZ5iB,aAAcM,EAAmBsiB,EAAnBtiB,oBAAqBL,EAAe2iB,EAAf3iB,gBAAiBE,EAAayiB,EAAbziB,cAG5D0iB,ECvCK,SAA8BtxB,GAMlC,IAoGUuxB,EAzGX9iB,EAAYzO,EAAZyO,aACAC,EAAe1O,EAAf0O,gBACA6E,EAASvT,EAATuT,UAIQ1Q,GAAMC,EAAAA,EAAAA,MAAND,EACa2uB,GAAoBviB,EAAAA,EAAAA,GACvCR,EACA8E,GAFMrE,YAKAwG,EAAqBX,IAArBW,iBACAb,EAAsBrB,IAAtBqB,kBACAsB,EAAmBR,IAAnBQ,eAEFsb,GAAcrxB,EAAAA,EAAAA,cAClB,SAAC0S,GACC,IAAM4e,EAAiBF,EAAgBlnB,QACrC,SAACtJ,GAAC,OACCuS,EAAUlE,MAAK,SAACC,GAAC,OAAKtO,IAAMsO,EAAEjP,IAAMiP,EAAE/K,OAASwU,EAAAA,GAAaqK,OAAO,GAAC,IAG3C,IAA1BsO,EAAevsB,OAInBuQ,EAAiB,CACfP,YAAauc,EACb5e,IAAAA,EACAsC,cAAc,IANdtM,GAAAA,GAAMC,MAAMlG,EAAE,uCAQlB,GACA,CAAC0Q,EAAWmC,EAAkB8b,EAAiB3uB,IAG3C8uB,GAAiBvxB,EAAAA,EAAAA,cAAY,WACjCqxB,EAAY,EACd,GAAG,CAACA,IAEEG,GAAoBxxB,EAAAA,EAAAA,cAAY,WACpCqxB,EAAY,EACd,GAAG,CAACA,IAEEI,GAAiBzxB,EAAAA,EAAAA,cACrB,SAACuR,GACC6f,EAAgBjoB,SAAQ,SAAClJ,GACvBwU,EAAkB,CAAEZ,OAAQtC,EAASuC,WAAY7T,GACnD,GACF,GACA,CAACmxB,EAAiB3c,IAGdid,GAAoB1xB,EAAAA,EAAAA,cAAY,WACpCyxB,GAAe,EACjB,GAAG,CAACA,IAEEE,GAAqB3xB,EAAAA,EAAAA,cAAY,WACrCyxB,GAAe,EACjB,GAAG,CAACA,IAEEG,GAAe5xB,EAAAA,EAAAA,cAAY,WAC/B,IAAM6xB,EAAcT,EAAgBlnB,QAClC,SAACtJ,GAAC,OACCuS,EACEjJ,QAAO,SAACgF,GAAC,OAAKA,EAAEwD,MAAQmP,EAAAA,GAAcG,OAAO,IAC7C/S,MAAK,SAACC,GAAC,OAAKA,EAAEjP,KAAOW,CAAC,GAAC,IAE9B,GAA2B,IAAvBixB,EAAY9sB,OAKhB,OAAOgR,EAAe8b,GAJpBnpB,GAAAA,GAAMC,MAAMlG,EAAE,yCAKlB,GAAG,CAAC2uB,EAAiBrb,EAAgB5C,EAAW1Q,IAE1C5C,EAAO,CACX,CACEI,GAAI,UACJqB,MAAOmB,EAAE,4BACTpB,MAAMnB,EAAAA,GAAAA,KAAC4xB,GAAAA,EAAW,IAClB5wB,QAASwwB,GAEX,CACEzxB,GAAI,WACJqB,MAAOmB,EAAE,6BACTpB,MAAMnB,EAAAA,GAAAA,KAAC6xB,GAAAA,EAAG,IACV7wB,QAASywB,GAEX,CACE1xB,GAAI,MACJqB,MAAOmB,EAAE,wBACTpB,MAAMnB,EAAAA,GAAAA,KAACglB,GAAAA,EAAI,IACXhkB,QAASqwB,GAEX,CACEtxB,GAAI,SACJqB,MAAOmB,EAAE,2BACTpB,MAAMnB,EAAAA,GAAAA,KAACilB,GAAAA,EAAO,IACdjkB,QAASswB,GAEX,CACEvxB,GAAI,SACJqB,MAAOmB,EAAE,iBACTpB,MAAMnB,EAAAA,GAAAA,KAACujB,GAAAA,EAAM,IACbviB,SAAOiwB,EAAA1f,IAAAC,MAAAC,MAAE,SAAAoL,IAAA,OAAArL,MAAAI,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,cAAAkL,EAAAlL,KAAA,EACY2f,IAAc,OACpB,IADHzU,EAAAxK,MAERrE,EAAgB,CAAC,GAClB,wBAAA6O,EAAApK,OAAA,GAAAgK,EAAA,KACF,kBAAAoU,EAAA/rB,MAAA,KAAAN,UAAA,KAIL,MAAO,CAAEjF,KAAAA,EACX,CD7EmBmyB,CAAsB,CACrC7e,UAAAA,EACA9E,aAAAA,EACAC,gBAAAA,IAHMzO,EAAIqxB,EAAJrxB,KAMR,OACES,EAAAA,GAAAA,MAAA,WAASF,UAAU,MAAKC,SAAA,EACtBH,EAAAA,GAAAA,KAAC+xB,EAAAA,EAAa,CACZhM,MAAM,UACNiM,eAAgB7hB,EAChBD,aAAcA,EACdxN,MAAOmO,EACPrL,SAAUsL,EACV4e,QAASA,EACTuC,WACE7xB,EAAAA,GAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BH,EAAAA,GAAAA,KAAA,OAAKE,UAAU,OAAMC,SAAC,aACtBH,EAAAA,GAAAA,KAAA,OAAKE,UAAU,qCAAoCC,SAAC,wFAKvDA,UAEDC,EAAAA,GAAAA,MAACulB,EAAAA,GAAY,CAAAxlB,SAAA,EACXH,EAAAA,GAAAA,KAAC4lB,EAAAA,GAAmB,CAACtB,SAAO,EAAAnkB,UAC1BC,EAAAA,GAAAA,MAACa,EAAAA,GAAM,CAACkG,KAAM,KAAKhH,SAAA,EACjBH,EAAAA,GAAAA,KAAC6J,EAAAA,EAAM,IACNtH,EAAE,kCAGPnC,EAAAA,GAAAA,MAACylB,EAAAA,GAAmB,CAAC3lB,UAAU,OAAMC,SAAA,EACnCH,EAAAA,GAAAA,KAAC8lB,EAAAA,GAAgB,CAAC9kB,QAAS8uB,EAAwB3vB,SAChDoC,EAAE,6BAELvC,EAAAA,GAAAA,KAACkyB,EAAAA,GAAqB,KACtBlyB,EAAAA,GAAAA,KAAC8lB,EAAAA,GAAgB,CAAC9kB,QAAS6tB,EAAgB1uB,SACxCoC,EAAE,mCAKVkM,IACCzO,EAAAA,GAAAA,KAACP,EAAAA,EAAc,CAACE,KAAMA,EAAMC,MAAO0O,KAErCtO,EAAAA,GAAAA,KAACooB,GAAY,CACXnV,UAAWA,EACX3C,WAAYA,EACZC,cAAeA,EACfpC,aAAcA,EACdC,gBAAiBA,EACjBlL,QAASA,IAEV0sB,IACC5vB,EAAAA,GAAAA,KAACgD,EAAAA,EAAgB,CACfC,UAAW4sB,EACX9uB,KAAM0vB,EACNvtB,QAASytB,IAGZhC,IACC3uB,EAAAA,GAAAA,KAAC2tB,EAAAA,EAAY,CACX1qB,UAAW2rB,EACX7tB,KAAM+tB,EACN5rB,QAAS6rB,EACThJ,MAAO,gBAKjB,C,qEE9HO,IAAKha,EAAM,SAANA,GAAM,OAANA,EAAM,eAANA,EAAM,aAANA,EAAM,qBAANA,EAAM,uBAANA,EAAAA,EAAM,WAAA5G,OAKH4G,EAAOomB,aAAWhtB,OAAG4G,EAAOomB,cAAW,UAL1CpmB,EAAM,eAANA,EAAM,kCAANA,EAAM,iBAANA,EAAM,0BAANA,EAAM,sBAANA,EAAM,oBAANA,EAAM,kBAANA,EAAM,eAANA,EAAM,kCAANA,EAAM,0BAANA,EAAM,0BAANA,EAAM,eAANA,EAAM,2BAANA,EAAM,iBAANA,EAAM,6BAANA,EAAM,iBAANA,EAAM,2BAANA,CAAM,MA0JRA,EAAOK,KAKHL,EAAOK,KACF,UAAFjH,OAAY4G,EAAOK,MAK1BL,EAAOC,SAKHD,EAAOC,SACF,UAAF7G,OAAY4G,EAAOC,UAK1BD,EAAOS,MAKHT,EAAOS,MACF,UAAFrH,OAAY4G,EAAOS,OAK1BT,EAAOW,KAEF,UAAFvH,OAAY4G,EAAOS,MAAK,SAG3BT,EAAOmB,SAKHnB,EAAOmB,SACF,UAAF/H,OAAY4G,EAAOmB,UAK1BnB,EAAOqB,OAEF,UAAFjI,OAAY4G,EAAOqB,QAGtBrB,EAAOa,OAKHb,EAAOa,OACF,UAAFzH,OAAY4G,EAAOa,QAK1B,GAAFzH,OAAK4G,EAAOe,MAAK,QAEV,UAAF3H,OAAY4G,EAAOe,OAGtBf,EAAOiB,eAEF,UAAF7H,OAAY4G,EAAOa,QAAMzH,OAAG4G,EAAOiB,gBAGtCjB,EAAOkC,MAKHlC,EAAOkC,MACF,UAAF9I,OAAY4G,EAAOkC,OAK1BlC,EAAOomB,YAGIpmB,EAAOomB,YAAuBpmB,EAAOG,QAGhDH,EAAOomB,YAEF,UAAFhtB,OAAY4G,EAAOomB,aAGlB,GAAFhtB,OAAK4G,EAAOG,QAAO,QACZ,UAAF/G,OAAY4G,EAAOG,SAGtB,GAAF/G,OAAK4G,EAAOomB,aAAWhtB,OAAG4G,EAAOqmB,eAAc,QACxC,UAAFjtB,OAAY4G,EAAOomB,aAAWhtB,OAAG4G,EAAOqmB,gBAG3C,GAAFjtB,OAAK4G,EAAOomB,aAAWhtB,OAAG4G,EAAOsmB,eAAc,QACxC,UAAFltB,OAAY4G,EAAOomB,aAAWhtB,OAAG4G,EAAOsmB,gBAK/C,GAAFltB,OAAK4G,EAAOwB,aAAY,WAEjB,UAAFpI,OAAY4G,EAAOumB,MAAK,2DAG3BvmB,EAAOumB,MAIHvmB,EAAOumB,MACF,UAAFntB,OAAY4G,EAAOumB,OAOlB,GAAFntB,OAAK4G,EAAOwmB,YAAW,QAChB,UAAFptB,OAAY4G,EAAOumB,MAAK,iBAG3B,GAAFntB,OAAK4G,EAAOymB,WAAU,QACf,UAAFrtB,OAAY4G,EAAOumB,MAAK,gBAOnCvmB,EAAOumB,MAEF,UAAFntB,OAAY4G,EAAOumB,OAGtBvmB,EAAOO,eAEF,UAAFnH,OAAY4G,EAAOO,gBAGlBP,EAAOO,eACH,GAAFnH,OAAK4G,EAAOO,eAAc,YAG5B,GAAFnH,OAAK4G,EAAOO,eAAc,YACnB,UAAFnH,OAAY4G,EAAOO,eAAc,YAGpC,GAAFnH,OAAK4G,EAAOO,eAAc,SACnB,UAAFnH,OAAY4G,EAAOO,eAAc,SAGpC,GAAFnH,OAAK4G,EAAOO,eAAc,SACnB,UAAFnH,OAAY4G,EAAOO,eAAc,SAGpC,GAAFnH,OAAK4G,EAAOO,eAAc,UACnB,UAAFnH,OAAY4G,EAAOO,eAAc,UAGpC,GAAFnH,OAAK4G,EAAOO,eAAc,WACnB,UAAFnH,OAAY4G,EAAOO,eAAc,U,2PC1ThDmmB,EA4BEC,EAAAA,EA5BFD,UACAE,EA2BED,EAAAA,EA3BFC,UACAC,EA0BEF,EAAAA,EA1BFE,MACAC,EAyBEH,EAAAA,EAzBFG,cACAC,EAwBEJ,EAAAA,EAxBFI,QACAC,EAuBEL,EAAAA,EAvBFK,kBACA/e,EAsBE0e,EAAAA,EAtBF1e,uBACA2B,EAqBE+c,EAAAA,EArBF/c,YACAqd,EAoBEN,EAAAA,EApBFM,gBACAzE,EAmBEmE,EAAAA,EAnBFnE,gBACA/N,EAkBEkS,EAAAA,EAlBFlS,uBACAyS,EAiBEP,EAAAA,EAjBFO,oBACAC,EAgBER,EAAAA,EAhBFQ,WACAC,EAeET,EAAAA,EAfFS,aACAC,EAcEV,EAAAA,EAdFU,UACAC,EAaEX,EAAAA,EAbFW,UACAC,EAYEZ,EAAAA,EAZFY,aACAC,EAWEb,EAAAA,EAXFa,SACAC,EAUEd,EAAAA,EAVFc,eACA/M,EASEiM,EAAAA,EATFjM,gBACAzR,EAQE0d,EAAAA,EARF1d,aACAqb,EAOEqC,EAAAA,EAPFrC,gBACAoD,EAMEf,EAAAA,EANFe,UACAC,EAKEhB,EAAAA,EALFgB,gBACAC,EAIEjB,EAAAA,EAJFiB,eACAC,EAGElB,EAAAA,EAHFkB,iBACAC,EAEEnB,EAAAA,EAFFmB,sBAIIC,EAAU,CAEdC,SAAU,CACRC,IAAKvB,EACLwB,OAAQ,QAEVC,SAAU,CACRF,IAAKrB,EACLsB,OAAQ,QAEVE,KAAM,CACJH,IAAKpB,EACLqB,OAAQ,QAEVpB,cAAe,CACbmB,IAAKnB,EACLoB,OAAQ,OAEVG,QAAS,CACPJ,IAAKlB,EACLmB,OAAQ,QAGVlB,kBAAmB,CACjBiB,IAAKjB,EACLkB,OAAQ,OAEVjgB,uBAAwB,CACtBggB,IAAKhgB,EACLigB,OAAQ,QAEVte,YAAa,CACXqe,IAAKre,EACLse,OAAQ,QAEVxN,gBAAiB,CACfuN,IAAKvN,EACLwN,OAAQ,QAEV1F,gBAAiB,CACfyF,IAAKzF,EACL0F,OAAQ,QAEVjf,aAAc,CACZgf,IAAKhf,EACLif,OAAQ,QAEVzT,uBAAwB,CACtBwT,IAAKxT,EACLyT,OAAQ,QAEVhB,oBAAqB,CACnBe,IAAKf,EACLgB,OAAQ,OAEV5D,gBAAiB,CACf2D,IAAK3D,EACL4D,OAAQ,QAEVR,UAAW,CACTO,IAAKP,EACLQ,OAAQ,QAEVN,eAAgB,CACdK,IAAKL,EACLM,OAAQ,QAEVtM,QAAS,CACPqM,IAtEAtB,EAAAA,EADF/K,QAwEEsM,OAAQ,QAGVf,WAAY,CACVc,IAAKd,EACLe,OAAQ,QAEVd,aAAc,CACZa,IAAKb,EACLc,OAAQ,QAEVb,UAAW,CACTY,IAAKZ,EACLa,OAAQ,QAEVZ,UAAW,CACTW,IAAKX,EACLY,OAAQ,OAEVX,aAAc,CACZU,IAAKV,EACLW,OAAQ,QAEVV,SAAU,CACRS,IAAKT,EACLU,OAAQ,QAEVT,eAAgB,CACdQ,IAAKR,EACLS,OAAQ,QAEVP,gBAAiB,CACfM,IAAKN,EACLO,OAAQ,OAEVjB,gBAAiB,CACfgB,IAAKhB,EACLiB,OAAQ,UAEVL,iBAAkB,CAChBI,IAAKJ,EACLK,OAAQ,QAEVJ,sBAAuB,CACrBG,IAAKH,EACLI,OAAQ,QAINlgB,GAAYsgB,EAAAA,EAAAA,GAAqCP,EAASQ,EAAAA,IAEnDC,EAAU,SAACjnB,GAAmB,OACzCgnB,EAAAA,GAAAA,IAAY5B,EAAAA,EAAI6B,QAAQjnB,GAAa,EAE1BknB,EAAY,SAAClnB,EAAqBmnB,GAAc,OAC3DC,EAAAA,EAAAA,IAAKhC,EAAAA,EAAI8B,UAAUlnB,GAAc,CAAEmnB,KAAAA,GAAO,EAE/BE,EAAY,SACvBrnB,EAAmB5N,GAAA,IACjBk1B,EAAOl1B,EAAPk1B,QAASC,EAAKn1B,EAALm1B,MAAK,OACbH,EAAAA,EAAAA,IAAKhC,EAAAA,EAAIiC,UAAUrnB,GAAc,CAAEsnB,QAAAA,EAASC,MAAAA,GAAQ,EAElD,SAASC,EAAkBxnB,GAChC,OAAOgnB,EAAAA,GAAAA,IAAY5B,EAAAA,EAAIoC,kBAAkBxnB,GAC3C,CAEO,SAASynB,EAAqBznB,GACnC,OAAOgnB,EAAAA,GAAO,OAAQ5B,EAAAA,EAAIoC,kBAAkBxnB,GAC9C,CAEO,IAAM0nB,EAAc,SACzBzN,EACA0N,GAAqC,OAClCX,EAAAA,GAAAA,KAAa5B,EAAAA,EAAII,QAAS,CAAEpgB,KAAMuiB,GAAQ,CAAC,EAAG1N,OAAAA,GAAS,EAE/CvV,EAAe,SAC1BuV,EACA0N,GAAoC,OACjCX,EAAAA,GAAAA,KAAa5B,EAAAA,EAAIK,kBAAmB,CAAErgB,KAAMuiB,GAAQ,CAAC,EAAG1N,OAAAA,GAAS,EAEtE,M,+EC9KO,SAASiI,EACd7vB,EACAu1B,EACAC,GAEA,IAAMC,EAA6B,GAUnC,OATAz1B,EAAKsJ,SAAQ,SAACvI,GACZ,IAAM20B,EAAOD,EAAapd,MAAK,SAAChJ,GAAC,OAAKA,EAAEjP,KAAOW,EAAEw0B,EAAQ,IACpDG,EAGHA,EAAKz1B,OAAS,EAFdw1B,EAAaE,KAAK,CAAEv1B,GAAIW,EAAEw0B,GAAU9zB,MAAOV,EAAEy0B,GAAav1B,MAAO,GAIrE,IAEOw1B,CACT,C","sources":["webpack:///./src/components/bulk-operate-bar.tsx","webpack:///./src/components/ui/tabs.tsx","webpack:///./src/components/file-upload-dialog/index.tsx","webpack:///./src/components/ui/scroll-area.tsx","webpack:///./src/hooks/use-callback-ref.ts","webpack:///./src/hooks/use-controllable-state.ts","webpack:///./src/components/file-uploader.tsx","webpack:///./src/components/ui/card.tsx","webpack:///./src/components/ui/hover-card.tsx","webpack:///./src/components/ui/progress.tsx","webpack:///./src/hooks/logic-hooks/navigate-hooks.ts","webpack:///./src/hooks/logic-hooks/use-row-selection.ts","webpack:///./src/hooks/use-document-request.ts","webpack:///./src/components/chunk-method-dialog/dynamic-page-range.tsx","webpack:///./src/components/chunk-method-dialog/hooks.ts","webpack:///./src/components/chunk-method-dialog/use-default-parser-values.ts","webpack:///./src/components/chunk-method-dialog/index.tsx","webpack:///./src/pages/dataset/dataset/set-meta-dialog.tsx","webpack:///./src/pages/dataset/dataset/use-change-document-parser.ts","webpack:///./src/pages/dataset/dataset/constant.ts","webpack:///./src/pages/dataset/dataset/utils.ts","webpack:///./src/pages/dataset/dataset/dataset-action-cell.tsx","webpack:///./src/pages/dataset/dataset/parsing-card.tsx","webpack:///./src/pages/dataset/dataset/use-run-document.ts","webpack:///./src/pages/dataset/dataset/parsing-status-cell.tsx","webpack:///./src/pages/dataset/dataset/use-rename-document.ts","webpack:///./src/pages/dataset/dataset/use-save-meta.ts","webpack:///./src/pages/dataset/dataset/dataset-table.tsx","webpack:///./src/pages/dataset/dataset/use-dataset-table-columns.tsx","webpack:///./src/pages/dataset/dataset/use-create-empty-document.ts","webpack:///./src/pages/dataset/dataset/use-select-filters.ts","webpack:///./src/pages/dataset/dataset/use-upload-document.ts","webpack:///./src/pages/dataset/dataset/index.tsx","webpack:///./src/pages/dataset/dataset/use-bulk-operate-dataset.tsx","webpack:///./src/routes.ts","webpack:///./src/services/knowledge-service.ts","webpack:///./src/utils/dataset-util.ts"],"sourcesContent":["import { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { cn } from '@/lib/utils';\nimport { BrushCleaning } from 'lucide-react';\nimport { ReactNode, useCallback } from 'react';\nimport { ConfirmDeleteDialog } from './confirm-delete-dialog';\nimport { Separator } from './ui/separator';\n\nexport type BulkOperateItemType = {\n  id: string;\n  label: ReactNode;\n  icon: ReactNode;\n  onClick(): void;\n};\n\ntype BulkOperateBarProps = { list: BulkOperateItemType[]; count: number };\n\nexport function BulkOperateBar({ list, count }: BulkOperateBarProps) {\n  const isDeleteItem = useCallback((id: string) => {\n    return id === 'delete';\n  }, []);\n\n  return (\n    <Card className=\"mb-4\">\n      <CardContent className=\"p-1 pl-5 flex items-center gap-6\">\n        <section className=\"text-text-sub-title-invert flex items-center gap-2\">\n          <span>Selected: {count} Files</span>\n          <BrushCleaning className=\"size-3\" />\n        </section>\n        <Separator orientation={'vertical'} className=\"h-3\"></Separator>\n        <ul className=\"flex gap-2\">\n          {list.map((x) => (\n            <li\n              key={x.id}\n              className={cn({ ['text-text-delete-red']: isDeleteItem(x.id) })}\n            >\n              <ConfirmDeleteDialog\n                hidden={!isDeleteItem(x.id)}\n                onOk={x.onClick}\n              >\n                <Button\n                  variant={'ghost'}\n                  onClick={isDeleteItem(x.id) ? () => {} : x.onClick}\n                >\n                  {x.icon} {x.label}\n                </Button>\n              </ConfirmDeleteDialog>\n            </li>\n          ))}\n        </ul>\n      </CardContent>\n    </Card>\n  );\n}\n","'use client';\n\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      'inline-flex h-10 items-center justify-center rounded-md bg-colors-background-inverse-standard p-1 text-colors-text-neutral-standard',\n      className,\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-colors-background-inverse-strong data-[state=active]:text-colors-text-inverse-strong data-[state=active]:shadow-sm',\n      className,\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      'mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n      className,\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsContent, TabsList, TabsTrigger };\n","import { ButtonLoading } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { IModalProps } from '@/interfaces/common';\nimport { Dispatch, SetStateAction, useCallback, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FileUploader } from '../file-uploader';\n\ntype UploaderTabsProps = {\n  setFiles: Dispatch<SetStateAction<File[]>>;\n};\n\nexport function UploaderTabs({ setFiles }: UploaderTabsProps) {\n  const { t } = useTranslation();\n\n  return (\n    <Tabs defaultValue=\"account\">\n      <TabsList className=\"grid w-full grid-cols-2 mb-4\">\n        <TabsTrigger value=\"account\">{t('fileManager.local')}</TabsTrigger>\n        <TabsTrigger value=\"password\">{t('fileManager.s3')}</TabsTrigger>\n      </TabsList>\n      <TabsContent value=\"account\">\n        <FileUploader\n          maxFileCount={8}\n          maxSize={8 * 1024 * 1024}\n          onValueChange={setFiles}\n          accept={{ '*': [] }}\n        />\n      </TabsContent>\n      <TabsContent value=\"password\">{t('common.comingSoon')}</TabsContent>\n    </Tabs>\n  );\n}\n\nexport function FileUploadDialog({\n  hideModal,\n  onOk,\n  loading,\n}: IModalProps<File[]>) {\n  const { t } = useTranslation();\n  const [files, setFiles] = useState<File[]>([]);\n\n  const handleOk = useCallback(() => {\n    onOk?.(files);\n  }, [files, onOk]);\n\n  return (\n    <Dialog open onOpenChange={hideModal}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>{t('fileManager.uploadFile')}</DialogTitle>\n        </DialogHeader>\n        <UploaderTabs setFiles={setFiles}></UploaderTabs>\n        <DialogFooter>\n          <ButtonLoading type=\"submit\" onClick={handleOk} loading={loading}>\n            {t('common.save')}\n          </ButtonLoading>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","'use client';\n\nimport * as ScrollAreaPrimitive from '@radix-ui/react-scroll-area';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = 'vertical', ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      'flex touch-none select-none transition-colors',\n      orientation === 'vertical' &&\n        'h-full w-2.5 border-l border-l-transparent p-[1px]',\n      orientation === 'horizontal' &&\n        'h-2.5 flex-col border-t border-t-transparent p-[1px]',\n      className,\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n));\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName;\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn('relative overflow-hidden', className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n));\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName;\n\nexport { ScrollArea, ScrollBar };\n","import * as React from 'react';\n\n/**\n * @see https://github.com/radix-ui/primitives/blob/main/packages/react/use-callback-ref/src/useCallbackRef.tsx\n */\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: never[]) => unknown>(\n  callback: T | undefined,\n): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(\n    () => ((...args) => callbackRef.current?.(...args)) as T,\n    [],\n  );\n}\n\nexport { useCallbackRef };\n","import * as React from 'react';\n\nimport { useCallbackRef } from '@/hooks/use-callback-ref';\n\n/**\n * @see https://github.com/radix-ui/primitives/blob/main/packages/react/use-controllable-state/src/useControllableState.tsx\n */\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({\n    defaultProp,\n    onChange,\n  });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> =\n    React.useCallback(\n      (nextValue) => {\n        if (isControlled) {\n          const setter = nextValue as SetStateFn<T>;\n          const value =\n            typeof nextValue === 'function' ? setter(prop) : nextValue;\n          if (value !== prop) handleChange(value as T);\n        } else {\n          setUncontrolledProp(nextValue);\n        }\n      },\n      [isControlled, prop, setUncontrolledProp, handleChange],\n    );\n\n  return [value, setValue] as const;\n}\n\nexport { useControllableState };\n","// https://github.com/sadmann7/file-uploader\n\n'use client';\n\nimport { FileText, Upload, X } from 'lucide-react';\nimport * as React from 'react';\nimport Dropzone, {\n  type DropzoneProps,\n  type FileRejection,\n} from 'react-dropzone';\nimport { toast } from 'sonner';\n\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { useControllableState } from '@/hooks/use-controllable-state';\nimport { cn, formatBytes } from '@/lib/utils';\n\nfunction isFileWithPreview(file: File): file is File & { preview: string } {\n  return 'preview' in file && typeof file.preview === 'string';\n}\n\ninterface FileCardProps {\n  file: File;\n  onRemove: () => void;\n  progress?: number;\n}\n\ninterface FilePreviewProps {\n  file: File & { preview: string };\n}\n\nfunction FilePreview({ file }: FilePreviewProps) {\n  if (file.type.startsWith('image/')) {\n    return (\n      <img\n        src={file.preview}\n        alt={file.name}\n        width={48}\n        height={48}\n        loading=\"lazy\"\n        className=\"aspect-square shrink-0 rounded-md object-cover\"\n      />\n    );\n  }\n\n  return (\n    <FileText className=\"size-10 text-muted-foreground\" aria-hidden=\"true\" />\n  );\n}\n\nfunction FileCard({ file, progress, onRemove }: FileCardProps) {\n  return (\n    <div className=\"relative flex items-center gap-2.5\">\n      <div className=\"flex flex-1 gap-2.5\">\n        {isFileWithPreview(file) ? <FilePreview file={file} /> : null}\n        <div className=\"flex w-full flex-col gap-2\">\n          <div className=\"flex flex-col gap-px\">\n            <p className=\"line-clamp-1 text-sm font-medium text-foreground/80\">\n              {file.name}\n            </p>\n            <p className=\"text-xs text-muted-foreground\">\n              {formatBytes(file.size)}\n            </p>\n          </div>\n          {progress ? <Progress value={progress} /> : null}\n        </div>\n      </div>\n      <div className=\"flex items-center gap-2\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          size=\"icon\"\n          className=\"size-7\"\n          onClick={onRemove}\n        >\n          <X className=\"size-4\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Remove file</span>\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface FileUploaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Value of the uploader.\n   * @type File[]\n   * @default undefined\n   * @example value={files}\n   */\n  value?: File[];\n\n  /**\n   * Function to be called when the value changes.\n   * @type (files: File[]) => void\n   * @default undefined\n   * @example onValueChange={(files) => setFiles(files)}\n   */\n  onValueChange?: (files: File[]) => void;\n\n  /**\n   * Function to be called when files are uploaded.\n   * @type (files: File[]) => Promise<void>\n   * @default undefined\n   * @example onUpload={(files) => uploadFiles(files)}\n   */\n  onUpload?: (files: File[]) => Promise<void>;\n\n  /**\n   * Progress of the uploaded files.\n   * @type Record<string, number> | undefined\n   * @default undefined\n   * @example progresses={{ \"file1.png\": 50 }}\n   */\n  progresses?: Record<string, number>;\n\n  /**\n   * Accepted file types for the uploader.\n   * @type { [key: string]: string[]}\n   * @default\n   * ```ts\n   * { \"image/*\": [] }\n   * ```\n   * @example accept={[\"image/png\", \"image/jpeg\"]}\n   */\n  accept?: DropzoneProps['accept'];\n\n  /**\n   * Maximum file size for the uploader.\n   * @type number | undefined\n   * @default 1024 * 1024 * 2 // 2MB\n   * @example maxSize={1024 * 1024 * 2} // 2MB\n   */\n  maxSize?: DropzoneProps['maxSize'];\n\n  /**\n   * Maximum number of files for the uploader.\n   * @type number | undefined\n   * @default 1\n   * @example maxFileCount={4}\n   */\n  maxFileCount?: DropzoneProps['maxFiles'];\n\n  /**\n   * Whether the uploader should accept multiple files.\n   * @type boolean\n   * @default false\n   * @example multiple\n   */\n  multiple?: boolean;\n\n  /**\n   * Whether the uploader is disabled.\n   * @type boolean\n   * @default false\n   * @example disabled\n   */\n  disabled?: boolean;\n}\n\nexport function FileUploader(props: FileUploaderProps) {\n  const {\n    value: valueProp,\n    onValueChange,\n    onUpload,\n    progresses,\n    accept = {\n      'image/*': [],\n    },\n    maxSize = 1024 * 1024 * 2,\n    maxFileCount = 1,\n    multiple = false,\n    disabled = false,\n    className,\n    ...dropzoneProps\n  } = props;\n\n  const [files, setFiles] = useControllableState({\n    prop: valueProp,\n    onChange: onValueChange,\n  });\n\n  const onDrop = React.useCallback(\n    (acceptedFiles: File[], rejectedFiles: FileRejection[]) => {\n      if (!multiple && maxFileCount === 1 && acceptedFiles.length > 1) {\n        toast.error('Cannot upload more than 1 file at a time');\n        return;\n      }\n\n      if ((files?.length ?? 0) + acceptedFiles.length > maxFileCount) {\n        toast.error(`Cannot upload more than ${maxFileCount} files`);\n        return;\n      }\n\n      const newFiles = acceptedFiles.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        }),\n      );\n\n      const updatedFiles = files ? [...files, ...newFiles] : newFiles;\n\n      setFiles(updatedFiles);\n\n      if (rejectedFiles.length > 0) {\n        rejectedFiles.forEach(({ file }) => {\n          toast.error(`File ${file.name} was rejected`);\n        });\n      }\n\n      if (\n        onUpload &&\n        updatedFiles.length > 0 &&\n        updatedFiles.length <= maxFileCount\n      ) {\n        const target =\n          updatedFiles.length > 0 ? `${updatedFiles.length} files` : `file`;\n\n        toast.promise(onUpload(updatedFiles), {\n          loading: `Uploading ${target}...`,\n          success: () => {\n            setFiles([]);\n            return `${target} uploaded`;\n          },\n          error: `Failed to upload ${target}`,\n        });\n      }\n    },\n\n    [files, maxFileCount, multiple, onUpload, setFiles],\n  );\n\n  function onRemove(index: number) {\n    if (!files) return;\n    const newFiles = files.filter((_, i) => i !== index);\n    setFiles(newFiles);\n    onValueChange?.(newFiles);\n  }\n\n  // Revoke preview url when component unmounts\n  React.useEffect(() => {\n    return () => {\n      if (!files) return;\n      files.forEach((file) => {\n        if (isFileWithPreview(file)) {\n          URL.revokeObjectURL(file.preview);\n        }\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const isDisabled = disabled || (files?.length ?? 0) >= maxFileCount;\n\n  return (\n    <div className=\"relative flex flex-col gap-6 overflow-hidden\">\n      <Dropzone\n        onDrop={onDrop}\n        accept={accept}\n        maxSize={maxSize}\n        maxFiles={maxFileCount}\n        multiple={maxFileCount > 1 || multiple}\n        disabled={isDisabled}\n      >\n        {({ getRootProps, getInputProps, isDragActive }) => (\n          <div\n            {...getRootProps()}\n            className={cn(\n              'group relative grid h-52 w-full cursor-pointer place-items-center rounded-lg border-2 border-dashed border-muted-foreground/25 px-5 py-2.5 text-center transition hover:bg-muted/25',\n              'ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n              isDragActive && 'border-muted-foreground/50',\n              isDisabled && 'pointer-events-none opacity-60',\n              className,\n            )}\n            {...dropzoneProps}\n          >\n            <input {...getInputProps()} />\n            {isDragActive ? (\n              <div className=\"flex flex-col items-center justify-center gap-4 sm:px-5\">\n                <div className=\"rounded-full border border-dashed p-3\">\n                  <Upload\n                    className=\"size-7 text-muted-foreground\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                <p className=\"font-medium text-muted-foreground\">\n                  Drop the files here\n                </p>\n              </div>\n            ) : (\n              <div className=\"flex flex-col items-center justify-center gap-4 sm:px-5\">\n                <div className=\"rounded-full border border-dashed p-3\">\n                  <Upload\n                    className=\"size-7 text-muted-foreground\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                <div className=\"flex flex-col gap-px\">\n                  <p className=\"font-medium text-muted-foreground\">\n                    Drag {`'n'`} drop files here, or click to select files\n                  </p>\n                  <p className=\"text-sm text-muted-foreground/70\">\n                    You can upload\n                    {maxFileCount > 1\n                      ? ` ${maxFileCount === Infinity ? 'multiple' : maxFileCount}\n                      files (up to ${formatBytes(maxSize)} each)`\n                      : ` a file with ${formatBytes(maxSize)}`}\n                  </p>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </Dropzone>\n      {files?.length ? (\n        <ScrollArea className=\"h-fit w-full px-3\">\n          <div className=\"flex max-h-48 flex-col gap-4\">\n            {files?.map((file, index) => (\n              <FileCard\n                key={index}\n                file={file}\n                onRemove={() => onRemove(index)}\n                progress={progresses?.[file.name]}\n              />\n            ))}\n          </div>\n        </ScrollArea>\n      ) : null}\n    </div>\n  );\n}\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'rounded-lg  bg-background-card  text-card-foreground shadow-sm',\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n};\n","'use client';\n\nimport * as HoverCardPrimitive from '@radix-ui/react-hover-card';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst HoverCard = HoverCardPrimitive.Root;\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger;\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      'z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]',\n      className,\n    )}\n    {...props}\n  />\n));\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName;\n\nexport { HoverCard, HoverCardContent, HoverCardTrigger };\n","'use client';\n\nimport * as ProgressPrimitive from '@radix-ui/react-progress';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      'relative h-4 w-full overflow-hidden rounded-full bg-secondary',\n      className,\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n","import { Routes } from '@/routes';\nimport { useCallback } from 'react';\nimport { useNavigate, useParams, useSearchParams } from 'umi';\n\nexport enum QueryStringMap {\n  KnowledgeId = 'knowledgeId',\n}\n\nexport const useNavigatePage = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const { id } = useParams();\n\n  const navigateToDatasetList = useCallback(() => {\n    navigate(Routes.Datasets);\n  }, [navigate]);\n\n  const navigateToDataset = useCallback(\n    (id: string) => () => {\n      navigate(`${Routes.Dataset}/${id}`);\n    },\n    [navigate],\n  );\n\n  const navigateToHome = useCallback(() => {\n    navigate(Routes.Home);\n  }, [navigate]);\n\n  const navigateToProfile = useCallback(() => {\n    navigate(Routes.ProfileSetting);\n  }, [navigate]);\n\n  const navigateToChatList = useCallback(() => {\n    navigate(Routes.Chats);\n  }, [navigate]);\n\n  const navigateToChat = useCallback(() => {\n    navigate(Routes.Chat);\n  }, [navigate]);\n\n  const navigateToAgentList = useCallback(() => {\n    navigate(Routes.Agents);\n  }, [navigate]);\n\n  const navigateToAgent = useCallback(\n    (id: string) => () => {\n      navigate(`${Routes.Agent}/${id}`);\n    },\n    [navigate],\n  );\n\n  const navigateToAgentTemplates = useCallback(() => {\n    navigate(Routes.AgentTemplates);\n  }, [navigate]);\n\n  const navigateToSearchList = useCallback(() => {\n    navigate(Routes.Searches);\n  }, [navigate]);\n\n  const navigateToSearch = useCallback(() => {\n    navigate(Routes.Search);\n  }, [navigate]);\n\n  const navigateToChunkParsedResult = useCallback(\n    (id: string, knowledgeId?: string) => () => {\n      navigate(\n        // `${Routes.ParsedResult}/${id}?${QueryStringMap.KnowledgeId}=${knowledgeId}`,\n        `${Routes.ParsedResult}/chunks?id=${knowledgeId}&doc_id=${id}`,\n      );\n    },\n    [navigate],\n  );\n\n  const getQueryString = useCallback(\n    (queryStringKey?: QueryStringMap) => {\n      const allQueryString = {\n        [QueryStringMap.KnowledgeId]: searchParams.get(\n          QueryStringMap.KnowledgeId,\n        ),\n      };\n      if (queryStringKey) {\n        return allQueryString[queryStringKey];\n      }\n      return allQueryString;\n    },\n    [searchParams],\n  );\n\n  const navigateToChunk = useCallback(\n    (route: Routes) => {\n      navigate(\n        `${route}/${id}?${QueryStringMap.KnowledgeId}=${getQueryString(QueryStringMap.KnowledgeId)}`,\n      );\n    },\n    [getQueryString, id, navigate],\n  );\n\n  const navigateToFiles = useCallback(\n    (folderId?: string) => {\n      navigate(`${Routes.Files}?folderId=${folderId}`);\n    },\n    [navigate],\n  );\n\n  return {\n    navigateToDatasetList,\n    navigateToDataset,\n    navigateToHome,\n    navigateToProfile,\n    navigateToChatList,\n    navigateToChat,\n    navigateToChunkParsedResult,\n    getQueryString,\n    navigateToChunk,\n    navigateToAgentList,\n    navigateToAgent,\n    navigateToAgentTemplates,\n    navigateToSearchList,\n    navigateToSearch,\n    navigateToFiles,\n  };\n};\n","import { RowSelectionState } from '@tanstack/react-table';\nimport { isEmpty } from 'lodash';\nimport { useCallback, useMemo, useState } from 'react';\n\nexport function useRowSelection() {\n  const [rowSelection, setRowSelection] = useState<RowSelectionState>({});\n\n  const clearRowSelection = useCallback(() => {\n    setRowSelection({});\n  }, []);\n\n  const selectedCount = useMemo(() => {\n    return Object.keys(rowSelection).length;\n  }, [rowSelection]);\n\n  return {\n    rowSelection,\n    setRowSelection,\n    rowSelectionIsEmpty: isEmpty(rowSelection),\n    clearRowSelection,\n    selectedCount,\n  };\n}\n\nexport type UseRowSelectionType = ReturnType<typeof useRowSelection>;\n\nexport function useSelectedIds<T extends Array<{ id: string }>>(\n  rowSelection: RowSelectionState,\n  list: T,\n) {\n  const selectedIds = useMemo(() => {\n    const indexes = Object.keys(rowSelection);\n    return list\n      .filter((x, idx) => indexes.some((y) => Number(y) === idx))\n      .map((x) => x.id);\n  }, [list, rowSelection]);\n\n  return { selectedIds };\n}\n","import { useHandleFilterSubmit } from '@/components/list-filter-bar/use-handle-filter-submit';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport {\n  IChangeParserConfigRequestBody,\n  IDocumentMetaRequestBody,\n} from '@/interfaces/request/document';\nimport i18n from '@/locales/config';\nimport kbService, { listDocument } from '@/services/knowledge-service';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useDebounce } from 'ahooks';\nimport { message } from 'antd';\nimport { get } from 'lodash';\nimport { useCallback } from 'react';\nimport { useParams } from 'umi';\nimport {\n  useGetPaginationWithRouter,\n  useHandleSearchChange,\n} from './logic-hooks';\nimport {\n  useGetKnowledgeSearchParams,\n  useSetPaginationParams,\n} from './route-hook';\n\nexport const enum DocumentApiAction {\n  UploadDocument = 'uploadDocument',\n  FetchDocumentList = 'fetchDocumentList',\n  UpdateDocumentStatus = 'updateDocumentStatus',\n  RunDocumentByIds = 'runDocumentByIds',\n  RemoveDocument = 'removeDocument',\n  SaveDocumentName = 'saveDocumentName',\n  SetDocumentParser = 'setDocumentParser',\n  SetDocumentMeta = 'setDocumentMeta',\n  FetchAllDocumentList = 'fetchAllDocumentList',\n  CreateDocument = 'createDocument',\n}\n\nexport const useUploadNextDocument = () => {\n  const queryClient = useQueryClient();\n  const { id } = useParams();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [DocumentApiAction.UploadDocument],\n    mutationFn: async (fileList: File[]) => {\n      const formData = new FormData();\n      formData.append('kb_id', id!);\n      fileList.forEach((file: any) => {\n        formData.append('file', file);\n      });\n\n      try {\n        const ret = await kbService.document_upload(formData);\n        const code = get(ret, 'data.code');\n\n        if (code === 0 || code === 500) {\n          queryClient.invalidateQueries({\n            queryKey: [DocumentApiAction.FetchDocumentList],\n          });\n        }\n        return ret?.data;\n      } catch (error) {\n        console.warn(error);\n        return {\n          code: 500,\n          message: error + '',\n        };\n      }\n    },\n  });\n\n  return { uploadDocument: mutateAsync, loading, data };\n};\n\nexport const useFetchDocumentList = () => {\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n  const { searchString, handleInputChange } = useHandleSearchChange();\n  const { pagination, setPagination } = useGetPaginationWithRouter();\n  const { id } = useParams();\n  const debouncedSearchString = useDebounce(searchString, { wait: 500 });\n  const { filterValue, handleFilterSubmit } = useHandleFilterSubmit();\n\n  const { data, isFetching: loading } = useQuery<{\n    docs: IDocumentInfo[];\n    total: number;\n  }>({\n    queryKey: [\n      DocumentApiAction.FetchDocumentList,\n      debouncedSearchString,\n      pagination,\n      filterValue,\n    ],\n    initialData: { docs: [], total: 0 },\n    // refetchInterval: 15000,\n    enabled: !!knowledgeId || !!id,\n    queryFn: async () => {\n      const ret = await listDocument(\n        {\n          kb_id: knowledgeId || id,\n          keywords: debouncedSearchString,\n          page_size: pagination.pageSize,\n          page: pagination.current,\n        },\n        {\n          types: filterValue.type,\n          run_status: filterValue.run,\n        },\n      );\n      if (ret.data.code === 0) {\n        return ret.data.data;\n      }\n\n      return {\n        docs: [],\n        total: 0,\n      };\n    },\n  });\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => {\n      setPagination({ page: 1 });\n      handleInputChange(e);\n    },\n    [handleInputChange, setPagination],\n  );\n\n  return {\n    loading,\n    searchString,\n    documents: data.docs,\n    pagination: { ...pagination, total: data?.total },\n    handleInputChange: onInputChange,\n    setPagination,\n    filterValue,\n    handleFilterSubmit,\n  };\n};\n\nexport function useFetchAllDocumentList() {\n  const { id } = useParams();\n  const { data, isFetching: loading } = useQuery<{\n    docs: IDocumentInfo[];\n    total: number;\n  }>({\n    queryKey: [DocumentApiAction.FetchAllDocumentList],\n    initialData: { docs: [], total: 0 },\n    refetchInterval: 15000,\n    enabled: !!id,\n    queryFn: async () => {\n      const ret = await listDocument({\n        kb_id: id,\n      });\n      if (ret.data.code === 0) {\n        return ret.data.data;\n      }\n\n      return {\n        docs: [],\n        total: 0,\n      };\n    },\n  });\n\n  return { data, loading };\n}\n\nexport const useSetDocumentStatus = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [DocumentApiAction.UpdateDocumentStatus],\n    mutationFn: async ({\n      status,\n      documentId,\n    }: {\n      status: boolean;\n      documentId: string;\n    }) => {\n      const { data } = await kbService.document_change_status({\n        doc_id: documentId,\n        status: Number(status),\n      });\n      if (data.code === 0) {\n        message.success(i18n.t('message.modified'));\n        queryClient.invalidateQueries({\n          queryKey: [DocumentApiAction.FetchDocumentList],\n        });\n      }\n      return data;\n    },\n  });\n\n  return { setDocumentStatus: mutateAsync, data, loading };\n};\n\nexport const useRunDocument = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [DocumentApiAction.RunDocumentByIds],\n    mutationFn: async ({\n      documentIds,\n      run,\n      shouldDelete,\n    }: {\n      documentIds: string[];\n      run: number;\n      shouldDelete: boolean;\n    }) => {\n      queryClient.invalidateQueries({\n        queryKey: [DocumentApiAction.FetchDocumentList],\n      });\n\n      const ret = await kbService.document_run({\n        doc_ids: documentIds,\n        run,\n        delete: shouldDelete,\n      });\n      const code = get(ret, 'data.code');\n      if (code === 0) {\n        queryClient.invalidateQueries({\n          queryKey: [DocumentApiAction.FetchDocumentList],\n        });\n        message.success(i18n.t('message.operated'));\n      }\n\n      return code;\n    },\n  });\n\n  return { runDocumentByIds: mutateAsync, loading, data };\n};\n\nexport const useRemoveDocument = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [DocumentApiAction.RemoveDocument],\n    mutationFn: async (documentIds: string | string[]) => {\n      const { data } = await kbService.document_rm({ doc_id: documentIds });\n      if (data.code === 0) {\n        message.success(i18n.t('message.deleted'));\n        queryClient.invalidateQueries({\n          queryKey: [DocumentApiAction.FetchDocumentList],\n        });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, removeDocument: mutateAsync };\n};\n\nexport const useSaveDocumentName = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [DocumentApiAction.SaveDocumentName],\n    mutationFn: async ({\n      name,\n      documentId,\n    }: {\n      name: string;\n      documentId: string;\n    }) => {\n      const { data } = await kbService.document_rename({\n        doc_id: documentId,\n        name: name,\n      });\n      if (data.code === 0) {\n        message.success(i18n.t('message.renamed'));\n        queryClient.invalidateQueries({\n          queryKey: [DocumentApiAction.FetchDocumentList],\n        });\n      }\n      return data.code;\n    },\n  });\n\n  return { loading, saveName: mutateAsync, data };\n};\n\nexport const useSetDocumentParser = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [DocumentApiAction.SetDocumentParser],\n    mutationFn: async ({\n      parserId,\n      documentId,\n      parserConfig,\n    }: {\n      parserId: string;\n      documentId: string;\n      parserConfig: IChangeParserConfigRequestBody;\n    }) => {\n      const { data } = await kbService.document_change_parser({\n        parser_id: parserId,\n        doc_id: documentId,\n        parser_config: parserConfig,\n      });\n      if (data.code === 0) {\n        queryClient.invalidateQueries({\n          queryKey: [DocumentApiAction.FetchDocumentList],\n        });\n\n        message.success(i18n.t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { setDocumentParser: mutateAsync, data, loading };\n};\n\nexport const useSetDocumentMeta = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [DocumentApiAction.SetDocumentMeta],\n    mutationFn: async (params: IDocumentMetaRequestBody) => {\n      try {\n        const { data } = await kbService.setMeta({\n          meta: params.meta,\n          doc_id: params.documentId,\n        });\n\n        if (data?.code === 0) {\n          queryClient.invalidateQueries({\n            queryKey: [DocumentApiAction.FetchDocumentList],\n          });\n\n          message.success(i18n.t('message.modified'));\n        }\n        return data?.code;\n      } catch (error) {\n        message.error('error');\n      }\n    },\n  });\n\n  return { setDocumentMeta: mutateAsync, data, loading };\n};\n\nexport const useCreateDocument = () => {\n  const { id } = useParams();\n  const { setPaginationParams, page } = useSetPaginationParams();\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [DocumentApiAction.CreateDocument],\n    mutationFn: async (name: string) => {\n      const { data } = await kbService.document_create({\n        name,\n        kb_id: id,\n      });\n      if (data.code === 0) {\n        if (page === 1) {\n          queryClient.invalidateQueries({\n            queryKey: [DocumentApiAction.FetchDocumentList],\n          });\n        } else {\n          setPaginationParams(); // fetch document list\n        }\n\n        message.success(i18n.t('message.created'));\n      }\n      return data.code;\n    },\n  });\n\n  return { createDocument: mutateAsync, loading, data };\n};\n","'use client';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Plus, X } from 'lucide-react';\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { Separator } from '../ui/separator';\n\nexport function DynamicPageRange() {\n  const { t } = useTranslation();\n  const form = useFormContext();\n\n  const { fields, remove, append } = useFieldArray({\n    name: 'parser_config.pages',\n    control: form.control,\n  });\n\n  return (\n    <div>\n      <FormLabel tooltip={t('knowledgeDetails.pageRangesTip')}>\n        {t('knowledgeDetails.pageRanges')}\n      </FormLabel>\n      {fields.map((field, index) => {\n        const typeField = `parser_config.pages.${index}.from`;\n        return (\n          <div key={field.id} className=\"flex items-center gap-2 pt-2\">\n            <FormField\n              control={form.control}\n              name={typeField}\n              render={({ field }) => (\n                <FormItem className=\"w-2/5\">\n                  <FormDescription />\n                  <FormControl>\n                    <Input\n                      type=\"number\"\n                      placeholder={t('common.pleaseInput')}\n                      className=\"!m-0\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <Separator className=\"w-3 \"></Separator>\n            <FormField\n              control={form.control}\n              name={`parser_config.pages.${index}.to`}\n              render={({ field }) => (\n                <FormItem className=\"flex-1\">\n                  <FormDescription />\n                  <FormControl>\n                    <Input\n                      type=\"number\"\n                      placeholder={t('common.pleaseInput')}\n                      className=\"!m-0\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <Button variant={'ghost'} onClick={() => remove(index)}>\n              <X />\n            </Button>\n          </div>\n        );\n      })}\n      <Button\n        onClick={() => append({ from: 1, to: 100 })}\n        className=\"mt-4 border-dashed w-full\"\n        variant={'outline'}\n        type=\"button\"\n      >\n        <Plus />\n        {t('knowledgeDetails.addPage')}\n      </Button>\n    </div>\n  );\n}\n","import { useSelectParserList } from '@/hooks/user-setting-hooks';\nimport { useCallback, useMemo } from 'react';\n\nconst ParserListMap = new Map([\n  [\n    ['pdf'],\n    [\n      'naive',\n      'resume',\n      'manual',\n      'paper',\n      'book',\n      'laws',\n      'presentation',\n      'one',\n      'qa',\n      'knowledge_graph',\n    ],\n  ],\n  [\n    ['doc', 'docx'],\n    [\n      'naive',\n      'resume',\n      'book',\n      'laws',\n      'one',\n      'qa',\n      'manual',\n      'knowledge_graph',\n    ],\n  ],\n  [\n    ['xlsx', 'xls'],\n    ['naive', 'qa', 'table', 'one', 'knowledge_graph'],\n  ],\n  [['ppt', 'pptx'], ['presentation']],\n  [\n    ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'tif', 'tiff', 'webp', 'svg', 'ico'],\n    ['picture'],\n  ],\n  [\n    ['txt'],\n    [\n      'naive',\n      'resume',\n      'book',\n      'laws',\n      'one',\n      'qa',\n      'table',\n      'knowledge_graph',\n    ],\n  ],\n  [\n    ['csv'],\n    [\n      'naive',\n      'resume',\n      'book',\n      'laws',\n      'one',\n      'qa',\n      'table',\n      'knowledge_graph',\n    ],\n  ],\n  [['md'], ['naive', 'qa', 'knowledge_graph']],\n  [['json'], ['naive', 'knowledge_graph']],\n  [['eml'], ['email']],\n]);\n\nconst getParserList = (\n  values: string[],\n  parserList: Array<{\n    value: string;\n    label: string;\n  }>,\n) => {\n  return parserList.filter((x) => values?.some((y) => y === x.value));\n};\n\nexport const useFetchParserListOnMount = (documentExtension: string) => {\n  const parserList = useSelectParserList();\n\n  const nextParserList = useMemo(() => {\n    const key = [...ParserListMap.keys()].find((x) =>\n      x.some((y) => y === documentExtension),\n    );\n    if (key) {\n      const values = ParserListMap.get(key);\n      return getParserList(values ?? [], parserList);\n    }\n\n    return getParserList(\n      ['naive', 'resume', 'book', 'laws', 'one', 'qa', 'table'],\n      parserList,\n    );\n  }, [parserList, documentExtension]);\n\n  return { parserList: nextParserList };\n};\n\nconst hideAutoKeywords = ['qa', 'table', 'resume', 'knowledge_graph', 'tag'];\n\nexport const useShowAutoKeywords = () => {\n  const showAutoKeywords = useCallback((selectedTag: string) => {\n    return hideAutoKeywords.every((x) => selectedTag !== x);\n  }, []);\n\n  return showAutoKeywords;\n};\n","import { IParserConfig } from '@/interfaces/database/document';\nimport { useCallback, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DocumentType } from '../layout-recognize-form-field';\n\nexport function useDefaultParserValues() {\n  const { t } = useTranslation();\n\n  const defaultParserValues = useMemo(() => {\n    const defaultParserValues = {\n      task_page_size: 12,\n      layout_recognize: DocumentType.DeepDOC,\n      chunk_token_num: 512,\n      delimiter: '\\n',\n      auto_keywords: 0,\n      auto_questions: 0,\n      html4excel: false,\n      raptor: {\n        use_raptor: false,\n        prompt: t('knowledgeConfiguration.promptText'),\n        max_token: 256,\n        threshold: 0.1,\n        max_cluster: 64,\n        random_seed: 0,\n      },\n      graphrag: {\n        use_graphrag: false,\n      },\n      entity_types: [],\n      pages: [],\n    };\n\n    return defaultParserValues;\n  }, [t]);\n\n  return defaultParserValues;\n}\n\nexport function useFillDefaultValueOnMount() {\n  const defaultParserValues = useDefaultParserValues();\n\n  const fillDefaultValue = useCallback(\n    (parserConfig: IParserConfig) => {\n      return Object.entries(defaultParserValues).reduce<Record<string, any>>(\n        (pre, [key, value]) => {\n          if (key in parserConfig) {\n            pre[key] = parserConfig[key as keyof IParserConfig];\n          } else {\n            pre[key] = value;\n          }\n          return pre;\n        },\n        {},\n      );\n    },\n    [defaultParserValues],\n  );\n\n  return fillDefaultValue;\n}\n","import {\n  Dialog,\n  DialogContent,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { DocumentParserType } from '@/constants/knowledge';\nimport { useFetchKnowledgeBaseConfiguration } from '@/hooks/use-knowledge-request';\nimport { IModalProps } from '@/interfaces/common';\nimport { IParserConfig } from '@/interfaces/database/document';\nimport { IChangeParserConfigRequestBody } from '@/interfaces/request/document';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport get from 'lodash/get';\nimport omit from 'lodash/omit';\nimport {} from 'module';\nimport { useEffect, useMemo } from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { z } from 'zod';\nimport {\n  AutoKeywordsFormField,\n  AutoQuestionsFormField,\n} from '../auto-keywords-form-field';\nimport { DelimiterFormField } from '../delimiter-form-field';\nimport { EntityTypesFormField } from '../entity-types-form-field';\nimport { ExcelToHtmlFormField } from '../excel-to-html-form-field';\nimport { FormContainer } from '../form-container';\nimport { LayoutRecognizeFormField } from '../layout-recognize-form-field';\nimport { MaxTokenNumberFormField } from '../max-token-number-from-field';\nimport {\n  UseGraphRagFormField,\n  showGraphRagItems,\n} from '../parse-configuration/graph-rag-form-fields';\nimport RaptorFormFields, {\n  showRaptorParseConfiguration,\n} from '../parse-configuration/raptor-form-fields';\nimport { ButtonLoading } from '../ui/button';\nimport { Input } from '../ui/input';\nimport { RAGFlowSelect } from '../ui/select';\nimport { DynamicPageRange } from './dynamic-page-range';\nimport { useFetchParserListOnMount, useShowAutoKeywords } from './hooks';\nimport {\n  useDefaultParserValues,\n  useFillDefaultValueOnMount,\n} from './use-default-parser-values';\n\nconst FormId = 'ChunkMethodDialogForm';\n\ninterface IProps\n  extends IModalProps<{\n    parserId: string;\n    parserConfig: IChangeParserConfigRequestBody;\n  }> {\n  loading: boolean;\n  parserId: string;\n  parserConfig: IParserConfig;\n  documentExtension: string;\n  documentId: string;\n}\n\nconst hidePagesChunkMethods = [\n  DocumentParserType.Qa,\n  DocumentParserType.Table,\n  DocumentParserType.Picture,\n  DocumentParserType.Resume,\n  DocumentParserType.One,\n  DocumentParserType.KnowledgeGraph,\n];\n\nexport function ChunkMethodDialog({\n  hideModal,\n  onOk,\n  parserId,\n  documentId,\n  documentExtension,\n  visible,\n  parserConfig,\n  loading,\n}: IProps) {\n  const { t } = useTranslation();\n\n  const { parserList } = useFetchParserListOnMount(documentExtension);\n\n  const { data: knowledgeDetails } = useFetchKnowledgeBaseConfiguration();\n\n  const useGraphRag = useMemo(() => {\n    return knowledgeDetails.parser_config?.graphrag?.use_graphrag;\n  }, [knowledgeDetails.parser_config?.graphrag?.use_graphrag]);\n\n  const defaultParserValues = useDefaultParserValues();\n\n  const fillDefaultParserValue = useFillDefaultValueOnMount();\n\n  const FormSchema = z.object({\n    parser_id: z\n      .string()\n      .min(1, {\n        message: t('common.pleaseSelect'),\n      })\n      .trim(),\n    parser_config: z.object({\n      task_page_size: z.coerce.number().optional(),\n      layout_recognize: z.string().optional(),\n      chunk_token_num: z.coerce.number().optional(),\n      delimiter: z.string().optional(),\n      auto_keywords: z.coerce.number().optional(),\n      auto_questions: z.coerce.number().optional(),\n      html4excel: z.boolean().optional(),\n      raptor: z\n        .object({\n          use_raptor: z.boolean().optional(),\n          prompt: z.string().optional().optional(),\n          max_token: z.coerce.number().optional(),\n          threshold: z.coerce.number().optional(),\n          max_cluster: z.coerce.number().optional(),\n          random_seed: z.coerce.number().optional(),\n        })\n        .optional(),\n      graphrag: z.object({\n        use_graphrag: z.boolean().optional(),\n      }),\n      entity_types: z.array(z.string()).optional(),\n      pages: z\n        .array(z.object({ from: z.coerce.number(), to: z.coerce.number() }))\n        .optional(),\n    }),\n  });\n\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      parser_id: parserId,\n\n      parser_config: defaultParserValues,\n    },\n  });\n\n  const layoutRecognize = useWatch({\n    name: 'parser_config.layout_recognize',\n    control: form.control,\n  });\n\n  const selectedTag = useWatch({\n    name: 'parser_id',\n    control: form.control,\n  });\n\n  const isPdf = documentExtension === 'pdf';\n\n  const showPages = useMemo(() => {\n    return isPdf && hidePagesChunkMethods.every((x) => x !== selectedTag);\n  }, [selectedTag, isPdf]);\n\n  const showOne = useMemo(() => {\n    return (\n      isPdf &&\n      hidePagesChunkMethods\n        .filter((x) => x !== DocumentParserType.One)\n        .every((x) => x !== selectedTag)\n    );\n  }, [selectedTag, isPdf]);\n\n  const showMaxTokenNumber =\n    selectedTag === DocumentParserType.Naive ||\n    selectedTag === DocumentParserType.KnowledgeGraph;\n\n  const showEntityTypes = selectedTag === DocumentParserType.KnowledgeGraph;\n\n  const showExcelToHtml =\n    selectedTag === DocumentParserType.Naive && documentExtension === 'xlsx';\n\n  const showAutoKeywords = useShowAutoKeywords();\n\n  async function onSubmit(data: z.infer<typeof FormSchema>) {\n    console.log('🚀 ~ onSubmit ~ data:', data);\n    const nextData = {\n      ...data,\n      parser_config: {\n        ...data.parser_config,\n        pages: data.parser_config?.pages?.map((x: any) => [x.from, x.to]) ?? [],\n      },\n    };\n    console.log('🚀 ~ onSubmit ~ nextData:', nextData);\n    const ret = await onOk?.(nextData);\n    if (ret) {\n      hideModal?.();\n    }\n  }\n\n  useEffect(() => {\n    if (visible) {\n      const pages =\n        parserConfig?.pages?.map((x) => ({ from: x[0], to: x[1] })) ?? [];\n      form.reset({\n        parser_id: parserId,\n        parser_config: fillDefaultParserValue({\n          pages: pages.length > 0 ? pages : [{ from: 1, to: 1024 }],\n          ...omit(parserConfig, 'pages'),\n          graphrag: {\n            use_graphrag: get(\n              parserConfig,\n              'graphrag.use_graphrag',\n              useGraphRag,\n            ),\n          },\n        }),\n      });\n    }\n  }, [\n    fillDefaultParserValue,\n    form,\n    knowledgeDetails.parser_config,\n    parserConfig,\n    parserId,\n    useGraphRag,\n    visible,\n  ]);\n\n  return (\n    <Dialog open onOpenChange={hideModal}>\n      <DialogContent className=\"max-w-[50vw]\">\n        <DialogHeader>\n          <DialogTitle>{t('knowledgeDetails.chunkMethod')}</DialogTitle>\n        </DialogHeader>\n        <Form {...form}>\n          <form\n            onSubmit={form.handleSubmit(onSubmit)}\n            className=\"space-y-6 max-h-[70vh] overflow-auto\"\n            id={FormId}\n          >\n            <FormContainer>\n              <FormField\n                control={form.control}\n                name=\"parser_id\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('knowledgeDetails.chunkMethod')}</FormLabel>\n                    <FormControl>\n                      <RAGFlowSelect\n                        {...field}\n                        options={parserList}\n                      ></RAGFlowSelect>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              {showPages && <DynamicPageRange></DynamicPageRange>}\n              {showPages && layoutRecognize && (\n                <FormField\n                  control={form.control}\n                  name=\"parser_config.task_page_size\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel\n                        tooltip={t('knowledgeDetails.taskPageSizeTip')}\n                      >\n                        {t('knowledgeDetails.taskPageSize')}\n                      </FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          type={'number'}\n                          min={1}\n                          max={128}\n                        ></Input>\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              )}\n            </FormContainer>\n            <FormContainer\n              show={showOne || showMaxTokenNumber}\n              className=\"space-y-3\"\n            >\n              {showOne && <LayoutRecognizeFormField></LayoutRecognizeFormField>}\n              {showMaxTokenNumber && (\n                <>\n                  <MaxTokenNumberFormField\n                    max={\n                      selectedTag === DocumentParserType.KnowledgeGraph\n                        ? 8192 * 2\n                        : 2048\n                    }\n                  ></MaxTokenNumberFormField>\n                  <DelimiterFormField></DelimiterFormField>\n                </>\n              )}\n            </FormContainer>\n            <FormContainer\n              show={showAutoKeywords(selectedTag) || showExcelToHtml}\n              className=\"space-y-3\"\n            >\n              {showAutoKeywords(selectedTag) && (\n                <>\n                  <AutoKeywordsFormField></AutoKeywordsFormField>\n                  <AutoQuestionsFormField></AutoQuestionsFormField>\n                </>\n              )}\n              {showExcelToHtml && <ExcelToHtmlFormField></ExcelToHtmlFormField>}\n            </FormContainer>\n            {showRaptorParseConfiguration(\n              selectedTag as DocumentParserType,\n            ) && (\n              <FormContainer>\n                <RaptorFormFields></RaptorFormFields>\n              </FormContainer>\n            )}\n            {showGraphRagItems(selectedTag as DocumentParserType) &&\n              useGraphRag && <UseGraphRagFormField></UseGraphRagFormField>}\n            {showEntityTypes && <EntityTypesFormField></EntityTypesFormField>}\n          </form>\n        </Form>\n        <DialogFooter>\n          <ButtonLoading type=\"submit\" form={FormId} loading={loading}>\n            {t('common.save')}\n          </ButtonLoading>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import {\n  Dialog,\n  DialogContent,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { IModalProps } from '@/interfaces/common';\nimport { TagRenameId } from '@/pages/add-knowledge/constant';\nimport { useTranslation } from 'react-i18next';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport { z } from 'zod';\n\nimport { ButtonLoading } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport Editor, { loader } from '@monaco-editor/react';\nimport DOMPurify from 'dompurify';\nimport { useEffect } from 'react';\n\nloader.config({ paths: { vs: '/vs' } });\n\nexport function SetMetaDialog({\n  hideModal,\n  onOk,\n  loading,\n  initialMetaData,\n}: IModalProps<any> & { initialMetaData?: IDocumentInfo['meta_fields'] }) {\n  const { t } = useTranslation();\n\n  const FormSchema = z.object({\n    meta: z\n      .string()\n      .min(1, {\n        message: t('knowledgeDetails.pleaseInputJson'),\n      })\n      .trim()\n      .refine(\n        (value) => {\n          try {\n            JSON.parse(value);\n            return true;\n          } catch (error) {\n            return false;\n          }\n        },\n        { message: t('knowledgeDetails.pleaseInputJson') },\n      ),\n  });\n\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {},\n  });\n\n  async function onSubmit(data: z.infer<typeof FormSchema>) {\n    const ret = await onOk?.(data.meta);\n    if (ret) {\n      hideModal?.();\n    }\n  }\n\n  useEffect(() => {\n    form.setValue('meta', JSON.stringify(initialMetaData, null, 4));\n  }, [form, initialMetaData]);\n\n  return (\n    <Dialog open onOpenChange={hideModal}>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>{t('knowledgeDetails.setMetaData')}</DialogTitle>\n        </DialogHeader>\n        <Form {...form}>\n          <form\n            onSubmit={form.handleSubmit(onSubmit)}\n            className=\"space-y-6\"\n            id={TagRenameId}\n          >\n            <FormField\n              control={form.control}\n              name=\"meta\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel\n                    tooltip={\n                      <div\n                        dangerouslySetInnerHTML={{\n                          __html: DOMPurify.sanitize(\n                            t('knowledgeDetails.documentMetaTips'),\n                          ),\n                        }}\n                      ></div>\n                    }\n                  >\n                    {t('knowledgeDetails.metaData')}\n                  </FormLabel>\n                  <FormControl>\n                    <Editor\n                      height={200}\n                      defaultLanguage=\"json\"\n                      theme=\"vs-dark\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </form>\n        </Form>\n        <DialogFooter>\n          <ButtonLoading type=\"submit\" form={TagRenameId} loading={loading}>\n            {t('common.save')}\n          </ButtonLoading>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import { useSetModalState } from '@/hooks/common-hooks';\nimport { useSetDocumentParser } from '@/hooks/use-document-request';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport { IChangeParserRequestBody } from '@/interfaces/request/document';\nimport { useCallback, useState } from 'react';\n\nexport const useChangeDocumentParser = () => {\n  const { setDocumentParser, loading } = useSetDocumentParser();\n  const [record, setRecord] = useState<IDocumentInfo>({} as IDocumentInfo);\n\n  const {\n    visible: changeParserVisible,\n    hideModal: hideChangeParserModal,\n    showModal: showChangeParserModal,\n  } = useSetModalState();\n\n  const onChangeParserOk = useCallback(\n    async (parserConfigInfo: IChangeParserRequestBody) => {\n      if (record?.id) {\n        const ret = await setDocumentParser({\n          parserId: parserConfigInfo.parser_id,\n          documentId: record?.id,\n          parserConfig: parserConfigInfo.parser_config,\n        });\n        if (ret === 0) {\n          hideChangeParserModal();\n        }\n      }\n    },\n    [record?.id, setDocumentParser, hideChangeParserModal],\n  );\n\n  const handleShowChangeParserModal = useCallback(\n    (row: IDocumentInfo) => {\n      setRecord(row);\n      showChangeParserModal();\n    },\n    [showChangeParserModal],\n  );\n\n  return {\n    changeParserLoading: loading,\n    onChangeParserOk,\n    changeParserVisible,\n    hideChangeParserModal,\n    showChangeParserModal: handleShowChangeParserModal,\n    changeParserRecord: record,\n  };\n};\n\nexport type UseChangeDocumentParserShowType = Pick<\n  ReturnType<typeof useChangeDocumentParser>,\n  'showChangeParserModal'\n>;\n","import { RunningStatus } from '@/constants/knowledge';\n\nexport const RunningStatusMap = {\n  [RunningStatus.UNSTART]: {\n    label: 'UNSTART',\n    color: 'cyan',\n  },\n  [RunningStatus.RUNNING]: {\n    label: 'Parsing',\n    color: 'blue',\n  },\n  [RunningStatus.CANCEL]: { label: 'CANCEL', color: 'orange' },\n  [RunningStatus.DONE]: { label: 'SUCCESS', color: 'blue' },\n  [RunningStatus.FAIL]: { label: 'FAIL', color: 'red' },\n};\n\nexport * from '@/constants/knowledge';\n","import { RunningStatus } from './constant';\n\nexport const isParserRunning = (text: RunningStatus) => {\n  const isRunning = text === RunningStatus.RUNNING;\n  return isRunning;\n};\n","import { ConfirmDeleteDialog } from '@/components/confirm-delete-dialog';\nimport { Button } from '@/components/ui/button';\nimport {\n  HoverCard,\n  HoverCardContent,\n  HoverCardTrigger,\n} from '@/components/ui/hover-card';\nimport { DocumentType } from '@/constants/knowledge';\nimport { useRemoveDocument } from '@/hooks/use-document-request';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport { formatFileSize } from '@/utils/common-util';\nimport { formatDate } from '@/utils/date';\nimport { downloadDocument } from '@/utils/file-util';\nimport { ArrowDownToLine, FolderPen, ScrollText, Trash2 } from 'lucide-react';\nimport { useCallback } from 'react';\nimport { UseRenameDocumentShowType } from './use-rename-document';\nimport { isParserRunning } from './utils';\n\nconst Fields = ['name', 'size', 'type', 'create_time', 'update_time'];\n\nconst FunctionMap = {\n  size: formatFileSize,\n  create_time: formatDate,\n  update_time: formatDate,\n};\n\nexport function DatasetActionCell({\n  record,\n  showRenameModal,\n}: { record: IDocumentInfo } & UseRenameDocumentShowType) {\n  const { id, run, type } = record;\n  const isRunning = isParserRunning(run);\n  const isVirtualDocument = type === DocumentType.Virtual;\n\n  const { removeDocument } = useRemoveDocument();\n\n  const onDownloadDocument = useCallback(() => {\n    downloadDocument({\n      id,\n      filename: record.name,\n    });\n  }, [id, record.name]);\n\n  const handleRemove = useCallback(() => {\n    removeDocument(id);\n  }, [id, removeDocument]);\n\n  const handleRename = useCallback(() => {\n    showRenameModal(record);\n  }, [record, showRenameModal]);\n\n  return (\n    <section className=\"flex gap-4 items-center text-text-sub-title-invert\">\n      <Button\n        variant={'ghost'}\n        size={'sm'}\n        disabled={isRunning}\n        onClick={handleRename}\n      >\n        <FolderPen />\n      </Button>\n      <HoverCard>\n        <HoverCardTrigger>\n          <Button variant=\"ghost\" disabled={isRunning} size={'sm'}>\n            <ScrollText />\n          </Button>\n        </HoverCardTrigger>\n        <HoverCardContent className=\"w-[40vw] max-h-[40vh] overflow-auto\">\n          <ul className=\"space-y-2\">\n            {Object.entries(record)\n              .filter(([key]) => Fields.some((x) => x === key))\n\n              .map(([key, value], idx) => {\n                return (\n                  <li key={idx} className=\"flex gap-2\">\n                    {key}:\n                    <div>\n                      {key in FunctionMap\n                        ? FunctionMap[key as keyof typeof FunctionMap](value)\n                        : value}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </HoverCardContent>\n      </HoverCard>\n\n      {isVirtualDocument || (\n        <Button\n          variant={'ghost'}\n          onClick={onDownloadDocument}\n          disabled={isRunning}\n          size={'sm'}\n        >\n          <ArrowDownToLine />\n        </Button>\n      )}\n      <ConfirmDeleteDialog onOk={handleRemove}>\n        <Button variant={'ghost'} size={'sm'} disabled={isRunning}>\n          <Trash2 />\n        </Button>\n      </ConfirmDeleteDialog>\n    </section>\n  );\n}\n","import { Button } from '@/components/ui/button';\nimport {\n  HoverCard,\n  HoverCardContent,\n  HoverCardTrigger,\n} from '@/components/ui/hover-card';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport { useTranslation } from 'react-i18next';\nimport reactStringReplace from 'react-string-replace';\nimport { RunningStatus, RunningStatusMap } from './constant';\n\ninterface IProps {\n  record: IDocumentInfo;\n}\n\nfunction Dot({ run }: { run: RunningStatus }) {\n  const runningStatus = RunningStatusMap[run];\n  return (\n    <span\n      className={'size-2 inline-block rounded'}\n      style={{ backgroundColor: runningStatus.color }}\n    ></span>\n  );\n}\n\nexport const PopoverContent = ({ record }: IProps) => {\n  const { t } = useTranslation();\n  const label = t(`knowledgeDetails.runningStatus${record.run}`);\n\n  const replaceText = (text: string) => {\n    // Remove duplicate \\n\n    const nextText = text.replace(/(\\n)\\1+/g, '$1');\n\n    const replacedText = reactStringReplace(\n      nextText,\n      /(\\[ERROR\\].+\\s)/g,\n      (match, i) => {\n        return (\n          <span key={i} className={'text-red-600'}>\n            {match}\n          </span>\n        );\n      },\n    );\n\n    return replacedText;\n  };\n\n  const items = [\n    {\n      key: 'process_begin_at',\n      label: t('knowledgeDetails.processBeginAt'),\n      children: record.process_begin_at,\n    },\n    {\n      key: 'knowledgeDetails.process_duation',\n      label: t('processDuration'),\n      children: `${record.process_duation.toFixed(2)} s`,\n    },\n    {\n      key: 'progress_msg',\n      label: t('knowledgeDetails.progressMsg'),\n      children: replaceText(record.progress_msg.trim()),\n    },\n  ];\n\n  return (\n    <section>\n      <div className=\"flex gap-2 items-center pb-2\">\n        <Dot run={record.run}></Dot> {label}\n      </div>\n      <div className=\"flex flex-col max-h-[50vh] overflow-auto\">\n        {items.map((x, idx) => {\n          return (\n            <div key={x.key} className={idx < 2 ? 'flex gap-2' : ''}>\n              <b>{x.label}:</b>\n              <div className={'w-full  whitespace-pre-line text-wrap '}>\n                {x.children}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nexport function ParsingCard({ record }: IProps) {\n  return (\n    <HoverCard>\n      <HoverCardTrigger asChild>\n        <Button variant={'ghost'} size={'sm'}>\n          <Dot run={record.run}></Dot>\n        </Button>\n      </HoverCardTrigger>\n      <HoverCardContent className=\"w-[40vw]\">\n        <PopoverContent record={record}></PopoverContent>\n      </HoverCardContent>\n    </HoverCard>\n  );\n}\n","import { useRunDocument } from '@/hooks/use-document-request';\nimport { useState } from 'react';\n\nexport const useHandleRunDocumentByIds = (id: string) => {\n  const { runDocumentByIds, loading } = useRunDocument();\n  const [currentId, setCurrentId] = useState<string>('');\n  const isLoading = loading && currentId !== '' && currentId === id;\n\n  const handleRunDocumentByIds = async (\n    documentId: string,\n    isRunning: boolean,\n    shouldDelete: boolean = false,\n  ) => {\n    if (isLoading) {\n      return;\n    }\n    setCurrentId(documentId);\n    try {\n      await runDocumentByIds({\n        documentIds: [documentId],\n        run: isRunning ? 2 : 1,\n        shouldDelete,\n      });\n      setCurrentId('');\n    } catch (error) {\n      setCurrentId('');\n    }\n  };\n\n  return {\n    handleRunDocumentByIds,\n    loading: isLoading,\n  };\n};\n","import { ConfirmDeleteDialog } from '@/components/confirm-delete-dialog';\nimport { Button } from '@/components/ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { Progress } from '@/components/ui/progress';\nimport { Separator } from '@/components/ui/separator';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport { CircleX, Play, RefreshCw } from 'lucide-react';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RunningStatus } from './constant';\nimport { ParsingCard } from './parsing-card';\nimport { UseChangeDocumentParserShowType } from './use-change-document-parser';\nimport { useHandleRunDocumentByIds } from './use-run-document';\nimport { UseSaveMetaShowType } from './use-save-meta';\nimport { isParserRunning } from './utils';\n\nconst IconMap = {\n  [RunningStatus.UNSTART]: <Play />,\n  [RunningStatus.RUNNING]: <CircleX />,\n  [RunningStatus.CANCEL]: <RefreshCw />,\n  [RunningStatus.DONE]: <RefreshCw />,\n  [RunningStatus.FAIL]: <RefreshCw />,\n};\n\nexport function ParsingStatusCell({\n  record,\n  showChangeParserModal,\n  showSetMetaModal,\n}: { record: IDocumentInfo } & UseChangeDocumentParserShowType &\n  UseSaveMetaShowType) {\n  const { t } = useTranslation();\n  const { run, parser_id, progress, chunk_num, id } = record;\n  const operationIcon = IconMap[run];\n  const p = Number((progress * 100).toFixed(2));\n  const { handleRunDocumentByIds } = useHandleRunDocumentByIds(id);\n  const isRunning = isParserRunning(run);\n  const isZeroChunk = chunk_num === 0;\n\n  const handleOperationIconClick =\n    (shouldDelete: boolean = false) =>\n    () => {\n      handleRunDocumentByIds(record.id, isRunning, shouldDelete);\n    };\n\n  const handleShowChangeParserModal = useCallback(() => {\n    showChangeParserModal(record);\n  }, [record, showChangeParserModal]);\n\n  const handleShowSetMetaModal = useCallback(() => {\n    showSetMetaModal(record);\n  }, [record, showSetMetaModal]);\n\n  return (\n    <section className=\"flex gap-2 items-center\">\n      <div className=\"w-28 flex items-center justify-between\">\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant={'ghost'} size={'sm'}>\n              {parser_id}\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent>\n            <DropdownMenuItem onClick={handleShowChangeParserModal}>\n              {t('knowledgeDetails.chunkMethod')}\n            </DropdownMenuItem>\n            <DropdownMenuItem onClick={handleShowSetMetaModal}>\n              {t('knowledgeDetails.setMetaData')}\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n        <Separator orientation=\"vertical\" className=\"h-2.5\" />\n      </div>\n      <ConfirmDeleteDialog\n        title={t(`knowledgeDetails.redo`, { chunkNum: chunk_num })}\n        hidden={isZeroChunk || isRunning}\n        onOk={handleOperationIconClick(true)}\n        onCancel={handleOperationIconClick(false)}\n      >\n        <Button\n          variant={'ghost'}\n          size={'sm'}\n          onClick={\n            isZeroChunk || isRunning\n              ? handleOperationIconClick(false)\n              : () => {}\n          }\n        >\n          {operationIcon}\n        </Button>\n      </ConfirmDeleteDialog>\n      {isParserRunning(run) ? (\n        <div className=\"flex items-center gap-1\">\n          <Progress value={p} className=\"h-1 flex-1 min-w-10\" />\n          {p}%\n        </div>\n      ) : (\n        <ParsingCard record={record}></ParsingCard>\n      )}\n    </section>\n  );\n}\n","import { useSetModalState } from '@/hooks/common-hooks';\nimport { useSaveDocumentName } from '@/hooks/use-document-request';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport { useCallback, useState } from 'react';\n\nexport const useRenameDocument = () => {\n  const { saveName, loading } = useSaveDocumentName();\n  const [record, setRecord] = useState<IDocumentInfo>();\n\n  const {\n    visible: renameVisible,\n    hideModal: hideRenameModal,\n    showModal: showRenameModal,\n  } = useSetModalState();\n\n  const onRenameOk = useCallback(\n    async (name: string) => {\n      if (record?.id) {\n        const ret = await saveName({ documentId: record.id, name });\n        if (ret === 0) {\n          hideRenameModal();\n        }\n      }\n    },\n    [record?.id, saveName, hideRenameModal],\n  );\n\n  const handleShow = useCallback(\n    (row: IDocumentInfo) => {\n      setRecord(row);\n      showRenameModal();\n    },\n    [showRenameModal],\n  );\n\n  return {\n    renameLoading: loading,\n    onRenameOk,\n    renameVisible,\n    hideRenameModal,\n    showRenameModal: handleShow,\n    initialName: record?.name,\n  };\n};\n\nexport type UseRenameDocumentShowType = Pick<\n  ReturnType<typeof useRenameDocument>,\n  'showRenameModal'\n>;\n","import { useSetModalState } from '@/hooks/common-hooks';\nimport { useSetDocumentMeta } from '@/hooks/use-document-request';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport { useCallback, useState } from 'react';\n\nexport const useSaveMeta = () => {\n  const { setDocumentMeta, loading } = useSetDocumentMeta();\n  const [record, setRecord] = useState<IDocumentInfo>({} as IDocumentInfo);\n\n  const {\n    visible: setMetaVisible,\n    hideModal: hideSetMetaModal,\n    showModal: showSetMetaModal,\n  } = useSetModalState();\n\n  const onSetMetaModalOk = useCallback(\n    async (meta: string) => {\n      const ret = await setDocumentMeta({\n        documentId: record?.id,\n        meta,\n      });\n      if (ret === 0) {\n        hideSetMetaModal();\n      }\n    },\n    [setDocumentMeta, record?.id, hideSetMetaModal],\n  );\n\n  const handleShowSetMetaModal = useCallback(\n    (row: IDocumentInfo) => {\n      setRecord(row);\n      showSetMetaModal();\n    },\n    [showSetMetaModal],\n  );\n\n  return {\n    setMetaLoading: loading,\n    onSetMetaModalOk,\n    setMetaVisible,\n    hideSetMetaModal,\n    showSetMetaModal: handleShowSetMetaModal,\n    metaRecord: record,\n  };\n};\n\nexport type UseSaveMetaShowType = Pick<\n  ReturnType<typeof useSaveMeta>,\n  'showSetMetaModal'\n>;\n","'use client';\n\nimport {\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport * as React from 'react';\n\nimport { ChunkMethodDialog } from '@/components/chunk-method-dialog';\nimport { RenameDialog } from '@/components/rename-dialog';\nimport { RAGFlowPagination } from '@/components/ui/ragflow-pagination';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { UseRowSelectionType } from '@/hooks/logic-hooks/use-row-selection';\nimport { useFetchDocumentList } from '@/hooks/use-document-request';\nimport { getExtension } from '@/utils/document-util';\nimport { pick } from 'lodash';\nimport { useMemo } from 'react';\nimport { SetMetaDialog } from './set-meta-dialog';\nimport { useChangeDocumentParser } from './use-change-document-parser';\nimport { useDatasetTableColumns } from './use-dataset-table-columns';\nimport { useRenameDocument } from './use-rename-document';\nimport { useSaveMeta } from './use-save-meta';\n\nexport type DatasetTableProps = Pick<\n  ReturnType<typeof useFetchDocumentList>,\n  'documents' | 'setPagination' | 'pagination' | 'loading'\n> &\n  Pick<UseRowSelectionType, 'rowSelection' | 'setRowSelection'>;\n\nexport function DatasetTable({\n  documents,\n  pagination,\n  setPagination,\n  rowSelection,\n  setRowSelection,\n}: DatasetTableProps) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    [],\n  );\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n\n  const {\n    changeParserLoading,\n    onChangeParserOk,\n    changeParserVisible,\n    hideChangeParserModal,\n    showChangeParserModal,\n    changeParserRecord,\n  } = useChangeDocumentParser();\n\n  const {\n    renameLoading,\n    onRenameOk,\n    renameVisible,\n    hideRenameModal,\n    showRenameModal,\n    initialName,\n  } = useRenameDocument();\n\n  const {\n    showSetMetaModal,\n    hideSetMetaModal,\n    setMetaVisible,\n    setMetaLoading,\n    onSetMetaModalOk,\n    metaRecord,\n  } = useSaveMeta();\n\n  const columns = useDatasetTableColumns({\n    showChangeParserModal,\n    showRenameModal,\n    showSetMetaModal,\n  });\n\n  const currentPagination = useMemo(() => {\n    return {\n      pageIndex: (pagination.current || 1) - 1,\n      pageSize: pagination.pageSize || 10,\n    };\n  }, [pagination]);\n\n  const table = useReactTable({\n    data: documents,\n    columns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    manualPagination: true, //we're doing manual \"server-side\" pagination\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n      pagination: currentPagination,\n    },\n    rowCount: pagination.total ?? 0,\n  });\n\n  return (\n    <div className=\"w-full\">\n      <Table rootClassName=\"max-h-[82vh]\">\n        <TableHeader>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <TableRow key={headerGroup.id}>\n              {headerGroup.headers.map((header) => {\n                return (\n                  <TableHead key={header.id}>\n                    {header.isPlaceholder\n                      ? null\n                      : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext(),\n                        )}\n                  </TableHead>\n                );\n              })}\n            </TableRow>\n          ))}\n        </TableHeader>\n        <TableBody className=\"relative\">\n          {table.getRowModel().rows?.length ? (\n            table.getRowModel().rows.map((row) => (\n              <TableRow\n                key={row.id}\n                data-state={row.getIsSelected() && 'selected'}\n              >\n                {row.getVisibleCells().map((cell) => (\n                  <TableCell\n                    key={cell.id}\n                    className={cell.column.columnDef.meta?.cellClassName}\n                  >\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                No results.\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n      <div className=\"flex items-center justify-end  py-4\">\n        <div className=\"space-x-2\">\n          <RAGFlowPagination\n            {...pick(pagination, 'current', 'pageSize')}\n            total={pagination.total}\n            onChange={(page, pageSize) => {\n              setPagination({ page, pageSize });\n            }}\n          ></RAGFlowPagination>\n        </div>\n      </div>\n      {changeParserVisible && (\n        <ChunkMethodDialog\n          documentId={changeParserRecord.id}\n          parserId={changeParserRecord.parser_id}\n          parserConfig={changeParserRecord.parser_config}\n          documentExtension={getExtension(changeParserRecord.name)}\n          onOk={onChangeParserOk}\n          visible={changeParserVisible}\n          hideModal={hideChangeParserModal}\n          loading={changeParserLoading}\n        ></ChunkMethodDialog>\n      )}\n\n      {renameVisible && (\n        <RenameDialog\n          visible={renameVisible}\n          onOk={onRenameOk}\n          loading={renameLoading}\n          hideModal={hideRenameModal}\n          initialName={initialName}\n        ></RenameDialog>\n      )}\n\n      {setMetaVisible && (\n        <SetMetaDialog\n          hideModal={hideSetMetaModal}\n          loading={setMetaLoading}\n          onOk={onSetMetaModalOk}\n          initialMetaData={metaRecord.meta_fields}\n        ></SetMetaDialog>\n      )}\n    </div>\n  );\n}\n","import { FileIcon } from '@/components/icon-font';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Switch } from '@/components/ui/switch';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from '@/components/ui/tooltip';\nimport { useNavigatePage } from '@/hooks/logic-hooks/navigate-hooks';\nimport { useSetDocumentStatus } from '@/hooks/use-document-request';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport { cn } from '@/lib/utils';\nimport { formatDate } from '@/utils/date';\nimport { ColumnDef } from '@tanstack/table-core';\nimport { ArrowUpDown } from 'lucide-react';\nimport { useTranslation } from 'react-i18next';\nimport { DatasetActionCell } from './dataset-action-cell';\nimport { ParsingStatusCell } from './parsing-status-cell';\nimport { UseChangeDocumentParserShowType } from './use-change-document-parser';\nimport { UseRenameDocumentShowType } from './use-rename-document';\nimport { UseSaveMetaShowType } from './use-save-meta';\n\ntype UseDatasetTableColumnsType = UseChangeDocumentParserShowType &\n  UseRenameDocumentShowType &\n  UseSaveMetaShowType;\n\nexport function useDatasetTableColumns({\n  showChangeParserModal,\n  showRenameModal,\n  showSetMetaModal,\n}: UseDatasetTableColumnsType) {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'knowledgeDetails',\n  });\n\n  const { navigateToChunkParsedResult } = useNavigatePage();\n  const { setDocumentStatus } = useSetDocumentStatus();\n\n  const columns: ColumnDef<IDocumentInfo>[] = [\n    {\n      id: 'select',\n      header: ({ table }) => (\n        <Checkbox\n          checked={\n            table.getIsAllPageRowsSelected() ||\n            (table.getIsSomePageRowsSelected() && 'indeterminate')\n          }\n          onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n          aria-label=\"Select all\"\n        />\n      ),\n      cell: ({ row }) => (\n        <Checkbox\n          checked={row.getIsSelected()}\n          onCheckedChange={(value) => row.toggleSelected(!!value)}\n          aria-label=\"Select row\"\n        />\n      ),\n      enableSorting: false,\n      enableHiding: false,\n    },\n    {\n      accessorKey: 'name',\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n          >\n            {t('name')}\n            <ArrowUpDown />\n          </Button>\n        );\n      },\n      meta: { cellClassName: 'max-w-[20vw]' },\n      cell: ({ row }) => {\n        const name: string = row.getValue('name');\n\n        return (\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <div\n                className=\"flex gap-2 cursor-pointer\"\n                onClick={navigateToChunkParsedResult(\n                  row.original.id,\n                  row.original.kb_id,\n                )}\n              >\n                <FileIcon name={name}></FileIcon>\n                <span className={cn('truncate')}>{name}</span>\n              </div>\n            </TooltipTrigger>\n            <TooltipContent>\n              <p>{name}</p>\n            </TooltipContent>\n          </Tooltip>\n        );\n      },\n    },\n    {\n      accessorKey: 'create_time',\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n          >\n            {t('uploadDate')}\n            <ArrowUpDown />\n          </Button>\n        );\n      },\n      cell: ({ row }) => (\n        <div className=\"lowercase\">\n          {formatDate(row.getValue('create_time'))}\n        </div>\n      ),\n    },\n    {\n      accessorKey: 'status',\n      header: t('enabled'),\n      cell: ({ row }) => {\n        const id = row.original.id;\n        return (\n          <Switch\n            checked={row.getValue('status') === '1'}\n            onCheckedChange={(e) => {\n              setDocumentStatus({ status: e, documentId: id });\n            }}\n          />\n        );\n      },\n    },\n    {\n      accessorKey: 'chunk_num',\n      header: t('chunkNumber'),\n      cell: ({ row }) => (\n        <div className=\"capitalize\">{row.getValue('chunk_num')}</div>\n      ),\n    },\n    {\n      accessorKey: 'run',\n      header: t('parsingStatus'),\n      // meta: { cellClassName: 'min-w-[20vw]' },\n      cell: ({ row }) => {\n        return (\n          <ParsingStatusCell\n            record={row.original}\n            showChangeParserModal={showChangeParserModal}\n            showSetMetaModal={showSetMetaModal}\n          ></ParsingStatusCell>\n        );\n      },\n    },\n    {\n      id: 'actions',\n      header: t('action'),\n      enableHiding: false,\n      cell: ({ row }) => {\n        const record = row.original;\n\n        return (\n          <DatasetActionCell\n            record={record}\n            showRenameModal={showRenameModal}\n          ></DatasetActionCell>\n        );\n      },\n    },\n  ];\n\n  return columns;\n}\n","import { useSetModalState } from '@/hooks/common-hooks';\nimport { useCreateDocument } from '@/hooks/use-document-request';\nimport { useCallback } from 'react';\n\nexport const useCreateEmptyDocument = () => {\n  const { createDocument, loading } = useCreateDocument();\n\n  const {\n    visible: createVisible,\n    hideModal: hideCreateModal,\n    showModal: showCreateModal,\n  } = useSetModalState();\n\n  const onCreateOk = useCallback(\n    async (name: string) => {\n      const ret = await createDocument(name);\n      if (ret === 0) {\n        hideCreateModal();\n      }\n    },\n    [hideCreateModal, createDocument],\n  );\n\n  return {\n    createLoading: loading,\n    onCreateOk,\n    createVisible,\n    hideCreateModal,\n    showCreateModal,\n  };\n};\n","import { useFetchAllDocumentList } from '@/hooks/use-document-request';\nimport { groupListByType } from '@/utils/dataset-util';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport function useSelectDatasetFilters() {\n  const {\n    data: { docs: documents },\n  } = useFetchAllDocumentList();\n  const { t } = useTranslation();\n\n  const fileTypes = useMemo(() => {\n    return groupListByType(documents, 'type', 'type');\n  }, [documents]);\n\n  const fileStatus = useMemo(() => {\n    return groupListByType(documents, 'run', 'run').map((x) => ({\n      ...x,\n      label: t(`knowledgeDetails.runningStatus${x.label}`),\n    }));\n  }, [documents, t]);\n\n  const filters = useMemo(() => {\n    return [\n      { field: 'type', label: 'File Type', list: fileTypes },\n      { field: 'run', label: 'Status', list: fileStatus },\n    ];\n  }, [fileStatus, fileTypes]);\n\n  return { fileTypes, fileStatus, filters };\n}\n","import { useSetModalState } from '@/hooks/common-hooks';\nimport { useUploadNextDocument } from '@/hooks/use-document-request';\nimport { getUnSupportedFilesCount } from '@/utils/document-util';\nimport { useCallback } from 'react';\n\nexport const useHandleUploadDocument = () => {\n  const {\n    visible: documentUploadVisible,\n    hideModal: hideDocumentUploadModal,\n    showModal: showDocumentUploadModal,\n  } = useSetModalState();\n  const { uploadDocument, loading } = useUploadNextDocument();\n\n  const onDocumentUploadOk = useCallback(\n    async (fileList: File[]): Promise<number | undefined> => {\n      if (fileList.length > 0) {\n        const ret: any = await uploadDocument(fileList);\n        if (typeof ret?.message !== 'string') {\n          return;\n        }\n        const count = getUnSupportedFilesCount(ret?.message);\n        /// 500 error code indicates that some file types are not supported\n        let code = ret?.code;\n        if (\n          ret?.code === 0 ||\n          (ret?.code === 500 && count !== fileList.length) // Some files were not uploaded successfully, but some were uploaded successfully.\n        ) {\n          code = 0;\n          hideDocumentUploadModal();\n        }\n        return code;\n      }\n    },\n    [uploadDocument, hideDocumentUploadModal],\n  );\n\n  return {\n    documentUploadLoading: loading,\n    onDocumentUploadOk,\n    documentUploadVisible,\n    hideDocumentUploadModal,\n    showDocumentUploadModal,\n  };\n};\n","import { BulkOperateBar } from '@/components/bulk-operate-bar';\nimport { FileUploadDialog } from '@/components/file-upload-dialog';\nimport ListFilterBar from '@/components/list-filter-bar';\nimport { RenameDialog } from '@/components/rename-dialog';\nimport { Button } from '@/components/ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { useRowSelection } from '@/hooks/logic-hooks/use-row-selection';\nimport { useFetchDocumentList } from '@/hooks/use-document-request';\nimport { Upload } from 'lucide-react';\nimport { useTranslation } from 'react-i18next';\nimport { DatasetTable } from './dataset-table';\nimport { useBulkOperateDataset } from './use-bulk-operate-dataset';\nimport { useCreateEmptyDocument } from './use-create-empty-document';\nimport { useSelectDatasetFilters } from './use-select-filters';\nimport { useHandleUploadDocument } from './use-upload-document';\n\nexport default function Dataset() {\n  const { t } = useTranslation();\n  const {\n    documentUploadVisible,\n    hideDocumentUploadModal,\n    showDocumentUploadModal,\n    onDocumentUploadOk,\n    documentUploadLoading,\n  } = useHandleUploadDocument();\n\n  const {\n    searchString,\n    documents,\n    pagination,\n    handleInputChange,\n    setPagination,\n    filterValue,\n    handleFilterSubmit,\n    loading,\n  } = useFetchDocumentList();\n  const { filters } = useSelectDatasetFilters();\n\n  const {\n    createLoading,\n    onCreateOk,\n    createVisible,\n    hideCreateModal,\n    showCreateModal,\n  } = useCreateEmptyDocument();\n\n  const { rowSelection, rowSelectionIsEmpty, setRowSelection, selectedCount } =\n    useRowSelection();\n\n  const { list } = useBulkOperateDataset({\n    documents,\n    rowSelection,\n    setRowSelection,\n  });\n\n  return (\n    <section className=\"p-5\">\n      <ListFilterBar\n        title=\"Dataset\"\n        onSearchChange={handleInputChange}\n        searchString={searchString}\n        value={filterValue}\n        onChange={handleFilterSubmit}\n        filters={filters}\n        leftPanel={\n          <div className=\"items-start\">\n            <div className=\"pb-1\">Dataset</div>\n            <div className=\"text-text-sub-title-invert text-sm\">\n              Please wait for your files to finish parsing before starting an\n              AI-powered chat.\n            </div>\n          </div>\n        }\n      >\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button size={'sm'}>\n              <Upload />\n              {t('knowledgeDetails.addFile')}\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent className=\"w-56\">\n            <DropdownMenuItem onClick={showDocumentUploadModal}>\n              {t('fileManager.uploadFile')}\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem onClick={showCreateModal}>\n              {t('fileManager.newFolder')}\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </ListFilterBar>\n      {rowSelectionIsEmpty || (\n        <BulkOperateBar list={list} count={selectedCount}></BulkOperateBar>\n      )}\n      <DatasetTable\n        documents={documents}\n        pagination={pagination}\n        setPagination={setPagination}\n        rowSelection={rowSelection}\n        setRowSelection={setRowSelection}\n        loading={loading}\n      ></DatasetTable>\n      {documentUploadVisible && (\n        <FileUploadDialog\n          hideModal={hideDocumentUploadModal}\n          onOk={onDocumentUploadOk}\n          loading={documentUploadLoading}\n        ></FileUploadDialog>\n      )}\n      {createVisible && (\n        <RenameDialog\n          hideModal={hideCreateModal}\n          onOk={onCreateOk}\n          loading={createLoading}\n          title={'File Name'}\n        ></RenameDialog>\n      )}\n    </section>\n  );\n}\n","import {\n  UseRowSelectionType,\n  useSelectedIds,\n} from '@/hooks/logic-hooks/use-row-selection';\nimport {\n  useRemoveDocument,\n  useRunDocument,\n  useSetDocumentStatus,\n} from '@/hooks/use-document-request';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport { Ban, CircleCheck, CircleX, Play, Trash2 } from 'lucide-react';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'sonner';\nimport { DocumentType, RunningStatus } from './constant';\n\nexport function useBulkOperateDataset({\n  rowSelection,\n  setRowSelection,\n  documents,\n}: Pick<UseRowSelectionType, 'rowSelection' | 'setRowSelection'> & {\n  documents: IDocumentInfo[];\n}) {\n  const { t } = useTranslation();\n  const { selectedIds: selectedRowKeys } = useSelectedIds(\n    rowSelection,\n    documents,\n  );\n\n  const { runDocumentByIds } = useRunDocument();\n  const { setDocumentStatus } = useSetDocumentStatus();\n  const { removeDocument } = useRemoveDocument();\n\n  const runDocument = useCallback(\n    (run: number) => {\n      const nonVirtualKeys = selectedRowKeys.filter(\n        (x) =>\n          !documents.some((y) => x === y.id && y.type === DocumentType.Virtual),\n      );\n\n      if (nonVirtualKeys.length === 0) {\n        toast.error(t('Please select a non-empty file list'));\n        return;\n      }\n      runDocumentByIds({\n        documentIds: nonVirtualKeys,\n        run,\n        shouldDelete: false,\n      });\n    },\n    [documents, runDocumentByIds, selectedRowKeys, t],\n  );\n\n  const handleRunClick = useCallback(() => {\n    runDocument(1);\n  }, [runDocument]);\n\n  const handleCancelClick = useCallback(() => {\n    runDocument(2);\n  }, [runDocument]);\n\n  const onChangeStatus = useCallback(\n    (enabled: boolean) => {\n      selectedRowKeys.forEach((id) => {\n        setDocumentStatus({ status: enabled, documentId: id });\n      });\n    },\n    [selectedRowKeys, setDocumentStatus],\n  );\n\n  const handleEnableClick = useCallback(() => {\n    onChangeStatus(true);\n  }, [onChangeStatus]);\n\n  const handleDisableClick = useCallback(() => {\n    onChangeStatus(false);\n  }, [onChangeStatus]);\n\n  const handleDelete = useCallback(() => {\n    const deletedKeys = selectedRowKeys.filter(\n      (x) =>\n        !documents\n          .filter((y) => y.run === RunningStatus.RUNNING)\n          .some((y) => y.id === x),\n    );\n    if (deletedKeys.length === 0) {\n      toast.error(t('theDocumentBeingParsedCannotBeDeleted'));\n      return;\n    }\n\n    return removeDocument(deletedKeys);\n  }, [selectedRowKeys, removeDocument, documents, t]);\n\n  const list = [\n    {\n      id: 'enabled',\n      label: t('knowledgeDetails.enabled'),\n      icon: <CircleCheck />,\n      onClick: handleEnableClick,\n    },\n    {\n      id: 'disabled',\n      label: t('knowledgeDetails.disabled'),\n      icon: <Ban />,\n      onClick: handleDisableClick,\n    },\n    {\n      id: 'run',\n      label: t('knowledgeDetails.run'),\n      icon: <Play />,\n      onClick: handleRunClick,\n    },\n    {\n      id: 'cancel',\n      label: t('knowledgeDetails.cancel'),\n      icon: <CircleX />,\n      onClick: handleCancelClick,\n    },\n    {\n      id: 'delete',\n      label: t('common.delete'),\n      icon: <Trash2 />,\n      onClick: async () => {\n        const code = await handleDelete();\n        if (code === 0) {\n          setRowSelection({});\n        }\n      },\n    },\n  ];\n\n  return { list };\n}\n","export enum Routes {\n  Login = '/login',\n  Home = '/home',\n  Datasets = '/datasets',\n  DatasetBase = '/dataset',\n  Dataset = `${Routes.DatasetBase}${Routes.DatasetBase}`,\n  Agent = '/agent',\n  AgentTemplates = '/agent-templates',\n  Agents = '/agents',\n  Searches = '/next-searches',\n  Search = '/next-search',\n  Chats = '/next-chats',\n  Chat = '/next-chat',\n  Files = '/files',\n  ProfileSetting = '/profile-setting',\n  DatasetTesting = '/testing',\n  DatasetSetting = '/setting',\n  Chunk = '/chunk',\n  ChunkResult = `${Chunk}${Chunk}`,\n  Parsed = '/parsed',\n  ParsedResult = `${Chunk}${Parsed}`,\n  Result = '/result',\n  ResultView = `${Chunk}${Result}`,\n}\n\nconst routes = [\n  {\n    path: '/login',\n    component: '@/pages/login',\n    layout: false,\n  },\n  {\n    path: '/login-next',\n    component: '@/pages/login-next',\n    layout: false,\n  },\n  {\n    path: '/chat/share',\n    component: '@/pages/chat/share',\n    layout: false,\n  },\n  {\n    path: '/',\n    component: '@/layouts',\n    layout: false,\n    wrappers: ['@/wrappers/auth'],\n    routes: [\n      { path: '/', redirect: '/knowledge' },\n      {\n        path: '/knowledge',\n        component: '@/pages/knowledge',\n        // component: '@/pages/knowledge/datasets',\n      },\n      {\n        path: '/knowledge',\n        component: '@/pages/add-knowledge',\n        routes: [\n          {\n            path: '/knowledge/dataset',\n            component: '@/pages/add-knowledge/components/knowledge-dataset',\n            routes: [\n              {\n                path: '/knowledge/dataset',\n                component: '@/pages/add-knowledge/components/knowledge-file',\n              },\n              {\n                path: '/knowledge/dataset/chunk',\n                component: '@/pages/add-knowledge/components/knowledge-chunk',\n              },\n            ],\n          },\n          {\n            path: '/knowledge/configuration',\n            component: '@/pages/add-knowledge/components/knowledge-setting',\n          },\n          {\n            path: '/knowledge/testing',\n            component: '@/pages/add-knowledge/components/knowledge-testing',\n          },\n          {\n            path: '/knowledge/knowledgeGraph',\n            component: '@/pages/add-knowledge/components/knowledge-graph',\n          },\n        ],\n      },\n      {\n        path: '/chat',\n        component: '@/pages/chat',\n      },\n      {\n        path: '/user-setting',\n        component: '@/pages/user-setting',\n        routes: [\n          { path: '/user-setting', redirect: '/user-setting/profile' },\n          {\n            path: '/user-setting/profile',\n            // component: '@/pages/user-setting/setting-profile',\n            component: '@/pages/user-setting/setting-profile',\n          },\n          {\n            path: '/user-setting/locale',\n            component: '@/pages/user-setting/setting-locale',\n          },\n          {\n            path: '/user-setting/password',\n            component: '@/pages/user-setting/setting-password',\n          },\n          {\n            path: '/user-setting/model',\n            component: '@/pages/user-setting/setting-model',\n          },\n          {\n            path: '/user-setting/team',\n            component: '@/pages/user-setting/setting-team',\n          },\n          {\n            path: '/user-setting/system',\n            component: '@/pages/user-setting/setting-system',\n          },\n          {\n            path: '/user-setting/api',\n            component: '@/pages/user-setting/setting-api',\n          },\n        ],\n      },\n      {\n        path: '/file',\n        component: '@/pages/file-manager',\n      },\n      {\n        path: '/flow',\n        component: '@/pages/flow/list',\n      },\n      {\n        path: '/flow/:id',\n        component: '@/pages/flow',\n      },\n      {\n        path: '/search',\n        component: '@/pages/search',\n      },\n    ],\n  },\n  {\n    path: '/document/:id',\n    component: '@/pages/document-viewer',\n    layout: false,\n  },\n  {\n    path: '/*',\n    component: '@/pages/404',\n    layout: false,\n  },\n  {\n    path: Routes.Home,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Home,\n        component: `@/pages${Routes.Home}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Datasets,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Datasets,\n        component: `@/pages${Routes.Datasets}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Chats,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Chats,\n        component: `@/pages${Routes.Chats}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Chat,\n    layout: false,\n    component: `@/pages${Routes.Chats}/chat`,\n  },\n  {\n    path: Routes.Searches,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Searches,\n        component: `@/pages${Routes.Searches}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Search,\n    layout: false,\n    component: `@/pages${Routes.Search}`,\n  },\n  {\n    path: Routes.Agents,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Agents,\n        component: `@/pages${Routes.Agents}`,\n      },\n    ],\n  },\n  {\n    path: `${Routes.Agent}/:id`,\n    layout: false,\n    component: `@/pages${Routes.Agent}`,\n  },\n  {\n    path: Routes.AgentTemplates,\n    layout: false,\n    component: `@/pages${Routes.Agents}${Routes.AgentTemplates}`,\n  },\n  {\n    path: Routes.Files,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Files,\n        component: `@/pages${Routes.Files}`,\n      },\n    ],\n  },\n  {\n    path: Routes.DatasetBase,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [{ path: Routes.DatasetBase, redirect: Routes.Dataset }],\n  },\n  {\n    path: Routes.DatasetBase,\n    layout: false,\n    component: `@/pages${Routes.DatasetBase}`,\n    routes: [\n      {\n        path: `${Routes.Dataset}/:id`,\n        component: `@/pages${Routes.Dataset}`,\n      },\n      {\n        path: `${Routes.DatasetBase}${Routes.DatasetSetting}/:id`,\n        component: `@/pages${Routes.DatasetBase}${Routes.DatasetSetting}`,\n      },\n      {\n        path: `${Routes.DatasetBase}${Routes.DatasetTesting}/:id`,\n        component: `@/pages${Routes.DatasetBase}${Routes.DatasetTesting}`,\n      },\n    ],\n  },\n  {\n    path: `${Routes.ParsedResult}/chunks`,\n    layout: false,\n    component: `@/pages${Routes.Chunk}/parsed-result/add-knowledge/components/knowledge-chunk`,\n  },\n  {\n    path: Routes.Chunk,\n    layout: false,\n    routes: [\n      {\n        path: Routes.Chunk,\n        component: `@/pages${Routes.Chunk}`,\n        routes: [\n          // {\n          //   path: `${Routes.ParsedResult}/:id`,\n          //   component: `@/pages${Routes.Chunk}/parsed-result`,\n          // },\n          {\n            path: `${Routes.ChunkResult}/:id`,\n            component: `@/pages${Routes.Chunk}/chunk-result`,\n          },\n          {\n            path: `${Routes.ResultView}/:id`,\n            component: `@/pages${Routes.Chunk}/result-view`,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: Routes.Chunk,\n    layout: false,\n    component: `@/pages${Routes.Chunk}`,\n  },\n  {\n    path: Routes.ProfileSetting,\n    layout: false,\n    component: `@/pages${Routes.ProfileSetting}`,\n    routes: [\n      {\n        path: Routes.ProfileSetting,\n        redirect: `${Routes.ProfileSetting}/profile`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/profile`,\n        component: `@/pages${Routes.ProfileSetting}/profile`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/team`,\n        component: `@/pages${Routes.ProfileSetting}/team`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/plan`,\n        component: `@/pages${Routes.ProfileSetting}/plan`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/model`,\n        component: `@/pages${Routes.ProfileSetting}/model`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/prompt`,\n        component: `@/pages${Routes.ProfileSetting}/prompt`,\n      },\n    ],\n  },\n];\n\nexport default routes;\n","import { IRenameTag } from '@/interfaces/database/knowledge';\nimport {\n  IFetchDocumentListRequestBody,\n  IFetchKnowledgeListRequestBody,\n  IFetchKnowledgeListRequestParams,\n} from '@/interfaces/request/knowledge';\nimport api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request, { post } from '@/utils/request';\n\nconst {\n  create_kb,\n  update_kb,\n  rm_kb,\n  get_kb_detail,\n  kb_list,\n  get_document_list,\n  document_change_status,\n  document_rm,\n  document_delete,\n  document_create,\n  document_change_parser,\n  document_thumbnails,\n  chunk_list,\n  create_chunk,\n  set_chunk,\n  get_chunk,\n  switch_chunk,\n  rm_chunk,\n  retrieval_test,\n  document_rename,\n  document_run,\n  document_upload,\n  web_crawl,\n  knowledge_graph,\n  document_infos,\n  upload_and_parse,\n  listTagByKnowledgeIds,\n  setMeta,\n} = api;\n\nconst methods = {\n  // 知识库管理\n  createKb: {\n    url: create_kb,\n    method: 'post',\n  },\n  updateKb: {\n    url: update_kb,\n    method: 'post',\n  },\n  rmKb: {\n    url: rm_kb,\n    method: 'post',\n  },\n  get_kb_detail: {\n    url: get_kb_detail,\n    method: 'get',\n  },\n  getList: {\n    url: kb_list,\n    method: 'post',\n  },\n  // document manager\n  get_document_list: {\n    url: get_document_list,\n    method: 'get',\n  },\n  document_change_status: {\n    url: document_change_status,\n    method: 'post',\n  },\n  document_rm: {\n    url: document_rm,\n    method: 'post',\n  },\n  document_rename: {\n    url: document_rename,\n    method: 'post',\n  },\n  document_create: {\n    url: document_create,\n    method: 'post',\n  },\n  document_run: {\n    url: document_run,\n    method: 'post',\n  },\n  document_change_parser: {\n    url: document_change_parser,\n    method: 'post',\n  },\n  document_thumbnails: {\n    url: document_thumbnails,\n    method: 'get',\n  },\n  document_upload: {\n    url: document_upload,\n    method: 'post',\n  },\n  web_crawl: {\n    url: web_crawl,\n    method: 'post',\n  },\n  document_infos: {\n    url: document_infos,\n    method: 'post',\n  },\n  setMeta: {\n    url: setMeta,\n    method: 'post',\n  },\n  // chunk管理\n  chunk_list: {\n    url: chunk_list,\n    method: 'post',\n  },\n  create_chunk: {\n    url: create_chunk,\n    method: 'post',\n  },\n  set_chunk: {\n    url: set_chunk,\n    method: 'post',\n  },\n  get_chunk: {\n    url: get_chunk,\n    method: 'get',\n  },\n  switch_chunk: {\n    url: switch_chunk,\n    method: 'post',\n  },\n  rm_chunk: {\n    url: rm_chunk,\n    method: 'post',\n  },\n  retrieval_test: {\n    url: retrieval_test,\n    method: 'post',\n  },\n  knowledge_graph: {\n    url: knowledge_graph,\n    method: 'get',\n  },\n  document_delete: {\n    url: document_delete,\n    method: 'delete',\n  },\n  upload_and_parse: {\n    url: upload_and_parse,\n    method: 'post',\n  },\n  listTagByKnowledgeIds: {\n    url: listTagByKnowledgeIds,\n    method: 'get',\n  },\n};\n\nconst kbService = registerServer<keyof typeof methods>(methods, request);\n\nexport const listTag = (knowledgeId: string) =>\n  request.get(api.listTag(knowledgeId));\n\nexport const removeTag = (knowledgeId: string, tags: string[]) =>\n  post(api.removeTag(knowledgeId), { tags });\n\nexport const renameTag = (\n  knowledgeId: string,\n  { fromTag, toTag }: IRenameTag,\n) => post(api.renameTag(knowledgeId), { fromTag, toTag });\n\nexport function getKnowledgeGraph(knowledgeId: string) {\n  return request.get(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport function deleteKnowledgeGraph(knowledgeId: string) {\n  return request.delete(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport const listDataset = (\n  params?: IFetchKnowledgeListRequestParams,\n  body?: IFetchKnowledgeListRequestBody,\n) => request.post(api.kb_list, { data: body || {}, params });\n\nexport const listDocument = (\n  params?: IFetchKnowledgeListRequestParams,\n  body?: IFetchDocumentListRequestBody,\n) => request.post(api.get_document_list, { data: body || {}, params });\n\nexport default kbService;\n","import { DocumentParserType } from '@/constants/knowledge';\n\nexport function isKnowledgeGraphParser(parserId: DocumentParserType) {\n  return parserId === DocumentParserType.KnowledgeGraph;\n}\n\nexport function isNaiveParser(parserId: DocumentParserType) {\n  return parserId === DocumentParserType.Naive;\n}\n\nexport type FilterType = {\n  id: string;\n  label: string;\n  count: number;\n};\n\nexport function groupListByType<T extends Record<string, any>>(\n  list: T[],\n  idField: string,\n  labelField: string,\n) {\n  const fileTypeList: FilterType[] = [];\n  list.forEach((x) => {\n    const item = fileTypeList.find((y) => y.id === x[idField]);\n    if (!item) {\n      fileTypeList.push({ id: x[idField], label: x[labelField], count: 1 });\n    } else {\n      item.count += 1;\n    }\n  });\n\n  return fileTypeList;\n}\n"],"names":["BulkOperateBar","_ref","list","count","isDeleteItem","useCallback","id","_jsx","Card","className","children","_jsxs","CardContent","BrushCleaning","Separator","orientation","map","x","cn","_defineProperty","ConfirmDeleteDialog","hidden","onOk","onClick","Button","variant","icon","label","_excluded","_excluded2","_excluded3","Tabs","TabsPrimitive","TabsList","React","ref","props","_objectWithoutProperties","_objectSpread","displayName","TabsTrigger","_ref2","TabsContent","_ref3","UploaderTabs","setFiles","t","useTranslation","defaultValue","value","FileUploader","maxFileCount","maxSize","onValueChange","accept","FileUploadDialog","hideModal","loading","_useState","useState","_useState2","_slicedToArray","files","handleOk","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","DialogFooter","ButtonLoading","type","ScrollBar","_ref$orientation","ScrollAreaPrimitive","ScrollArea","useCallbackRef","callback","callbackRef","current","_callbackRef$current","_len","arguments","length","args","Array","_key","call","apply","concat","useControllableState","prop","defaultProp","_ref2$onChange","onChange","_useUncontrolledState","uncontrolledState","prevValueRef","handleChange","useUncontrolledState","_useUncontrolledState2","uncontrolledProp","setUncontrolledProp","isControlled","undefined","nextValue","isFileWithPreview","file","preview","FilePreview","startsWith","src","alt","name","width","height","FileText","FileCard","progress","onRemove","formatBytes","size","Progress","X","_files$length2","valueProp","onUpload","progresses","_props$accept","_props$maxSize","_props$maxFileCount","_props$multiple","multiple","_props$disabled","disabled","dropzoneProps","_useControllableState","_useControllableState2","onDrop","acceptedFiles","rejectedFiles","_files$length","toast","error","newFiles","Object","assign","URL","createObjectURL","updatedFiles","_toConsumableArray","forEach","target","promise","success","revokeObjectURL","isDisabled","Dropzone","maxFiles","_ref4","getRootProps","getInputProps","isDragActive","Upload","Infinity","index","filter","_","i","CardHeader","CardTitle","CardDescription","_excluded4","_ref5","_excluded5","_ref6","_excluded6","HoverCard","HoverCardPrimitive","HoverCardTrigger","HoverCardContent","_ref$align","align","_ref$sideOffset","sideOffset","ProgressPrimitive","style","transform","QueryStringMap","useNavigatePage","navigate","useNavigate","_useSearchParams","useSearchParams","searchParams","useParams","navigateToDatasetList","Routes","Datasets","navigateToDataset","Dataset","navigateToHome","Home","navigateToProfile","ProfileSetting","navigateToChatList","Chats","navigateToChat","Chat","navigateToAgentList","Agents","navigateToAgent","Agent","navigateToAgentTemplates","AgentTemplates","navigateToSearchList","Searches","navigateToSearch","Search","navigateToChunkParsedResult","knowledgeId","ParsedResult","getQueryString","queryStringKey","allQueryString","KnowledgeId","get","navigateToChunk","route","navigateToFiles","folderId","Files","useRowSelection","rowSelection","setRowSelection","clearRowSelection","selectedCount","useMemo","keys","rowSelectionIsEmpty","isEmpty","useSelectedIds","selectedIds","indexes","idx","some","y","Number","DocumentApiAction","UploadDocument","FetchDocumentList","UpdateDocumentStatus","RunDocumentByIds","RemoveDocument","SaveDocumentName","SetDocumentParser","SetDocumentMeta","FetchAllDocumentList","CreateDocument","useFetchDocumentList","_queryFn","useGetKnowledgeSearchParams","_useHandleSearchChang","useHandleSearchChange","searchString","handleInputChange","_useGetPaginationWith","useGetPaginationWithRouter","pagination","setPagination","debouncedSearchString","useDebounce","wait","_useHandleFilterSubmi","useHandleFilterSubmit","filterValue","handleFilterSubmit","_useQuery","useQuery","queryKey","initialData","docs","total","enabled","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","ret","wrap","_context2","prev","next","listDocument","kb_id","keywords","page_size","pageSize","page","types","run_status","run","sent","data","code","abrupt","stop","isFetching","onInputChange","e","documents","useSetDocumentStatus","_mutationFn2","queryClient","useQueryClient","_useMutation2","useMutation","mutationKey","mutationFn","_callee4","status","documentId","_yield$kbService$docu","_context4","kbService","document_change_status","doc_id","message","i18n","invalidateQueries","_x2","isPending","setDocumentStatus","mutateAsync","useRunDocument","_mutationFn3","_useMutation3","_callee5","documentIds","shouldDelete","_context5","document_run","doc_ids","delete","_x3","runDocumentByIds","useRemoveDocument","_mutationFn4","_useMutation4","_callee6","_yield$kbService$docu2","_context6","document_rm","_x4","removeDocument","DynamicPageRange","form","useFormContext","_useFieldArray","useFieldArray","control","fields","remove","append","FormLabel","tooltip","field","typeField","FormField","render","FormItem","FormDescription","FormControl","Input","placeholder","FormMessage","from","to","Plus","ParserListMap","Map","getParserList","values","parserList","useFetchParserListOnMount","documentExtension","useSelectParserList","nextParserList","key","find","hideAutoKeywords","useShowAutoKeywords","showAutoKeywords","selectedTag","every","useDefaultParserValues","task_page_size","layout_recognize","DocumentType","DeepDOC","chunk_token_num","delimiter","auto_keywords","auto_questions","html4excel","raptor","use_raptor","prompt","max_token","threshold","max_cluster","random_seed","graphrag","use_graphrag","entity_types","pages","FormId","hidePagesChunkMethods","DocumentParserType","Qa","Table","Picture","Resume","One","KnowledgeGraph","ChunkMethodDialog","_knowledgeDetails$par2","parserId","visible","parserConfig","knowledgeDetails","useFetchKnowledgeBaseConfiguration","useGraphRag","_knowledgeDetails$par","parser_config","defaultParserValues","fillDefaultParserValue","entries","reduce","pre","useFillDefaultValueOnMount","FormSchema","z","object","parser_id","string","min","trim","coerce","number","optional","array","useForm","resolver","zodResolver","defaultValues","layoutRecognize","useWatch","isPdf","showPages","showOne","showMaxTokenNumber","Naive","showEntityTypes","showExcelToHtml","_onSubmit","_callee","_data$parser_config$p","_data$parser_config","nextData","_context","console","log","useEffect","_parserConfig$pages$m","_parserConfig$pages","reset","omit","Form","onSubmit","handleSubmit","_x","FormContainer","RAGFlowSelect","options","max","show","LayoutRecognizeFormField","_Fragment","MaxTokenNumberFormField","DelimiterFormField","AutoKeywordsFormField","AutoQuestionsFormField","ExcelToHtmlFormField","showRaptorParseConfiguration","RaptorFormFields","showGraphRagItems","UseGraphRagFormField","EntityTypesFormField","SetMetaDialog","initialMetaData","meta","refine","JSON","parse","setValue","stringify","TagRenameId","dangerouslySetInnerHTML","__html","DOMPurify","Editor","defaultLanguage","theme","loader","config","paths","vs","useChangeDocumentParser","_useSetDocumentParser","_mutationFn6","_useMutation6","_callee8","_yield$kbService$docu4","_context8","document_change_parser","_x6","setDocumentParser","useSetDocumentParser","record","setRecord","_useSetModalState","useSetModalState","changeParserVisible","hideChangeParserModal","showChangeParserModal","showModal","onChangeParserOk","parserConfigInfo","handleShowChangeParserModal","row","changeParserLoading","changeParserRecord","RunningStatusMap","RunningStatus","UNSTART","color","RUNNING","CANCEL","DONE","FAIL","isParserRunning","text","Fields","FunctionMap","formatFileSize","create_time","formatDate","update_time","DatasetActionCell","showRenameModal","isRunning","isVirtualDocument","Virtual","onDownloadDocument","downloadDocument","filename","handleRemove","handleRename","FolderPen","ScrollText","ArrowDownToLine","Trash2","Dot","runningStatus","backgroundColor","PopoverContent","nextText","items","process_begin_at","process_duation","toFixed","progress_msg","replace","reactStringReplace","match","ParsingCard","asChild","useHandleRunDocumentByIds","_useRunDocument","currentId","setCurrentId","isLoading","handleRunDocumentByIds","_args","t0","IconMap","Play","CircleX","RefreshCw","ParsingStatusCell","showSetMetaModal","chunk_num","operationIcon","p","isZeroChunk","handleOperationIconClick","handleShowSetMetaModal","DropdownMenu","DropdownMenuTrigger","DropdownMenuContent","DropdownMenuItem","title","chunkNum","onCancel","useRenameDocument","_mutationFn5","_useMutation5","_useSaveDocumentName","_callee7","_yield$kbService$docu3","_context7","document_rename","_x5","saveName","renameVisible","hideRenameModal","onRenameOk","handleShow","renameLoading","initialName","useSaveMeta","_useSetDocumentMeta","_mutationFn7","_useMutation7","_callee9","params","_yield$kbService$setM","_data","_context9","setMeta","_x7","setDocumentMeta","useSetDocumentMeta","setMetaVisible","hideSetMetaModal","onSetMetaModalOk","setMetaLoading","metaRecord","DatasetTable","_pagination$total","_table$getRowModel$ro","_React$useState","_React$useState2","sorting","setSorting","_React$useState3","_React$useState4","columnFilters","setColumnFilters","_React$useState5","_React$useState6","columnVisibility","setColumnVisibility","_useChangeDocumentPar","_useRenameDocument","_useSaveMeta","columns","keyPrefix","header","table","Checkbox","checked","getIsAllPageRowsSelected","getIsSomePageRowsSelected","onCheckedChange","toggleAllPageRowsSelected","cell","getIsSelected","toggleSelected","enableSorting","enableHiding","accessorKey","column","toggleSorting","getIsSorted","ArrowUpDown","cellClassName","getValue","Tooltip","TooltipTrigger","original","FileIcon","TooltipContent","_ref7","_ref8","Switch","_ref9","_ref10","_ref11","useDatasetTableColumns","currentPagination","pageIndex","useReactTable","onSortingChange","onColumnFiltersChange","getCoreRowModel","getPaginationRowModel","getSortedRowModel","getFilteredRowModel","onColumnVisibilityChange","onRowSelectionChange","manualPagination","state","rowCount","rootClassName","TableHeader","getHeaderGroups","headerGroup","TableRow","headers","TableHead","isPlaceholder","flexRender","columnDef","getContext","TableBody","getRowModel","rows","getVisibleCells","_cell$column$columnDe","TableCell","colSpan","RAGFlowPagination","pick","getExtension","RenameDialog","meta_fields","useCreateEmptyDocument","_useCreateDocument","_mutationFn8","_useSetPaginationPara","useSetPaginationParams","setPaginationParams","_useMutation8","_callee10","_yield$kbService$docu5","_context10","document_create","_x8","createDocument","useCreateDocument","createVisible","hideCreateModal","showCreateModal","onCreateOk","createLoading","useSelectDatasetFilters","_queryFn2","_useQuery2","_useFetchAllDocumentL","refetchInterval","_callee3","_context3","fileTypes","groupListByType","fileStatus","filters","useHandleUploadDocument","documentUploadVisible","hideDocumentUploadModal","showDocumentUploadModal","_useUploadNextDocumen","_mutationFn","_useMutation","fileList","formData","FormData","document_upload","warn","uploadDocument","useUploadNextDocument","onDocumentUploadOk","getUnSupportedFilesCount","documentUploadLoading","_useHandleUploadDocum","_useFetchDocumentList","_useCreateEmptyDocume","_useRowSelection","_useBulkOperateDatase","_onClick","selectedRowKeys","runDocument","nonVirtualKeys","handleRunClick","handleCancelClick","onChangeStatus","handleEnableClick","handleDisableClick","handleDelete","deletedKeys","CircleCheck","Ban","useBulkOperateDataset","ListFilterBar","onSearchChange","leftPanel","DropdownMenuSeparator","DatasetBase","DatasetSetting","DatasetTesting","Chunk","ChunkResult","ResultView","create_kb","api","update_kb","rm_kb","get_kb_detail","kb_list","get_document_list","document_delete","document_thumbnails","chunk_list","create_chunk","set_chunk","get_chunk","switch_chunk","rm_chunk","retrieval_test","web_crawl","knowledge_graph","document_infos","upload_and_parse","listTagByKnowledgeIds","methods","createKb","url","method","updateKb","rmKb","getList","registerServer","request","listTag","removeTag","tags","post","renameTag","fromTag","toTag","getKnowledgeGraph","deleteKnowledgeGraph","listDataset","body","idField","labelField","fileTypeList","item","push"],"sourceRoot":""}