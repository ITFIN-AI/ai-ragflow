{"version":3,"file":"6979.45e4ee8c.async.js","mappings":"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","sources":["webpack:///./node_modules/lucide-react/dist/esm/icons/arrow-down-to-line.js","webpack:///./node_modules/lucide-react/dist/esm/icons/brush-cleaning.js","webpack:///./node_modules/lucide-react/dist/esm/icons/chevron-left.js","webpack:///./node_modules/lucide-react/dist/esm/icons/ellipsis.js","webpack:///./node_modules/lucide-react/dist/esm/icons/folder-pen.js","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/primitive/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/react-context/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/react-compose-refs/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/react-slot/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/react-primitive/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/react-arrow/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/react-popper/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/react-use-size/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/react-portal/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/node_modules/@radix-ui/react-presence/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-hover-card/dist/index.mjs"],"sourcesContent":["/**\n * @license lucide-react v0.508.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 17V3\", key: \"1cwfxf\" }],\n  [\"path\", { d: \"m6 11 6 6 6-6\", key: \"12ii2o\" }],\n  [\"path\", { d: \"M19 21H5\", key: \"150jfl\" }]\n];\nconst ArrowDownToLine = createLucideIcon(\"arrow-down-to-line\", __iconNode);\n\nexport { __iconNode, ArrowDownToLine as default };\n//# sourceMappingURL=arrow-down-to-line.js.map\n","/**\n * @license lucide-react v0.508.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"m16 22-1-4\", key: \"1ow2iv\" }],\n  [\n    \"path\",\n    {\n      d: \"M19 13.99a1 1 0 0 0 1-1V12a2 2 0 0 0-2-2h-3a1 1 0 0 1-1-1V4a2 2 0 0 0-4 0v5a1 1 0 0 1-1 1H6a2 2 0 0 0-2 2v.99a1 1 0 0 0 1 1\",\n      key: \"iw8jdu\"\n    }\n  ],\n  [\"path\", { d: \"M5 14h14l1.973 6.767A1 1 0 0 1 20 22H4a1 1 0 0 1-.973-1.233z\", key: \"1soew8\" }],\n  [\"path\", { d: \"m8 22 1-4\", key: \"s3unb\" }]\n];\nconst BrushCleaning = createLucideIcon(\"brush-cleaning\", __iconNode);\n\nexport { __iconNode, BrushCleaning as default };\n//# sourceMappingURL=brush-cleaning.js.map\n","/**\n * @license lucide-react v0.508.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"m15 18-6-6 6-6\", key: \"1wnfg3\" }]];\nconst ChevronLeft = createLucideIcon(\"chevron-left\", __iconNode);\n\nexport { __iconNode, ChevronLeft as default };\n//# sourceMappingURL=chevron-left.js.map\n","/**\n * @license lucide-react v0.508.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"1\", key: \"41hilf\" }],\n  [\"circle\", { cx: \"19\", cy: \"12\", r: \"1\", key: \"1wjl8i\" }],\n  [\"circle\", { cx: \"5\", cy: \"12\", r: \"1\", key: \"1pcz8c\" }]\n];\nconst Ellipsis = createLucideIcon(\"ellipsis\", __iconNode);\n\nexport { __iconNode, Ellipsis as default };\n//# sourceMappingURL=ellipsis.js.map\n","/**\n * @license lucide-react v0.508.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M2 11.5V5a2 2 0 0 1 2-2h3.9c.7 0 1.3.3 1.7.9l.8 1.2c.4.6 1 .9 1.7.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-9.5\",\n      key: \"a8xqs0\"\n    }\n  ],\n  [\n    \"path\",\n    {\n      d: \"M11.378 13.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z\",\n      key: \"1saktj\"\n    }\n  ]\n];\nconst FolderPen = createLucideIcon(\"folder-pen\", __iconNode);\n\nexport { __iconNode, FolderPen as default };\n//# sourceMappingURL=folder-pen.js.map\n","// packages/core/primitive/src/primitive.tsx\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\nexport {\n  composeEventHandlers\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/context/src/create-context.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createContext2(rootComponentName, defaultContext) {\n  const Context = React.createContext(defaultContext);\n  const Provider = (props) => {\n    const { children, ...context } = props;\n    const value = React.useMemo(() => context, Object.values(context));\n    return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n  };\n  Provider.displayName = rootComponentName + \"Provider\";\n  function useContext2(consumerName) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== void 0) return defaultContext;\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n  return [Provider, useContext2];\n}\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\n  let defaultContexts = [];\n  function createContext3(rootComponentName, defaultContext) {\n    const BaseContext = React.createContext(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n    const Provider = (props) => {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const value = React.useMemo(() => context, Object.values(context));\n      return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n    };\n    Provider.displayName = rootComponentName + \"Provider\";\n    function useContext2(consumerName, scope) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== void 0) return defaultContext;\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n    return [Provider, useContext2];\n  }\n  const createScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\n}\nfunction composeContextScopes(...scopes) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  const createScope = () => {\n    const scopeHooks = scopes.map((createScope2) => ({\n      useScope: createScope2(),\n      scopeName: createScope2.scopeName\n    }));\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes2, ...currentScope };\n      }, {});\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\nexport {\n  createContext2 as createContext,\n  createContextScope\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-layout-effect/src/use-layout-effect.tsx\nimport * as React from \"react\";\nvar useLayoutEffect2 = globalThis?.document ? React.useLayoutEffect : () => {\n};\nexport {\n  useLayoutEffect2 as useLayoutEffect\n};\n//# sourceMappingURL=index.mjs.map\n","// src/use-controllable-state.tsx\nimport * as React from \"react\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nvar useInsertionEffect = React[\" useInsertionEffect \".trim().toString()] || useLayoutEffect;\nfunction useControllableState({\n  prop,\n  defaultProp,\n  onChange = () => {\n  },\n  caller\n}) {\n  const [uncontrolledProp, setUncontrolledProp, onChangeRef] = useUncontrolledState({\n    defaultProp,\n    onChange\n  });\n  const isControlled = prop !== void 0;\n  const value = isControlled ? prop : uncontrolledProp;\n  if (true) {\n    const isControlledRef = React.useRef(prop !== void 0);\n    React.useEffect(() => {\n      const wasControlled = isControlledRef.current;\n      if (wasControlled !== isControlled) {\n        const from = wasControlled ? \"controlled\" : \"uncontrolled\";\n        const to = isControlled ? \"controlled\" : \"uncontrolled\";\n        console.warn(\n          `${caller} is changing from ${from} to ${to}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`\n        );\n      }\n      isControlledRef.current = isControlled;\n    }, [isControlled, caller]);\n  }\n  const setValue = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const value2 = isFunction(nextValue) ? nextValue(prop) : nextValue;\n        if (value2 !== prop) {\n          onChangeRef.current?.(value2);\n        }\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, onChangeRef]\n  );\n  return [value, setValue];\n}\nfunction useUncontrolledState({\n  defaultProp,\n  onChange\n}) {\n  const [value, setValue] = React.useState(defaultProp);\n  const prevValueRef = React.useRef(value);\n  const onChangeRef = React.useRef(onChange);\n  useInsertionEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      onChangeRef.current?.(value);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef]);\n  return [value, setValue, onChangeRef];\n}\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\n// src/use-controllable-state-reducer.tsx\nimport * as React2 from \"react\";\nimport { useEffectEvent } from \"@radix-ui/react-use-effect-event\";\nvar SYNC_STATE = Symbol(\"RADIX:SYNC_STATE\");\nfunction useControllableStateReducer(reducer, userArgs, initialArg, init) {\n  const { prop: controlledState, defaultProp, onChange: onChangeProp, caller } = userArgs;\n  const isControlled = controlledState !== void 0;\n  const onChange = useEffectEvent(onChangeProp);\n  if (true) {\n    const isControlledRef = React2.useRef(controlledState !== void 0);\n    React2.useEffect(() => {\n      const wasControlled = isControlledRef.current;\n      if (wasControlled !== isControlled) {\n        const from = wasControlled ? \"controlled\" : \"uncontrolled\";\n        const to = isControlled ? \"controlled\" : \"uncontrolled\";\n        console.warn(\n          `${caller} is changing from ${from} to ${to}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`\n        );\n      }\n      isControlledRef.current = isControlled;\n    }, [isControlled, caller]);\n  }\n  const args = [{ ...initialArg, state: defaultProp }];\n  if (init) {\n    args.push(init);\n  }\n  const [internalState, dispatch] = React2.useReducer(\n    (state2, action) => {\n      if (action.type === SYNC_STATE) {\n        return { ...state2, state: action.state };\n      }\n      const next = reducer(state2, action);\n      if (isControlled && !Object.is(next.state, state2.state)) {\n        onChange(next.state);\n      }\n      return next;\n    },\n    ...args\n  );\n  const uncontrolledState = internalState.state;\n  const prevValueRef = React2.useRef(uncontrolledState);\n  React2.useEffect(() => {\n    if (prevValueRef.current !== uncontrolledState) {\n      prevValueRef.current = uncontrolledState;\n      if (!isControlled) {\n        onChange(uncontrolledState);\n      }\n    }\n  }, [onChange, uncontrolledState, prevValueRef, isControlled]);\n  const state = React2.useMemo(() => {\n    const isControlled2 = controlledState !== void 0;\n    if (isControlled2) {\n      return { ...internalState, state: controlledState };\n    }\n    return internalState;\n  }, [internalState, controlledState]);\n  React2.useEffect(() => {\n    if (isControlled && !Object.is(controlledState, internalState.state)) {\n      dispatch({ type: SYNC_STATE, state: controlledState });\n    }\n  }, [controlledState, internalState.state, isControlled]);\n  return [state, dispatch];\n}\nexport {\n  useControllableState,\n  useControllableStateReducer\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/compose-refs/src/compose-refs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { computePosition, arrow as arrow$2, offset as offset$1, shift as shift$1, limitShift as limitShift$1, flip as flip$1, size as size$1, autoPlacement as autoPlacement$1, hide as hide$1, inline as inline$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n","// packages/react/slot/src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","// src/primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"select\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Slot = createSlot(`Primitive.${node}`);\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ jsx(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\nexport {\n  Primitive,\n  Root,\n  dispatchDiscreteCustomEvent\n};\n//# sourceMappingURL=index.mjs.map\n","// src/arrow.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"Arrow\";\nvar Arrow = React.forwardRef((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return /* @__PURE__ */ jsx(\n    Primitive.svg,\n    {\n      ...arrowProps,\n      ref: forwardedRef,\n      width,\n      height,\n      viewBox: \"0 0 30 10\",\n      preserveAspectRatio: \"none\",\n      children: props.asChild ? children : /* @__PURE__ */ jsx(\"polygon\", { points: \"0,0 30,0 15,10\" })\n    }\n  );\n});\nArrow.displayName = NAME;\nvar Root = Arrow;\nexport {\n  Arrow,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/popper.tsx\nimport * as React from \"react\";\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size\n} from \"@floating-ui/react-dom\";\nimport * as ArrowPrimitive from \"@radix-ui/react-arrow\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SIDE_OPTIONS = [\"top\", \"right\", \"bottom\", \"left\"];\nvar ALIGN_OPTIONS = [\"start\", \"center\", \"end\"];\nvar POPPER_NAME = \"Popper\";\nvar [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\nvar [PopperProvider, usePopperContext] = createPopperContext(POPPER_NAME);\nvar Popper = (props) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState(null);\n  return /* @__PURE__ */ jsx(PopperProvider, { scope: __scopePopper, anchor, onAnchorChange: setAnchor, children });\n};\nPopper.displayName = POPPER_NAME;\nvar ANCHOR_NAME = \"PopperAnchor\";\nvar PopperAnchor = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    React.useEffect(() => {\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n    return virtualRef ? null : /* @__PURE__ */ jsx(Primitive.div, { ...anchorProps, ref: composedRefs });\n  }\n);\nPopperAnchor.displayName = ANCHOR_NAME;\nvar CONTENT_NAME = \"PopperContent\";\nvar [PopperContentProvider, useContentContext] = createPopperContext(CONTENT_NAME);\nvar PopperContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = \"bottom\",\n      sideOffset = 0,\n      align = \"center\",\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = \"partial\",\n      hideWhenDetached = false,\n      updatePositionStrategy = \"optimized\",\n      onPlaced,\n      ...contentProps\n    } = props;\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n    const [content, setContent] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [arrow, setArrow] = React.useState(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n    const desiredPlacement = side + (align !== \"center\" ? \"-\" + align : \"\");\n    const collisionPadding = typeof collisionPaddingProp === \"number\" ? collisionPaddingProp : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries\n    };\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: \"fixed\",\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === \"always\"\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions && shift({\n          mainAxis: true,\n          crossAxis: false,\n          limiter: sticky === \"partial\" ? limitShift() : void 0,\n          ...detectOverflowOptions\n        }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty(\"--radix-popper-available-width\", `${availableWidth}px`);\n            contentStyle.setProperty(\"--radix-popper-available-height\", `${availableHeight}px`);\n            contentStyle.setProperty(\"--radix-popper-anchor-width\", `${anchorWidth}px`);\n            contentStyle.setProperty(\"--radix-popper-anchor-height\", `${anchorHeight}px`);\n          }\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: \"referenceHidden\", ...detectOverflowOptions })\n      ]\n    });\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const [contentZIndex, setContentZIndex] = React.useState();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n    return /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        ref: refs.setFloating,\n        \"data-radix-popper-content-wrapper\": \"\",\n        style: {\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : \"translate(0, -200%)\",\n          // keep off the page when measuring\n          minWidth: \"max-content\",\n          zIndex: contentZIndex,\n          [\"--radix-popper-transform-origin\"]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y\n          ].join(\" \"),\n          // hide the content if using the hide middleware and should be hidden\n          // set visibility to hidden and disable pointer events so the UI behaves\n          // as if the PopperContent isn't there at all\n          ...middlewareData.hide?.referenceHidden && {\n            visibility: \"hidden\",\n            pointerEvents: \"none\"\n          }\n        },\n        dir: props.dir,\n        children: /* @__PURE__ */ jsx(\n          PopperContentProvider,\n          {\n            scope: __scopePopper,\n            placedSide,\n            onArrowChange: setArrow,\n            arrowX,\n            arrowY,\n            shouldHideArrow: cannotCenterArrow,\n            children: /* @__PURE__ */ jsx(\n              Primitive.div,\n              {\n                \"data-side\": placedSide,\n                \"data-align\": placedAlign,\n                ...contentProps,\n                ref: composedRefs,\n                style: {\n                  ...contentProps.style,\n                  // if the PopperContent hasn't been placed yet (not all measurements done)\n                  // we prevent animations so that users's animation don't kick in too early referring wrong sides\n                  animation: !isPositioned ? \"none\" : void 0\n                }\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nPopperContent.displayName = CONTENT_NAME;\nvar ARROW_NAME = \"PopperArrow\";\nvar OPPOSITE_SIDE = {\n  top: \"bottom\",\n  right: \"left\",\n  bottom: \"top\",\n  left: \"right\"\n};\nvar PopperArrow = React.forwardRef(function PopperArrow2(props, forwardedRef) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    /* @__PURE__ */ jsx(\n      \"span\",\n      {\n        ref: contentContext.onArrowChange,\n        style: {\n          position: \"absolute\",\n          left: contentContext.arrowX,\n          top: contentContext.arrowY,\n          [baseSide]: 0,\n          transformOrigin: {\n            top: \"\",\n            right: \"0 0\",\n            bottom: \"center 0\",\n            left: \"100% 0\"\n          }[contentContext.placedSide],\n          transform: {\n            top: \"translateY(100%)\",\n            right: \"translateY(50%) rotate(90deg) translateX(-50%)\",\n            bottom: `rotate(180deg)`,\n            left: \"translateY(50%) rotate(-90deg) translateX(50%)\"\n          }[contentContext.placedSide],\n          visibility: contentContext.shouldHideArrow ? \"hidden\" : void 0\n        },\n        children: /* @__PURE__ */ jsx(\n          ArrowPrimitive.Root,\n          {\n            ...arrowProps,\n            ref: forwardedRef,\n            style: {\n              ...arrowProps.style,\n              // ensures the element can be measured correctly (mostly for if SVG)\n              display: \"block\"\n            }\n          }\n        )\n      }\n    )\n  );\n});\nPopperArrow.displayName = ARROW_NAME;\nfunction isNotNull(value) {\n  return value !== null;\n}\nvar transformOrigin = (options) => ({\n  name: \"transformOrigin\",\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: \"0%\", center: \"50%\", end: \"100%\" }[placedAlign];\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n    let x = \"\";\n    let y = \"\";\n    if (placedSide === \"bottom\") {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === \"top\") {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === \"right\") {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === \"left\") {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  }\n});\nfunction getSideAndAlignFromPlacement(placement) {\n  const [side, align = \"center\"] = placement.split(\"-\");\n  return [side, align];\n}\nvar Root2 = Popper;\nvar Anchor = PopperAnchor;\nvar Content = PopperContent;\nvar Arrow = PopperArrow;\nexport {\n  ALIGN_OPTIONS,\n  Anchor,\n  Arrow,\n  Content,\n  Popper,\n  PopperAnchor,\n  PopperArrow,\n  PopperContent,\n  Root2 as Root,\n  SIDE_OPTIONS,\n  createPopperScope\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-size/src/use-size.tsx\nimport * as React from \"react\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nfunction useSize(element) {\n  const [size, setSize] = React.useState(void 0);\n  useLayoutEffect(() => {\n    if (element) {\n      setSize({ width: element.offsetWidth, height: element.offsetHeight });\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries)) {\n          return;\n        }\n        if (!entries.length) {\n          return;\n        }\n        const entry = entries[0];\n        let width;\n        let height;\n        if (\"borderBoxSize\" in entry) {\n          const borderSizeEntry = entry[\"borderBoxSize\"];\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width = borderSize[\"inlineSize\"];\n          height = borderSize[\"blockSize\"];\n        } else {\n          width = element.offsetWidth;\n          height = element.offsetHeight;\n        }\n        setSize({ width, height });\n      });\n      resizeObserver.observe(element, { box: \"border-box\" });\n      return () => resizeObserver.unobserve(element);\n    } else {\n      setSize(void 0);\n    }\n  }, [element]);\n  return size;\n}\nexport {\n  useSize\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-callback-ref/src/use-callback-ref.tsx\nimport * as React from \"react\";\nfunction useCallbackRef(callback) {\n  const callbackRef = React.useRef(callback);\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return React.useMemo(() => (...args) => callbackRef.current?.(...args), []);\n}\nexport {\n  useCallbackRef\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/portal.tsx\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PORTAL_NAME = \"Portal\";\nvar Portal = React.forwardRef((props, forwardedRef) => {\n  const { container: containerProp, ...portalProps } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || mounted && globalThis?.document?.body;\n  return container ? ReactDOM.createPortal(/* @__PURE__ */ jsx(Primitive.div, { ...portalProps, ref: forwardedRef }), container) : null;\n});\nPortal.displayName = PORTAL_NAME;\nvar Root = Portal;\nexport {\n  Portal,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/presence.tsx\nimport * as React2 from \"react\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\n\n// src/use-state-machine.tsx\nimport * as React from \"react\";\nfunction useStateMachine(initialState, machine) {\n  return React.useReducer((state, event) => {\n    const nextState = machine[state][event];\n    return nextState ?? state;\n  }, initialState);\n}\n\n// src/presence.tsx\nvar Presence = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n  const child = typeof children === \"function\" ? children({ present: presence.isPresent }) : React2.Children.only(children);\n  const ref = useComposedRefs(presence.ref, getElementRef(child));\n  const forceMount = typeof children === \"function\";\n  return forceMount || presence.isPresent ? React2.cloneElement(child, { ref }) : null;\n};\nPresence.displayName = \"Presence\";\nfunction usePresence(present) {\n  const [node, setNode] = React2.useState();\n  const stylesRef = React2.useRef(null);\n  const prevPresentRef = React2.useRef(present);\n  const prevAnimationNameRef = React2.useRef(\"none\");\n  const initialState = present ? \"mounted\" : \"unmounted\";\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: \"unmounted\",\n      ANIMATION_OUT: \"unmountSuspended\"\n    },\n    unmountSuspended: {\n      MOUNT: \"mounted\",\n      ANIMATION_END: \"unmounted\"\n    },\n    unmounted: {\n      MOUNT: \"mounted\"\n    }\n  });\n  React2.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === \"mounted\" ? currentAnimationName : \"none\";\n  }, [state]);\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n      if (present) {\n        send(\"MOUNT\");\n      } else if (currentAnimationName === \"none\" || styles?.display === \"none\") {\n        send(\"UNMOUNT\");\n      } else {\n        const isAnimating = prevAnimationName !== currentAnimationName;\n        if (wasPresent && isAnimating) {\n          send(\"ANIMATION_OUT\");\n        } else {\n          send(\"UNMOUNT\");\n        }\n      }\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n  useLayoutEffect(() => {\n    if (node) {\n      let timeoutId;\n      const ownerWindow = node.ownerDocument.defaultView ?? window;\n      const handleAnimationEnd = (event) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          send(\"ANIMATION_END\");\n          if (!prevPresentRef.current) {\n            const currentFillMode = node.style.animationFillMode;\n            node.style.animationFillMode = \"forwards\";\n            timeoutId = ownerWindow.setTimeout(() => {\n              if (node.style.animationFillMode === \"forwards\") {\n                node.style.animationFillMode = currentFillMode;\n              }\n            });\n          }\n        }\n      };\n      const handleAnimationStart = (event) => {\n        if (event.target === node) {\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener(\"animationstart\", handleAnimationStart);\n      node.addEventListener(\"animationcancel\", handleAnimationEnd);\n      node.addEventListener(\"animationend\", handleAnimationEnd);\n      return () => {\n        ownerWindow.clearTimeout(timeoutId);\n        node.removeEventListener(\"animationstart\", handleAnimationStart);\n        node.removeEventListener(\"animationcancel\", handleAnimationEnd);\n        node.removeEventListener(\"animationend\", handleAnimationEnd);\n      };\n    } else {\n      send(\"ANIMATION_END\");\n    }\n  }, [node, send]);\n  return {\n    isPresent: [\"mounted\", \"unmountSuspended\"].includes(state),\n    ref: React2.useCallback((node2) => {\n      stylesRef.current = node2 ? getComputedStyle(node2) : null;\n      setNode(node2);\n    }, [])\n  };\n}\nfunction getAnimationName(styles) {\n  return styles?.animationName || \"none\";\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Presence;\nexport {\n  Presence,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/hover-card.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport * as PopperPrimitive from \"@radix-ui/react-popper\";\nimport { createPopperScope } from \"@radix-ui/react-popper\";\nimport { Portal as PortalPrimitive } from \"@radix-ui/react-portal\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { jsx } from \"react/jsx-runtime\";\nvar originalBodyUserSelect;\nvar HOVERCARD_NAME = \"HoverCard\";\nvar [createHoverCardContext, createHoverCardScope] = createContextScope(HOVERCARD_NAME, [\n  createPopperScope\n]);\nvar usePopperScope = createPopperScope();\nvar [HoverCardProvider, useHoverCardContext] = createHoverCardContext(HOVERCARD_NAME);\nvar HoverCard = (props) => {\n  const {\n    __scopeHoverCard,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    openDelay = 700,\n    closeDelay = 300\n  } = props;\n  const popperScope = usePopperScope(__scopeHoverCard);\n  const openTimerRef = React.useRef(0);\n  const closeTimerRef = React.useRef(0);\n  const hasSelectionRef = React.useRef(false);\n  const isPointerDownOnContentRef = React.useRef(false);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: HOVERCARD_NAME\n  });\n  const handleOpen = React.useCallback(() => {\n    clearTimeout(closeTimerRef.current);\n    openTimerRef.current = window.setTimeout(() => setOpen(true), openDelay);\n  }, [openDelay, setOpen]);\n  const handleClose = React.useCallback(() => {\n    clearTimeout(openTimerRef.current);\n    if (!hasSelectionRef.current && !isPointerDownOnContentRef.current) {\n      closeTimerRef.current = window.setTimeout(() => setOpen(false), closeDelay);\n    }\n  }, [closeDelay, setOpen]);\n  const handleDismiss = React.useCallback(() => setOpen(false), [setOpen]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(openTimerRef.current);\n      clearTimeout(closeTimerRef.current);\n    };\n  }, []);\n  return /* @__PURE__ */ jsx(\n    HoverCardProvider,\n    {\n      scope: __scopeHoverCard,\n      open,\n      onOpenChange: setOpen,\n      onOpen: handleOpen,\n      onClose: handleClose,\n      onDismiss: handleDismiss,\n      hasSelectionRef,\n      isPointerDownOnContentRef,\n      children: /* @__PURE__ */ jsx(PopperPrimitive.Root, { ...popperScope, children })\n    }\n  );\n};\nHoverCard.displayName = HOVERCARD_NAME;\nvar TRIGGER_NAME = \"HoverCardTrigger\";\nvar HoverCardTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeHoverCard, ...triggerProps } = props;\n    const context = useHoverCardContext(TRIGGER_NAME, __scopeHoverCard);\n    const popperScope = usePopperScope(__scopeHoverCard);\n    return /* @__PURE__ */ jsx(PopperPrimitive.Anchor, { asChild: true, ...popperScope, children: /* @__PURE__ */ jsx(\n      Primitive.a,\n      {\n        \"data-state\": context.open ? \"open\" : \"closed\",\n        ...triggerProps,\n        ref: forwardedRef,\n        onPointerEnter: composeEventHandlers(props.onPointerEnter, excludeTouch(context.onOpen)),\n        onPointerLeave: composeEventHandlers(props.onPointerLeave, excludeTouch(context.onClose)),\n        onFocus: composeEventHandlers(props.onFocus, context.onOpen),\n        onBlur: composeEventHandlers(props.onBlur, context.onClose),\n        onTouchStart: composeEventHandlers(props.onTouchStart, (event) => event.preventDefault())\n      }\n    ) });\n  }\n);\nHoverCardTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"HoverCardPortal\";\nvar [PortalProvider, usePortalContext] = createHoverCardContext(PORTAL_NAME, {\n  forceMount: void 0\n});\nvar HoverCardPortal = (props) => {\n  const { __scopeHoverCard, forceMount, children, container } = props;\n  const context = useHoverCardContext(PORTAL_NAME, __scopeHoverCard);\n  return /* @__PURE__ */ jsx(PortalProvider, { scope: __scopeHoverCard, forceMount, children: /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: /* @__PURE__ */ jsx(PortalPrimitive, { asChild: true, container, children }) }) });\n};\nHoverCardPortal.displayName = PORTAL_NAME;\nvar CONTENT_NAME = \"HoverCardContent\";\nvar HoverCardContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeHoverCard);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useHoverCardContext(CONTENT_NAME, props.__scopeHoverCard);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: /* @__PURE__ */ jsx(\n      HoverCardContentImpl,\n      {\n        \"data-state\": context.open ? \"open\" : \"closed\",\n        ...contentProps,\n        onPointerEnter: composeEventHandlers(props.onPointerEnter, excludeTouch(context.onOpen)),\n        onPointerLeave: composeEventHandlers(props.onPointerLeave, excludeTouch(context.onClose)),\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nHoverCardContent.displayName = CONTENT_NAME;\nvar HoverCardContentImpl = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeHoverCard,\n    onEscapeKeyDown,\n    onPointerDownOutside,\n    onFocusOutside,\n    onInteractOutside,\n    ...contentProps\n  } = props;\n  const context = useHoverCardContext(CONTENT_NAME, __scopeHoverCard);\n  const popperScope = usePopperScope(__scopeHoverCard);\n  const ref = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const [containSelection, setContainSelection] = React.useState(false);\n  React.useEffect(() => {\n    if (containSelection) {\n      const body = document.body;\n      originalBodyUserSelect = body.style.userSelect || body.style.webkitUserSelect;\n      body.style.userSelect = \"none\";\n      body.style.webkitUserSelect = \"none\";\n      return () => {\n        body.style.userSelect = originalBodyUserSelect;\n        body.style.webkitUserSelect = originalBodyUserSelect;\n      };\n    }\n  }, [containSelection]);\n  React.useEffect(() => {\n    if (ref.current) {\n      const handlePointerUp = () => {\n        setContainSelection(false);\n        context.isPointerDownOnContentRef.current = false;\n        setTimeout(() => {\n          const hasSelection = document.getSelection()?.toString() !== \"\";\n          if (hasSelection) context.hasSelectionRef.current = true;\n        });\n      };\n      document.addEventListener(\"pointerup\", handlePointerUp);\n      return () => {\n        document.removeEventListener(\"pointerup\", handlePointerUp);\n        context.hasSelectionRef.current = false;\n        context.isPointerDownOnContentRef.current = false;\n      };\n    }\n  }, [context.isPointerDownOnContentRef, context.hasSelectionRef]);\n  React.useEffect(() => {\n    if (ref.current) {\n      const tabbables = getTabbableNodes(ref.current);\n      tabbables.forEach((tabbable) => tabbable.setAttribute(\"tabindex\", \"-1\"));\n    }\n  });\n  return /* @__PURE__ */ jsx(\n    DismissableLayer,\n    {\n      asChild: true,\n      disableOutsidePointerEvents: false,\n      onInteractOutside,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside: composeEventHandlers(onFocusOutside, (event) => {\n        event.preventDefault();\n      }),\n      onDismiss: context.onDismiss,\n      children: /* @__PURE__ */ jsx(\n        PopperPrimitive.Content,\n        {\n          ...popperScope,\n          ...contentProps,\n          onPointerDown: composeEventHandlers(contentProps.onPointerDown, (event) => {\n            if (event.currentTarget.contains(event.target)) {\n              setContainSelection(true);\n            }\n            context.hasSelectionRef.current = false;\n            context.isPointerDownOnContentRef.current = true;\n          }),\n          ref: composedRefs,\n          style: {\n            ...contentProps.style,\n            userSelect: containSelection ? \"text\" : void 0,\n            // Safari requires prefix\n            WebkitUserSelect: containSelection ? \"text\" : void 0,\n            // re-namespace exposed content custom properties\n            ...{\n              \"--radix-hover-card-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n              \"--radix-hover-card-content-available-width\": \"var(--radix-popper-available-width)\",\n              \"--radix-hover-card-content-available-height\": \"var(--radix-popper-available-height)\",\n              \"--radix-hover-card-trigger-width\": \"var(--radix-popper-anchor-width)\",\n              \"--radix-hover-card-trigger-height\": \"var(--radix-popper-anchor-height)\"\n            }\n          }\n        }\n      )\n    }\n  );\n});\nvar ARROW_NAME = \"HoverCardArrow\";\nvar HoverCardArrow = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeHoverCard, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeHoverCard);\n    return /* @__PURE__ */ jsx(PopperPrimitive.Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef });\n  }\n);\nHoverCardArrow.displayName = ARROW_NAME;\nfunction excludeTouch(eventHandler) {\n  return (event) => event.pointerType === \"touch\" ? void 0 : eventHandler();\n}\nfunction getTabbableNodes(container) {\n  const nodes = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node) => {\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    }\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode);\n  return nodes;\n}\nvar Root2 = HoverCard;\nvar Trigger = HoverCardTrigger;\nvar Portal = HoverCardPortal;\nvar Content2 = HoverCardContent;\nvar Arrow2 = HoverCardArrow;\nexport {\n  Arrow2 as Arrow,\n  Content2 as Content,\n  HoverCard,\n  HoverCardArrow,\n  HoverCardContent,\n  HoverCardPortal,\n  HoverCardTrigger,\n  Portal,\n  Root2 as Root,\n  Trigger,\n  createHoverCardScope\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["ArrowDownToLine","d","key","BrushCleaning","ChevronLeft","Ellipsis","cx","cy","r","FolderPen","composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","event","defaultPrevented","createContextScope","scopeName","createContextScopeDeps","defaultContexts","createScope","scopeContexts","map","defaultContext","scope","contexts","rootComponentName","BaseContext","index","length","Provider","props","children","context","Context","value","Object","values","jsx","displayName","consumerName","Error","composeContextScopes","scopes","baseScope","scopeHooks","createScope2","useScope","overrideScopes","nextScopes","reduce","nextScopes2","useLayoutEffect2","globalThis","document","useInsertionEffect","trim","toString","useControllableState","prop","defaultProp","onChange","caller","uncontrolledProp","setUncontrolledProp","onChangeRef","setValue","prevValueRef","current","useUncontrolledState","isControlled","isControlledRef","wasControlled","from","to","console","warn","nextValue","value2","isFunction","Symbol","setRef","ref","composeRefs","refs","node","hasCleanup","cleanups","cleanup","i","useComposedRefs","computeCoordsFromPlacement","_ref","placement","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","side","isVertical","commonX","x","width","commonY","y","height","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","padding","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","rect","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","top","bottom","left","right","getSideOffsets","overflow","isAnySideFullyClipped","some","getCssDimensions","css","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","win","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","scrollLeft","getHTMLOffset","documentElement","scroll","ignoreScrollbarX","htmlRect","scrollTop","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","body","ownerDocument","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","parentNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","htmlOffset","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","svgOffsetParent","topLayer","clippingAncestors","cache","cachedResult","get","result","filter","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","includes","ancestor","set","getClippingElementAncestors","this","_c","concat","firstClippingAncestor","clippingRect","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","isRTL","rectsAreEqual","a","b","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","_io","clearTimeout","disconnect","refresh","skip","threshold","elementRectForRootMargin","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","e","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","alignment","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","offset","arrow","alignmentOffset","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","mainAxisCoord","crossAxisCoord","maxSide","min","max","limitedCoords","enabled","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","initialSideAxis","isBasePlacement","hasFallbackAxisSideDirection","push","placements","overflows","overflowsData","flip","sides","every","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","reset","resetPlacement","sort","_overflowsData$filter2","currentSideAxis","acc","_state$middlewareData","_state$middlewareData2","apply","isYAxis","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","shift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","axis","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition","useLayoutEffect","useEffect","deepEqual","keys","isArray","hasOwnProperty","call","$$typeof","getDPR","window","defaultView","devicePixelRatio","roundByDPR","dpr","Math","round","useLatestRef","arrow$1","deps","createSlot","ownerName","SlotClone","createSlotClone","Slot2","forwardedRef","slotProps","childrenArray","toArray","slottable","find","isSlottable","newElement","newChildren","child","count","only","childrenRef","getter","getOwnPropertyDescriptor","mayWarn","isReactWarning","getElementRef","props2","childProps","overrideProps","propName","slotPropValue","childPropValue","test","args","join","mergeProps","type","SLOTTABLE_IDENTIFIER","__radixId","Primitive","primitive","Slot","Node","asChild","primitiveProps","Comp","for","Arrow","arrowProps","svg","viewBox","preserveAspectRatio","points","POPPER_NAME","createPopperContext","createPopperScope","PopperProvider","usePopperContext","Popper","__scopePopper","anchor","setAnchor","onAnchorChange","ANCHOR_NAME","PopperAnchor","virtualRef","anchorProps","composedRefs","div","CONTENT_NAME","PopperContentProvider","useContentContext","PopperContent","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","collisionPaddingProp","sticky","hideWhenDetached","updatePositionStrategy","onPlaced","contentProps","content","setContent","setArrow","arrowSize","size","setSize","entry","borderSizeEntry","borderSize","box","useSize","arrowWidth","arrowHeight","desiredPlacement","hasExplicitBoundaries","isNotNull","floatingStyles","isPositioned","externalReference","externalFloating","transform","whileElementsMounted","open","setData","latestMiddleware","setLatestMiddleware","_reference","_setReference","_floating","_setFloating","setReference","referenceRef","setFloating","floatingRef","floatingEl","dataRef","hasWhileElementsMounted","whileElementsMountedRef","platformRef","openRef","then","fullData","isMountedRef","initialStyles","willChange","useFloating","anchorWidth","anchorHeight","contentStyle","style","setProperty","transformOrigin","placedSide","placedAlign","getSideAndAlignFromPlacement","handlePlaced","callback","callbackRef","useCallbackRef","arrowX","arrowY","cannotCenterArrow","contentZIndex","setContentZIndex","getComputedStyle","zIndex","minWidth","hide","visibility","pointerEvents","dir","onArrowChange","shouldHideArrow","animation","ARROW_NAME","OPPOSITE_SIDE","PopperArrow","contentContext","baseSide","display","isArrowHidden","noArrowAlign","start","end","arrowXCenter","arrowYCenter","split","Root2","Anchor","Content","Portal","container","containerProp","portalProps","mounted","setMounted","Presence","present","presence","setNode","stylesRef","prevPresentRef","prevAnimationNameRef","initialState","send","machine","useStateMachine","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","currentAnimationName","getAnimationName","styles","wasPresent","prevAnimationName","ownerWindow","handleAnimationEnd","isCurrentAnimation","animationName","currentFillMode","animationFillMode","handleAnimationStart","isPresent","node2","usePresence","originalBodyUserSelect","HOVERCARD_NAME","createHoverCardContext","createHoverCardScope","usePopperScope","HoverCardProvider","useHoverCardContext","HoverCard","__scopeHoverCard","openProp","defaultOpen","onOpenChange","openDelay","closeDelay","popperScope","openTimerRef","closeTimerRef","hasSelectionRef","isPointerDownOnContentRef","setOpen","handleOpen","handleClose","handleDismiss","onOpen","onClose","onDismiss","TRIGGER_NAME","HoverCardTrigger","triggerProps","onPointerEnter","excludeTouch","onPointerLeave","onFocus","onBlur","onTouchStart","preventDefault","PortalProvider","usePortalContext","forceMount","HoverCardPortal","HoverCardContent","portalContext","HoverCardContentImpl","onEscapeKeyDown","onPointerDownOutside","onFocusOutside","onInteractOutside","containSelection","setContainSelection","userSelect","webkitUserSelect","handlePointerUp","getSelection","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","tabIndex","FILTER_ACCEPT","FILTER_SKIP","nextNode","getTabbableNodes","tabbable","setAttribute","disableOutsidePointerEvents","onPointerDown","currentTarget","contains","WebkitUserSelect","HoverCardArrow","eventHandler","pointerType","Trigger","Content2"],"sourceRoot":""}