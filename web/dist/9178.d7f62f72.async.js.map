{"version":3,"file":"9178.d7f62f72.async.js","mappings":"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","sources":["webpack:///./src/components/svg-icon.tsx","webpack:///./src/constants/knowledge.ts","webpack:///./src/hooks/document-hooks.ts","webpack:///./src/hooks/knowledge-hooks.ts","webpack:///./src/hooks/logic-hooks.ts","webpack:///./src/hooks/route-hook.ts","webpack:///./src/services/knowledge-service.ts","webpack:///./src/utils/chat.ts","webpack:///./src/utils/document-util.ts","webpack:///./src/assets/svg/ sync \\.svg$"],"sourcesContent":["import { IconMap } from '@/constants/llm';\nimport { cn } from '@/lib/utils';\nimport Icon, { UserOutlined } from '@ant-design/icons';\nimport { IconComponentProps } from '@ant-design/icons/lib/components/Icon';\nimport { Avatar } from 'antd';\nimport { AvatarSize } from 'antd/es/avatar/AvatarContext';\n\nconst importAll = (requireContext: __WebpackModuleApi.RequireContext) => {\n  const list = requireContext.keys().map((key) => {\n    const name = key.replace(/\\.\\/(.*)\\.\\w+$/, '$1');\n    return { name, value: requireContext(key) };\n  });\n  return list;\n};\n\nlet routeList: { name: string; value: string }[] = [];\n\ntry {\n  routeList = importAll(require.context('@/assets/svg', true, /\\.svg$/));\n} catch (error) {\n  console.warn(error);\n  routeList = [];\n}\n\ninterface IProps extends IconComponentProps {\n  name: string;\n  width: string | number;\n  height?: string | number;\n  imgClass?: string;\n}\n\nconst SvgIcon = ({ name, width, height, imgClass, ...restProps }: IProps) => {\n  const ListItem = routeList.find((item) => item.name === name);\n  return (\n    <Icon\n      component={() => (\n        <img\n          src={ListItem?.value}\n          alt=\"\"\n          width={width}\n          height={height}\n          className={cn(imgClass, 'max-w-full')}\n        />\n      )}\n      {...(restProps as any)}\n    />\n  );\n};\n\nexport const LlmIcon = ({\n  name,\n  height = 48,\n  width = 48,\n  size = 'large',\n  imgClass,\n}: {\n  name: string;\n  height?: number;\n  width?: number;\n  size?: AvatarSize;\n  imgClass?: string;\n}) => {\n  const icon = IconMap[name as keyof typeof IconMap];\n\n  return icon ? (\n    <SvgIcon\n      name={`llm/${icon}`}\n      width={width}\n      height={height}\n      imgClass={imgClass}\n    ></SvgIcon>\n  ) : (\n    <Avatar shape=\"square\" size={size} icon={<UserOutlined />} />\n  );\n};\n\nexport default SvgIcon;\n","export enum KnowledgeRouteKey {\n  Dataset = 'dataset',\n  Testing = 'testing',\n  Configuration = 'configuration',\n  KnowledgeGraph = 'knowledgeGraph',\n}\n\nexport const DatasetBaseKey = 'dataset';\n\nexport enum RunningStatus {\n  UNSTART = '0', // need to run\n  RUNNING = '1', // need to cancel\n  CANCEL = '2', // need to refresh\n  DONE = '3', // need to refresh\n  FAIL = '4', // need to refresh\n}\n\nexport enum ModelVariableType {\n  Improvise = 'Improvise',\n  Precise = 'Precise',\n  Balance = 'Balance',\n}\n\nexport const settledModelVariableMap = {\n  [ModelVariableType.Improvise]: {\n    temperature: 0.8,\n    top_p: 0.9,\n    frequency_penalty: 0.1,\n    presence_penalty: 0.1,\n    max_tokens: 4096,\n  },\n  [ModelVariableType.Precise]: {\n    temperature: 0.2,\n    top_p: 0.75,\n    frequency_penalty: 0.5,\n    presence_penalty: 0.5,\n    max_tokens: 4096,\n  },\n  [ModelVariableType.Balance]: {\n    temperature: 0.5,\n    top_p: 0.85,\n    frequency_penalty: 0.3,\n    presence_penalty: 0.2,\n    max_tokens: 4096,\n  },\n};\n\nexport enum LlmModelType {\n  Embedding = 'embedding',\n  Chat = 'chat',\n  Image2text = 'image2text',\n  Speech2text = 'speech2text',\n  Rerank = 'rerank',\n  TTS = 'tts',\n}\n\nexport enum KnowledgeSearchParams {\n  DocumentId = 'doc_id',\n  KnowledgeId = 'id',\n}\n\nexport enum DocumentType {\n  Virtual = 'virtual',\n  Visual = 'visual',\n}\n\nexport enum DocumentParserType {\n  Naive = 'naive',\n  Qa = 'qa',\n  Resume = 'resume',\n  Manual = 'manual',\n  Table = 'table',\n  Paper = 'paper',\n  Book = 'book',\n  Laws = 'laws',\n  Presentation = 'presentation',\n  Picture = 'picture',\n  One = 'one',\n  Audio = 'audio',\n  Email = 'email',\n  Tag = 'tag',\n  KnowledgeGraph = 'knowledge_graph',\n}\n","import { IReferenceChunk } from '@/interfaces/database/chat';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport { IChunk } from '@/interfaces/database/knowledge';\nimport {\n  IChangeParserConfigRequestBody,\n  IDocumentMetaRequestBody,\n} from '@/interfaces/request/document';\nimport i18n from '@/locales/config';\nimport chatService from '@/services/chat-service';\nimport kbService, { listDocument } from '@/services/knowledge-service';\nimport api, { api_host } from '@/utils/api';\nimport { buildChunkHighlights } from '@/utils/document-util';\nimport { post } from '@/utils/request';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { UploadFile, message } from 'antd';\nimport { get } from 'lodash';\nimport { useCallback, useMemo, useState } from 'react';\nimport { IHighlight } from 'react-pdf-highlighter';\nimport { useParams } from 'umi';\nimport {\n  useGetPaginationWithRouter,\n  useHandleSearchChange,\n} from './logic-hooks';\nimport {\n  useGetKnowledgeSearchParams,\n  useSetPaginationParams,\n} from './route-hook';\n\nexport const useGetDocumentUrl = (documentId?: string) => {\n  const getDocumentUrl = useCallback(\n    (id?: string) => {\n      return `${api_host}/document/get/${documentId || id}`;\n    },\n    [documentId],\n  );\n\n  return getDocumentUrl;\n};\n\nexport const useGetChunkHighlights = (\n  selectedChunk: IChunk | IReferenceChunk,\n) => {\n  const [size, setSize] = useState({ width: 849, height: 1200 });\n\n  const highlights: IHighlight[] = useMemo(() => {\n    return buildChunkHighlights(selectedChunk, size);\n  }, [selectedChunk, size]);\n\n  const setWidthAndHeight = (width: number, height: number) => {\n    setSize((pre) => {\n      if (pre.height !== height || pre.width !== width) {\n        return { height, width };\n      }\n      return pre;\n    });\n  };\n\n  return { highlights, setWidthAndHeight };\n};\n\nexport const useFetchNextDocumentList = () => {\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n  const { searchString, handleInputChange } = useHandleSearchChange();\n  const { pagination, setPagination } = useGetPaginationWithRouter();\n  const { id } = useParams();\n\n  const { data, isFetching: loading } = useQuery<{\n    docs: IDocumentInfo[];\n    total: number;\n  }>({\n    queryKey: ['fetchDocumentList', searchString, pagination],\n    initialData: { docs: [], total: 0 },\n    refetchInterval: 15000,\n    enabled: !!knowledgeId || !!id,\n    queryFn: async () => {\n      const ret = await listDocument({\n        kb_id: knowledgeId || id,\n        keywords: searchString,\n        page_size: pagination.pageSize,\n        page: pagination.current,\n      });\n      if (ret.data.code === 0) {\n        return ret.data.data;\n      }\n\n      return {\n        docs: [],\n        total: 0,\n      };\n    },\n  });\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => {\n      setPagination({ page: 1 });\n      handleInputChange(e);\n    },\n    [handleInputChange, setPagination],\n  );\n\n  return {\n    loading,\n    searchString,\n    documents: data.docs,\n    pagination: { ...pagination, total: data?.total },\n    handleInputChange: onInputChange,\n    setPagination,\n  };\n};\n\nexport const useSetNextDocumentStatus = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['updateDocumentStatus'],\n    mutationFn: async ({\n      status,\n      documentId,\n    }: {\n      status: boolean;\n      documentId: string;\n    }) => {\n      const { data } = await kbService.document_change_status({\n        doc_id: documentId,\n        status: Number(status),\n      });\n      if (data.code === 0) {\n        message.success(i18n.t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['fetchDocumentList'] });\n      }\n      return data;\n    },\n  });\n\n  return { setDocumentStatus: mutateAsync, data, loading };\n};\n\nexport const useSaveNextDocumentName = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveDocumentName'],\n    mutationFn: async ({\n      name,\n      documentId,\n    }: {\n      name: string;\n      documentId: string;\n    }) => {\n      const { data } = await kbService.document_rename({\n        doc_id: documentId,\n        name: name,\n      });\n      if (data.code === 0) {\n        message.success(i18n.t('message.renamed'));\n        queryClient.invalidateQueries({ queryKey: ['fetchDocumentList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { loading, saveName: mutateAsync, data };\n};\n\nexport const useCreateNextDocument = () => {\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n  const { setPaginationParams, page } = useSetPaginationParams();\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['createDocument'],\n    mutationFn: async (name: string) => {\n      const { data } = await kbService.document_create({\n        name,\n        kb_id: knowledgeId,\n      });\n      if (data.code === 0) {\n        if (page === 1) {\n          queryClient.invalidateQueries({ queryKey: ['fetchDocumentList'] });\n        } else {\n          setPaginationParams(); // fetch document list\n        }\n\n        message.success(i18n.t('message.created'));\n      }\n      return data.code;\n    },\n  });\n\n  return { createDocument: mutateAsync, loading, data };\n};\n\nexport const useSetNextDocumentParser = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['setDocumentParser'],\n    mutationFn: async ({\n      parserId,\n      documentId,\n      parserConfig,\n    }: {\n      parserId: string;\n      documentId: string;\n      parserConfig: IChangeParserConfigRequestBody;\n    }) => {\n      const { data } = await kbService.document_change_parser({\n        parser_id: parserId,\n        doc_id: documentId,\n        parser_config: parserConfig,\n      });\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['fetchDocumentList'] });\n\n        message.success(i18n.t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { setDocumentParser: mutateAsync, data, loading };\n};\n\nexport const useUploadNextDocument = () => {\n  const queryClient = useQueryClient();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['uploadDocument'],\n    mutationFn: async (fileList: UploadFile[]) => {\n      const formData = new FormData();\n      formData.append('kb_id', knowledgeId);\n      fileList.forEach((file: any) => {\n        formData.append('file', file);\n      });\n\n      try {\n        const ret = await kbService.document_upload(formData);\n        const code = get(ret, 'data.code');\n\n        if (code === 0 || code === 500) {\n          queryClient.invalidateQueries({ queryKey: ['fetchDocumentList'] });\n        }\n        return ret?.data;\n      } catch (error) {\n        console.warn(error);\n        return {\n          code: 500,\n          message: error + '',\n        };\n      }\n    },\n  });\n\n  return { uploadDocument: mutateAsync, loading, data };\n};\n\nexport const useNextWebCrawl = () => {\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['webCrawl'],\n    mutationFn: async ({ name, url }: { name: string; url: string }) => {\n      const formData = new FormData();\n      formData.append('name', name);\n      formData.append('url', url);\n      formData.append('kb_id', knowledgeId);\n\n      const ret = await kbService.web_crawl(formData);\n      const code = get(ret, 'data.code');\n      if (code === 0) {\n        message.success(i18n.t('message.uploaded'));\n      }\n\n      return code;\n    },\n  });\n\n  return {\n    data,\n    loading,\n    webCrawl: mutateAsync,\n  };\n};\n\nexport const useRunNextDocument = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['runDocumentByIds'],\n    mutationFn: async ({\n      documentIds,\n      run,\n      shouldDelete,\n    }: {\n      documentIds: string[];\n      run: number;\n      shouldDelete: boolean;\n    }) => {\n      queryClient.invalidateQueries({\n        queryKey: ['fetchDocumentList'],\n      });\n\n      const ret = await kbService.document_run({\n        doc_ids: documentIds,\n        run,\n        delete: shouldDelete,\n      });\n      const code = get(ret, 'data.code');\n      if (code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['fetchDocumentList'] });\n        message.success(i18n.t('message.operated'));\n      }\n\n      return code;\n    },\n  });\n\n  return { runDocumentByIds: mutateAsync, loading, data };\n};\n\nexport const useFetchDocumentInfosByIds = () => {\n  const [ids, setDocumentIds] = useState<string[]>([]);\n\n  const idList = useMemo(() => {\n    return ids.filter((x) => typeof x === 'string' && x !== '');\n  }, [ids]);\n\n  const { data } = useQuery<IDocumentInfo[]>({\n    queryKey: ['fetchDocumentInfos', idList],\n    enabled: idList.length > 0,\n    initialData: [],\n    queryFn: async () => {\n      const { data } = await kbService.document_infos({ doc_ids: idList });\n      if (data.code === 0) {\n        return data.data;\n      }\n\n      return [];\n    },\n  });\n\n  return { data, setDocumentIds };\n};\n\nexport const useFetchDocumentThumbnailsByIds = () => {\n  const [ids, setDocumentIds] = useState<string[]>([]);\n  const { data } = useQuery<Record<string, string>>({\n    queryKey: ['fetchDocumentThumbnails', ids],\n    enabled: ids.length > 0,\n    initialData: {},\n    queryFn: async () => {\n      const { data } = await kbService.document_thumbnails({ doc_ids: ids });\n      if (data.code === 0) {\n        return data.data;\n      }\n      return {};\n    },\n  });\n\n  return { data, setDocumentIds };\n};\n\nexport const useRemoveNextDocument = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['removeDocument'],\n    mutationFn: async (documentIds: string | string[]) => {\n      const { data } = await kbService.document_rm({ doc_id: documentIds });\n      if (data.code === 0) {\n        message.success(i18n.t('message.deleted'));\n        queryClient.invalidateQueries({ queryKey: ['fetchDocumentList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, removeDocument: mutateAsync };\n};\n\nexport const useDeleteDocument = () => {\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteDocument'],\n    mutationFn: async (documentIds: string[]) => {\n      const data = await kbService.document_delete({ doc_ids: documentIds });\n\n      return data;\n    },\n  });\n\n  return { data, loading, deleteDocument: mutateAsync };\n};\n\nexport const useUploadAndParseDocument = (uploadMethod: string) => {\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['uploadAndParseDocument'],\n    mutationFn: async ({\n      conversationId,\n      fileList,\n    }: {\n      conversationId: string;\n      fileList: UploadFile[];\n    }) => {\n      try {\n        const formData = new FormData();\n        formData.append('conversation_id', conversationId);\n        fileList.forEach((file: UploadFile) => {\n          formData.append('file', file as any);\n        });\n        if (uploadMethod === 'upload_and_parse') {\n          const data = await kbService.upload_and_parse(formData);\n          return data?.data;\n        }\n        const data = await chatService.uploadAndParseExternal(formData);\n        return data?.data;\n      } catch (error) {}\n    },\n  });\n\n  return { data, loading, uploadAndParseDocument: mutateAsync };\n};\n\nexport const useParseDocument = () => {\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['parseDocument'],\n    mutationFn: async (url: string) => {\n      try {\n        const data = await post(api.parse, { url });\n        if (data?.code === 0) {\n          message.success(i18n.t('message.uploaded'));\n        }\n        return data;\n      } catch (error) {\n        message.error('error');\n      }\n    },\n  });\n\n  return { parseDocument: mutateAsync, data, loading };\n};\n\nexport const useSetDocumentMeta = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['setDocumentMeta'],\n    mutationFn: async (params: IDocumentMetaRequestBody) => {\n      try {\n        const { data } = await kbService.setMeta({\n          meta: params.meta,\n          doc_id: params.documentId,\n        });\n\n        if (data?.code === 0) {\n          queryClient.invalidateQueries({ queryKey: ['fetchDocumentList'] });\n\n          message.success(i18n.t('message.modified'));\n        }\n        return data?.code;\n      } catch (error) {\n        message.error('error');\n      }\n    },\n  });\n\n  return { setDocumentMeta: mutateAsync, data, loading };\n};\n","import { ResponsePostType } from '@/interfaces/database/base';\nimport {\n  IKnowledge,\n  IKnowledgeGraph,\n  IRenameTag,\n  ITestingResult,\n} from '@/interfaces/database/knowledge';\nimport i18n from '@/locales/config';\nimport kbService, {\n  deleteKnowledgeGraph,\n  getKnowledgeGraph,\n  listDataset,\n  listTag,\n  removeTag,\n  renameTag,\n} from '@/services/knowledge-service';\nimport {\n  useInfiniteQuery,\n  useIsMutating,\n  useMutation,\n  useMutationState,\n  useQuery,\n  useQueryClient,\n} from '@tanstack/react-query';\nimport { useDebounce } from 'ahooks';\nimport { message } from 'antd';\nimport { useState } from 'react';\nimport { useSearchParams } from 'umi';\nimport { useHandleSearchChange } from './logic-hooks';\nimport { useSetPaginationParams } from './route-hook';\n\nexport const useKnowledgeBaseId = (): string => {\n  const [searchParams] = useSearchParams();\n  const knowledgeBaseId = searchParams.get('id');\n\n  return knowledgeBaseId || '';\n};\n\nexport const useFetchKnowledgeBaseConfiguration = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const { data, isFetching: loading } = useQuery<IKnowledge>({\n    queryKey: ['fetchKnowledgeDetail'],\n    initialData: {} as IKnowledge,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await kbService.get_kb_detail({\n        kb_id: knowledgeBaseId,\n      });\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useFetchKnowledgeList = (\n  shouldFilterListWithoutDocument: boolean = false,\n): {\n  list: IKnowledge[];\n  loading: boolean;\n} => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['fetchKnowledgeList'],\n    initialData: [],\n    gcTime: 0, // https://tanstack.com/query/latest/docs/framework/react/guides/caching?from=reactQueryV3\n    queryFn: async () => {\n      const { data } = await listDataset();\n      const list = data?.data?.kbs ?? [];\n      return shouldFilterListWithoutDocument\n        ? list.filter((x: IKnowledge) => x.chunk_num > 0)\n        : list;\n    },\n  });\n\n  return { list: data, loading };\n};\n\nexport const useSelectKnowledgeOptions = () => {\n  const { list } = useFetchKnowledgeList();\n\n  const options = list?.map((item) => ({\n    label: item.name,\n    value: item.id,\n  }));\n\n  return options;\n};\n\nexport const useInfiniteFetchKnowledgeList = () => {\n  const { searchString, handleInputChange } = useHandleSearchChange();\n  const debouncedSearchString = useDebounce(searchString, { wait: 500 });\n\n  const PageSize = 30;\n\n  const {\n    data,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetching,\n    isFetchingNextPage,\n    status,\n  } = useInfiniteQuery({\n    queryKey: ['infiniteFetchKnowledgeList', debouncedSearchString],\n    queryFn: async ({ pageParam }) => {\n      const { data } = await listDataset({\n        page: pageParam,\n        page_size: PageSize,\n        keywords: debouncedSearchString,\n      });\n      const list = data?.data ?? [];\n      return list;\n    },\n    initialPageParam: 1,\n    getNextPageParam: (lastPage, pages, lastPageParam) => {\n      if (lastPageParam * PageSize <= lastPage.total) {\n        return lastPageParam + 1;\n      }\n      return undefined;\n    },\n  });\n  return {\n    data,\n    loading: isFetching,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetching,\n    isFetchingNextPage,\n    status,\n    handleInputChange,\n    searchString,\n  };\n};\n\nexport const useCreateKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['infiniteFetchKnowledgeList'],\n    mutationFn: async (params: { id?: string; name: string }) => {\n      const { data = {} } = await kbService.createKb(params);\n      if (data.code === 0) {\n        message.success(\n          i18n.t(`message.${params?.id ? 'modified' : 'created'}`),\n        );\n        queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeList'] });\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, createKnowledge: mutateAsync };\n};\n\nexport const useDeleteKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteKnowledge'],\n    mutationFn: async (id: string) => {\n      const { data } = await kbService.rmKb({ kb_id: id });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.deleted`));\n        queryClient.invalidateQueries({\n          queryKey: ['infiniteFetchKnowledgeList'],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteKnowledge: mutateAsync };\n};\n\n//#region knowledge configuration\n\nexport const useUpdateKnowledge = (shouldFetchList = false) => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveKnowledge'],\n    mutationFn: async (params: Record<string, any>) => {\n      const { data = {} } = await kbService.updateKb({\n        kb_id: params?.kb_id ? params?.kb_id : knowledgeBaseId,\n        ...params,\n      });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.updated`));\n        if (shouldFetchList) {\n          queryClient.invalidateQueries({\n            queryKey: ['fetchKnowledgeListByPage'],\n          });\n        } else {\n          queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeDetail'] });\n        }\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, saveKnowledgeConfiguration: mutateAsync };\n};\n\n//#endregion\n\n//#region Retrieval testing\n\nexport const useTestChunkRetrieval = (): ResponsePostType<ITestingResult> & {\n  testChunk: (...params: any[]) => void;\n} => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const { page, size: pageSize } = useSetPaginationParams();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['testChunk'], // This method is invalid\n    gcTime: 0,\n    mutationFn: async (values: any) => {\n      const { data } = await kbService.retrieval_test({\n        ...values,\n        kb_id: values.kb_id ?? knowledgeBaseId,\n        page,\n        size: pageSize,\n      });\n      if (data.code === 0) {\n        const res = data.data;\n        return {\n          ...res,\n          documents: res.doc_aggs,\n        };\n      }\n      return (\n        data?.data ?? {\n          chunks: [],\n          documents: [],\n          total: 0,\n        }\n      );\n    },\n  });\n\n  return {\n    data: data ?? { chunks: [], documents: [], total: 0 },\n    loading,\n    testChunk: mutateAsync,\n  };\n};\n\nexport const useTestChunkAllRetrieval = (): ResponsePostType<ITestingResult> & {\n  testChunkAll: (...params: any[]) => void;\n} => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const { page, size: pageSize } = useSetPaginationParams();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['testChunkAll'], // This method is invalid\n    gcTime: 0,\n    mutationFn: async (values: any) => {\n      const { data } = await kbService.retrieval_test({\n        ...values,\n        kb_id: values.kb_id ?? knowledgeBaseId,\n        doc_ids: [],\n        page,\n        size: pageSize,\n      });\n      if (data.code === 0) {\n        const res = data.data;\n        return {\n          ...res,\n          documents: res.doc_aggs,\n        };\n      }\n      return (\n        data?.data ?? {\n          chunks: [],\n          documents: [],\n          total: 0,\n        }\n      );\n    },\n  });\n\n  return {\n    data: data ?? { chunks: [], documents: [], total: 0 },\n    loading,\n    testChunkAll: mutateAsync,\n  };\n};\n\nexport const useChunkIsTesting = () => {\n  return useIsMutating({ mutationKey: ['testChunk'] }) > 0;\n};\n\nexport const useSelectTestingResult = (): ITestingResult => {\n  const data = useMutationState({\n    filters: { mutationKey: ['testChunk'] },\n    select: (mutation) => {\n      return mutation.state.data;\n    },\n  });\n  return (data.at(-1) ?? {\n    chunks: [],\n    documents: [],\n    total: 0,\n  }) as ITestingResult;\n};\n\nexport const useSelectIsTestingSuccess = () => {\n  const status = useMutationState({\n    filters: { mutationKey: ['testChunk'] },\n    select: (mutation) => {\n      return mutation.state.status;\n    },\n  });\n  return status.at(-1) === 'success';\n};\n\nexport const useAllTestingSuccess = () => {\n  const status = useMutationState({\n    filters: { mutationKey: ['testChunkAll'] },\n    select: (mutation) => {\n      return mutation.state.status;\n    },\n  });\n  return status.at(-1) === 'success';\n};\n\nexport const useAllTestingResult = (): ITestingResult => {\n  const data = useMutationState({\n    filters: { mutationKey: ['testChunkAll'] },\n    select: (mutation) => {\n      return mutation.state.data;\n    },\n  });\n  return (data.at(-1) ?? {\n    chunks: [],\n    documents: [],\n    total: 0,\n  }) as ITestingResult;\n};\n//#endregion\n\n//#region tags\n\nexport const useFetchTagList = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const { data, isFetching: loading } = useQuery<Array<[string, number]>>({\n    queryKey: ['fetchTagList'],\n    initialData: [],\n    gcTime: 0, // https://tanstack.com/query/latest/docs/framework/react/guides/caching?from=reactQueryV3\n    queryFn: async () => {\n      const { data } = await listTag(knowledgeBaseId);\n      const list = data?.data || [];\n      return list;\n    },\n  });\n\n  return { list: data, loading };\n};\n\nexport const useDeleteTag = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteTag'],\n    mutationFn: async (tags: string[]) => {\n      const { data } = await removeTag(knowledgeBaseId, tags);\n      if (data.code === 0) {\n        message.success(i18n.t(`message.deleted`));\n        queryClient.invalidateQueries({\n          queryKey: ['fetchTagList'],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteTag: mutateAsync };\n};\n\nexport const useRenameTag = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['renameTag'],\n    mutationFn: async (params: IRenameTag) => {\n      const { data } = await renameTag(knowledgeBaseId, params);\n      if (data.code === 0) {\n        message.success(i18n.t(`message.modified`));\n        queryClient.invalidateQueries({\n          queryKey: ['fetchTagList'],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, renameTag: mutateAsync };\n};\n\nexport const useTagIsRenaming = () => {\n  return useIsMutating({ mutationKey: ['renameTag'] }) > 0;\n};\n\nexport const useFetchTagListByKnowledgeIds = () => {\n  const [knowledgeIds, setKnowledgeIds] = useState<string[]>([]);\n\n  const { data, isFetching: loading } = useQuery<Array<[string, number]>>({\n    queryKey: ['fetchTagListByKnowledgeIds'],\n    enabled: knowledgeIds.length > 0,\n    initialData: [],\n    gcTime: 0, // https://tanstack.com/query/latest/docs/framework/react/guides/caching?from=reactQueryV3\n    queryFn: async () => {\n      const { data } = await kbService.listTagByKnowledgeIds({\n        kb_ids: knowledgeIds.join(','),\n      });\n      const list = data?.data || [];\n      return list;\n    },\n  });\n\n  return { list: data, loading, setKnowledgeIds };\n};\n\n//#endregion\n\nexport function useFetchKnowledgeGraph() {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const { data, isFetching: loading } = useQuery<IKnowledgeGraph>({\n    queryKey: ['fetchKnowledgeGraph', knowledgeBaseId],\n    initialData: { graph: {}, mind_map: {} } as IKnowledgeGraph,\n    enabled: !!knowledgeBaseId,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await getKnowledgeGraph(knowledgeBaseId);\n      return data?.data;\n    },\n  });\n\n  return { data, loading };\n}\n\nexport const useRemoveKnowledgeGraph = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['removeKnowledgeGraph'],\n    mutationFn: async () => {\n      const { data } = await deleteKnowledgeGraph(knowledgeBaseId);\n      if (data.code === 0) {\n        message.success(i18n.t(`message.deleted`));\n        queryClient.invalidateQueries({\n          queryKey: ['fetchKnowledgeGraph'],\n        });\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, removeKnowledgeGraph: mutateAsync };\n};\n","import { Authorization } from '@/constants/authorization';\nimport { MessageType } from '@/constants/chat';\nimport { LanguageTranslationMap } from '@/constants/common';\nimport { ResponseType } from '@/interfaces/database/base';\nimport { IAnswer, Message } from '@/interfaces/database/chat';\nimport { IKnowledgeFile } from '@/interfaces/database/knowledge';\nimport { IClientConversation, IMessage } from '@/pages/chat/interface';\nimport api from '@/utils/api';\nimport { getAuthorization } from '@/utils/authorization-util';\nimport { buildMessageUuid } from '@/utils/chat';\nimport { PaginationProps, message } from 'antd';\nimport { FormInstance } from 'antd/lib';\nimport axios from 'axios';\nimport { EventSourceParserStream } from 'eventsource-parser/stream';\nimport { omit } from 'lodash';\nimport {\n  ChangeEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { v4 as uuid } from 'uuid';\nimport { useTranslate } from './common-hooks';\nimport { useSetPaginationParams } from './route-hook';\nimport { useFetchTenantInfo, useSaveSetting } from './user-setting-hooks';\n\nexport const useSetSelectedRecord = <T = IKnowledgeFile>() => {\n  const [currentRecord, setCurrentRecord] = useState<T>({} as T);\n\n  const setRecord = (record: T) => {\n    setCurrentRecord(record);\n  };\n\n  return { currentRecord, setRecord };\n};\n\nexport const useHandleSearchChange = () => {\n  const [searchString, setSearchString] = useState('');\n\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      const value = e.target.value;\n      setSearchString(value);\n    },\n    [],\n  );\n\n  return { handleInputChange, searchString };\n};\n\nexport const useChangeLanguage = () => {\n  const { i18n } = useTranslation();\n  const { saveSetting } = useSaveSetting();\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(\n      LanguageTranslationMap[lng as keyof typeof LanguageTranslationMap],\n    );\n    saveSetting({ language: lng });\n  };\n\n  return changeLanguage;\n};\n\nexport const useGetPaginationWithRouter = () => {\n  const { t } = useTranslate('common');\n  const {\n    setPaginationParams,\n    page,\n    size: pageSize,\n  } = useSetPaginationParams();\n\n  const onPageChange: PaginationProps['onChange'] = useCallback(\n    (pageNumber: number, pageSize: number) => {\n      setPaginationParams(pageNumber, pageSize);\n    },\n    [setPaginationParams],\n  );\n\n  const setCurrentPagination = useCallback(\n    (pagination: { page: number; pageSize?: number }) => {\n      setPaginationParams(pagination.page, pagination.pageSize);\n    },\n    [setPaginationParams],\n  );\n\n  const pagination: PaginationProps = useMemo(() => {\n    return {\n      showQuickJumper: true,\n      total: 0,\n      showSizeChanger: true,\n      current: page,\n      pageSize: pageSize,\n      pageSizeOptions: [1, 2, 10, 20, 50, 100],\n      onChange: onPageChange,\n      showTotal: (total) => `${t('total')} ${total}`,\n    };\n  }, [t, onPageChange, page, pageSize]);\n\n  return {\n    pagination,\n    setPagination: setCurrentPagination,\n  };\n};\n\nexport const useGetPagination = () => {\n  const [pagination, setPagination] = useState({ page: 1, pageSize: 10 });\n  const { t } = useTranslate('common');\n\n  const onPageChange: PaginationProps['onChange'] = useCallback(\n    (pageNumber: number, pageSize: number) => {\n      setPagination({ page: pageNumber, pageSize });\n    },\n    [],\n  );\n\n  const currentPagination: PaginationProps = useMemo(() => {\n    return {\n      showQuickJumper: true,\n      total: 0,\n      showSizeChanger: true,\n      current: pagination.page,\n      pageSize: pagination.pageSize,\n      pageSizeOptions: [1, 2, 10, 20, 50, 100],\n      onChange: onPageChange,\n      showTotal: (total) => `${t('total')} ${total}`,\n    };\n  }, [t, onPageChange, pagination]);\n\n  return {\n    pagination: currentPagination,\n  };\n};\n\nexport interface AppConf {\n  appName: string;\n}\n\nexport const useFetchAppConf = () => {\n  const [appConf, setAppConf] = useState<AppConf>({} as AppConf);\n  const fetchAppConf = useCallback(async () => {\n    const ret = await axios.get('/conf.json');\n\n    setAppConf(ret.data);\n  }, []);\n\n  useEffect(() => {\n    fetchAppConf();\n  }, [fetchAppConf]);\n\n  return appConf;\n};\n\nexport const useSendMessageWithSse = (\n  url: string = api.completeConversation,\n) => {\n  const [answer, setAnswer] = useState<IAnswer>({} as IAnswer);\n  const [done, setDone] = useState(true);\n  const timer = useRef<any>();\n  const sseRef = useRef<AbortController>();\n\n  const initializeSseRef = useCallback(() => {\n    sseRef.current = new AbortController();\n  }, []);\n\n  const resetAnswer = useCallback(() => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n    timer.current = setTimeout(() => {\n      setAnswer({} as IAnswer);\n      clearTimeout(timer.current);\n    }, 1000);\n  }, []);\n\n  const send = useCallback(\n    async (\n      body: any,\n      controller?: AbortController,\n    ): Promise<{ response: Response; data: ResponseType } | undefined> => {\n      initializeSseRef();\n      try {\n        setDone(false);\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            [Authorization]: getAuthorization(),\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(body),\n          signal: controller?.signal || sseRef.current?.signal,\n        });\n\n        const res = response.clone().json();\n\n        const reader = response?.body\n          ?.pipeThrough(new TextDecoderStream())\n          .pipeThrough(new EventSourceParserStream())\n          .getReader();\n\n        while (true) {\n          const x = await reader?.read();\n          if (x) {\n            const { done, value } = x;\n            if (done) {\n              console.info('done');\n              resetAnswer();\n              break;\n            }\n            try {\n              const val = JSON.parse(value?.data || '');\n              const d = val?.data;\n              if (typeof d !== 'boolean') {\n                console.info('data:', d);\n                setAnswer({\n                  ...d,\n                  conversationId: body?.conversation_id,\n                });\n              }\n            } catch (e) {\n              console.warn(e);\n            }\n          }\n        }\n        console.info('done?');\n        setDone(true);\n        resetAnswer();\n        return { data: await res, response };\n      } catch (e) {\n        setDone(true);\n        resetAnswer();\n\n        console.warn(e);\n      }\n    },\n    [initializeSseRef, url, resetAnswer],\n  );\n\n  const stopOutputMessage = useCallback(() => {\n    sseRef.current?.abort();\n  }, []);\n\n  return { send, answer, done, setDone, resetAnswer, stopOutputMessage };\n};\n\nexport const useSpeechWithSse = (url: string = api.tts) => {\n  const read = useCallback(\n    async (body: any) => {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          [Authorization]: getAuthorization(),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n      try {\n        const res = await response.clone().json();\n        if (res?.code !== 0) {\n          message.error(res?.message);\n        }\n      } catch (error) {\n        console.warn('🚀 ~ error:', error);\n      }\n      return response;\n    },\n    [url],\n  );\n\n  return { read };\n};\n\n//#region chat hooks\n\nexport const useScrollToBottom = (messages?: unknown) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = useCallback(() => {\n    if (messages) {\n      ref.current?.scrollIntoView({ behavior: 'instant' });\n    }\n  }, [messages]); // If the message changes, scroll to the bottom\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [scrollToBottom]);\n\n  return ref;\n};\n\nexport const useHandleMessageInputChange = () => {\n  const [value, setValue] = useState('');\n\n  const handleInputChange: ChangeEventHandler<HTMLTextAreaElement> = (e) => {\n    const value = e.target.value;\n    const nextValue = value.replaceAll('\\\\n', '\\n').replaceAll('\\\\t', '\\t');\n    setValue(nextValue);\n  };\n\n  return {\n    handleInputChange,\n    value,\n    setValue,\n  };\n};\n\nexport const useSelectDerivedMessages = () => {\n  const [derivedMessages, setDerivedMessages] = useState<IMessage[]>([]);\n\n  const ref = useScrollToBottom(derivedMessages);\n\n  const addNewestQuestion = useCallback(\n    (message: Message, answer: string = '') => {\n      setDerivedMessages((pre) => {\n        return [\n          ...pre,\n          {\n            ...message,\n            id: buildMessageUuid(message), // The message id is generated on the front end,\n            // and the message id returned by the back end is the same as the question id,\n            //  so that the pair of messages can be deleted together when deleting the message\n          },\n          {\n            role: MessageType.Assistant,\n            content: answer,\n            id: buildMessageUuid({ ...message, role: MessageType.Assistant }),\n          },\n        ];\n      });\n    },\n    [],\n  );\n\n  const addNewestOneQuestion = useCallback((message: Message) => {\n    setDerivedMessages((pre) => {\n      return [\n        ...pre,\n        {\n          ...message,\n          id: buildMessageUuid(message), // The message id is generated on the front end,\n          // and the message id returned by the back end is the same as the question id,\n          //  so that the pair of messages can be deleted together when deleting the message\n        },\n      ];\n    });\n  }, []);\n\n  // Add the streaming message to the last item in the message list\n  const addNewestAnswer = useCallback((answer: IAnswer) => {\n    setDerivedMessages((pre) => {\n      return [\n        ...(pre?.slice(0, -1) ?? []),\n        {\n          role: MessageType.Assistant,\n          content: answer.answer,\n          reference: answer.reference,\n          id: buildMessageUuid({\n            id: answer.id,\n            role: MessageType.Assistant,\n          }),\n          prompt: answer.prompt,\n          audio_binary: answer.audio_binary,\n          ...omit(answer, 'reference'),\n        },\n      ];\n    });\n  }, []);\n\n  // Add the streaming message to the last item in the message list\n  const addNewestOneAnswer = useCallback((answer: IAnswer) => {\n    setDerivedMessages((pre) => {\n      const idx = pre.findIndex((x) => x.id === answer.id);\n\n      if (idx !== -1) {\n        return pre.map((x) => {\n          if (x.id === answer.id) {\n            return { ...x, content: answer.answer };\n          }\n          return x;\n        });\n      }\n\n      return [\n        ...(pre ?? []),\n        {\n          role: MessageType.Assistant,\n          content: answer.answer,\n          reference: answer.reference,\n          id: buildMessageUuid({\n            id: answer.id,\n            role: MessageType.Assistant,\n          }),\n          prompt: answer.prompt,\n          audio_binary: answer.audio_binary,\n          ...omit(answer, 'reference'),\n        },\n      ];\n    });\n  }, []);\n\n  const removeLatestMessage = useCallback(() => {\n    setDerivedMessages((pre) => {\n      const nextMessages = pre?.slice(0, -2) ?? [];\n      return nextMessages;\n    });\n  }, []);\n\n  const removeMessageById = useCallback(\n    (messageId: string) => {\n      setDerivedMessages((pre) => {\n        const nextMessages = pre?.filter((x) => x.id !== messageId) ?? [];\n        return nextMessages;\n      });\n    },\n    [setDerivedMessages],\n  );\n\n  const removeMessagesAfterCurrentMessage = useCallback(\n    (messageId: string) => {\n      setDerivedMessages((pre) => {\n        const index = pre.findIndex((x) => x.id === messageId);\n        if (index !== -1) {\n          let nextMessages = pre.slice(0, index + 2) ?? [];\n          const latestMessage = nextMessages.at(-1);\n          nextMessages = latestMessage\n            ? [\n                ...nextMessages.slice(0, -1),\n                {\n                  ...latestMessage,\n                  content: '',\n                  reference: undefined,\n                  prompt: undefined,\n                },\n              ]\n            : nextMessages;\n          return nextMessages;\n        }\n        return pre;\n      });\n    },\n    [setDerivedMessages],\n  );\n\n  return {\n    ref,\n    derivedMessages,\n    setDerivedMessages,\n    addNewestQuestion,\n    addNewestAnswer,\n    removeLatestMessage,\n    removeMessageById,\n    addNewestOneQuestion,\n    addNewestOneAnswer,\n    removeMessagesAfterCurrentMessage,\n  };\n};\n\nexport interface IRemoveMessageById {\n  removeMessageById(messageId: string): void;\n}\n\nexport const useRemoveMessagesAfterCurrentMessage = (\n  setCurrentConversation: (\n    callback: (state: IClientConversation) => IClientConversation,\n  ) => void,\n) => {\n  const removeMessagesAfterCurrentMessage = useCallback(\n    (messageId: string) => {\n      setCurrentConversation((pre) => {\n        const index = pre.message?.findIndex((x) => x.id === messageId);\n        if (index !== -1) {\n          let nextMessages = pre.message?.slice(0, index + 2) ?? [];\n          const latestMessage = nextMessages.at(-1);\n          nextMessages = latestMessage\n            ? [\n                ...nextMessages.slice(0, -1),\n                {\n                  ...latestMessage,\n                  content: '',\n                  reference: undefined,\n                  prompt: undefined,\n                },\n              ]\n            : nextMessages;\n          return {\n            ...pre,\n            message: nextMessages,\n          };\n        }\n        return pre;\n      });\n    },\n    [setCurrentConversation],\n  );\n\n  return { removeMessagesAfterCurrentMessage };\n};\n\nexport interface IRegenerateMessage {\n  regenerateMessage?: (message: Message) => void;\n}\n\nexport const useRegenerateMessage = ({\n  removeMessagesAfterCurrentMessage,\n  sendMessage,\n  messages,\n}: {\n  removeMessagesAfterCurrentMessage(messageId: string): void;\n  sendMessage({\n    message,\n  }: {\n    message: Message;\n    messages?: Message[];\n  }): void | Promise<any>;\n  messages: Message[];\n}) => {\n  const regenerateMessage = useCallback(\n    async (message: Message) => {\n      if (message.id) {\n        removeMessagesAfterCurrentMessage(message.id);\n        const index = messages.findIndex((x) => x.id === message.id);\n        let nextMessages;\n        if (index !== -1) {\n          nextMessages = messages.slice(0, index);\n        }\n        sendMessage({\n          message: { ...message, id: uuid() },\n          messages: nextMessages,\n        });\n      }\n    },\n    [removeMessagesAfterCurrentMessage, sendMessage, messages],\n  );\n\n  return { regenerateMessage };\n};\n\n// #endregion\n\n/**\n *\n * @param defaultId\n * used to switch between different items, similar to radio\n * @returns\n */\nexport const useSelectItem = (defaultId?: string) => {\n  const [selectedId, setSelectedId] = useState('');\n\n  const handleItemClick = useCallback(\n    (id: string) => () => {\n      setSelectedId(id);\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (defaultId) {\n      setSelectedId(defaultId);\n    }\n  }, [defaultId]);\n\n  return { selectedId, handleItemClick };\n};\n\nexport const useFetchModelId = () => {\n  const { data: tenantInfo } = useFetchTenantInfo(true);\n\n  return tenantInfo?.llm_id ?? '';\n};\n\nconst ChunkTokenNumMap = {\n  naive: 128,\n  knowledge_graph: 8192,\n};\n\nexport const useHandleChunkMethodSelectChange = (form: FormInstance) => {\n  // const form = Form.useFormInstance();\n  const handleChange = useCallback(\n    (value: string) => {\n      if (value in ChunkTokenNumMap) {\n        form.setFieldValue(\n          ['parser_config', 'chunk_token_num'],\n          ChunkTokenNumMap[value as keyof typeof ChunkTokenNumMap],\n        );\n      }\n    },\n    [form],\n  );\n\n  return handleChange;\n};\n\n// reset form fields when modal is form, closed\nexport const useResetFormOnCloseModal = ({\n  form,\n  visible,\n}: {\n  form: FormInstance;\n  visible?: boolean;\n}) => {\n  const prevOpenRef = useRef<boolean>();\n  useEffect(() => {\n    prevOpenRef.current = visible;\n  }, [visible]);\n  const prevOpen = prevOpenRef.current;\n\n  useEffect(() => {\n    if (!visible && prevOpen) {\n      form.resetFields();\n    }\n  }, [form, prevOpen, visible]);\n};\n","import {\n  KnowledgeRouteKey,\n  KnowledgeSearchParams,\n} from '@/constants/knowledge';\nimport { useCallback } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'umi';\n\nexport enum SegmentIndex {\n  Second = '2',\n  Third = '3',\n}\n\nexport const useSegmentedPathName = (index: SegmentIndex) => {\n  const { pathname } = useLocation();\n\n  const pathArray = pathname.split('/');\n  return pathArray[index] || '';\n};\n\nexport const useSecondPathName = () => {\n  return useSegmentedPathName(SegmentIndex.Second);\n};\n\nexport const useThirdPathName = () => {\n  return useSegmentedPathName(SegmentIndex.Third);\n};\n\nexport const useGetKnowledgeSearchParams = () => {\n  const [currentQueryParameters] = useSearchParams();\n\n  return {\n    documentId:\n      currentQueryParameters.get(KnowledgeSearchParams.DocumentId) || '',\n    knowledgeId:\n      currentQueryParameters.get(KnowledgeSearchParams.KnowledgeId) || '',\n  };\n};\n\nexport const useNavigateWithFromState = () => {\n  const navigate = useNavigate();\n  return useCallback(\n    (path: string) => {\n      navigate(path, { state: { from: path } });\n    },\n    [navigate],\n  );\n};\n\nexport const useNavigateToDataset = () => {\n  const navigate = useNavigate();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  return useCallback(() => {\n    navigate(`/knowledge/${KnowledgeRouteKey.Dataset}?id=${knowledgeId}`);\n  }, [knowledgeId, navigate]);\n};\n\nexport const useGetPaginationParams = () => {\n  const [currentQueryParameters] = useSearchParams();\n\n  return {\n    page: currentQueryParameters.get('page') || 1,\n    size: currentQueryParameters.get('size') || 10,\n  };\n};\n\nexport const useSetPaginationParams = () => {\n  const [queryParameters, setSearchParams] = useSearchParams();\n  // const newQueryParameters: URLSearchParams = useMemo(\n  //   () => new URLSearchParams(queryParameters.toString()),\n  //   [queryParameters],\n  // );\n\n  const setPaginationParams = useCallback(\n    (page: number = 1, pageSize?: number) => {\n      queryParameters.set('page', page.toString());\n      if (pageSize) {\n        queryParameters.set('size', pageSize.toString());\n      }\n      setSearchParams(queryParameters);\n    },\n    [setSearchParams, queryParameters],\n  );\n\n  return {\n    setPaginationParams,\n    page: Number(queryParameters.get('page')) || 1,\n    size: Number(queryParameters.get('size')) || 10,\n  };\n};\n","import { IRenameTag } from '@/interfaces/database/knowledge';\nimport {\n  IFetchDocumentListRequestBody,\n  IFetchKnowledgeListRequestBody,\n  IFetchKnowledgeListRequestParams,\n} from '@/interfaces/request/knowledge';\nimport api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request, { post } from '@/utils/request';\n\nconst {\n  create_kb,\n  update_kb,\n  rm_kb,\n  get_kb_detail,\n  kb_list,\n  get_document_list,\n  document_change_status,\n  document_rm,\n  document_delete,\n  document_create,\n  document_change_parser,\n  document_thumbnails,\n  chunk_list,\n  create_chunk,\n  set_chunk,\n  get_chunk,\n  switch_chunk,\n  rm_chunk,\n  retrieval_test,\n  document_rename,\n  document_run,\n  document_upload,\n  web_crawl,\n  knowledge_graph,\n  document_infos,\n  upload_and_parse,\n  listTagByKnowledgeIds,\n  setMeta,\n} = api;\n\nconst methods = {\n  // 知识库管理\n  createKb: {\n    url: create_kb,\n    method: 'post',\n  },\n  updateKb: {\n    url: update_kb,\n    method: 'post',\n  },\n  rmKb: {\n    url: rm_kb,\n    method: 'post',\n  },\n  get_kb_detail: {\n    url: get_kb_detail,\n    method: 'get',\n  },\n  getList: {\n    url: kb_list,\n    method: 'post',\n  },\n  // document manager\n  get_document_list: {\n    url: get_document_list,\n    method: 'get',\n  },\n  document_change_status: {\n    url: document_change_status,\n    method: 'post',\n  },\n  document_rm: {\n    url: document_rm,\n    method: 'post',\n  },\n  document_rename: {\n    url: document_rename,\n    method: 'post',\n  },\n  document_create: {\n    url: document_create,\n    method: 'post',\n  },\n  document_run: {\n    url: document_run,\n    method: 'post',\n  },\n  document_change_parser: {\n    url: document_change_parser,\n    method: 'post',\n  },\n  document_thumbnails: {\n    url: document_thumbnails,\n    method: 'get',\n  },\n  document_upload: {\n    url: document_upload,\n    method: 'post',\n  },\n  web_crawl: {\n    url: web_crawl,\n    method: 'post',\n  },\n  document_infos: {\n    url: document_infos,\n    method: 'post',\n  },\n  setMeta: {\n    url: setMeta,\n    method: 'post',\n  },\n  // chunk管理\n  chunk_list: {\n    url: chunk_list,\n    method: 'post',\n  },\n  create_chunk: {\n    url: create_chunk,\n    method: 'post',\n  },\n  set_chunk: {\n    url: set_chunk,\n    method: 'post',\n  },\n  get_chunk: {\n    url: get_chunk,\n    method: 'get',\n  },\n  switch_chunk: {\n    url: switch_chunk,\n    method: 'post',\n  },\n  rm_chunk: {\n    url: rm_chunk,\n    method: 'post',\n  },\n  retrieval_test: {\n    url: retrieval_test,\n    method: 'post',\n  },\n  knowledge_graph: {\n    url: knowledge_graph,\n    method: 'get',\n  },\n  document_delete: {\n    url: document_delete,\n    method: 'delete',\n  },\n  upload_and_parse: {\n    url: upload_and_parse,\n    method: 'post',\n  },\n  listTagByKnowledgeIds: {\n    url: listTagByKnowledgeIds,\n    method: 'get',\n  },\n};\n\nconst kbService = registerServer<keyof typeof methods>(methods, request);\n\nexport const listTag = (knowledgeId: string) =>\n  request.get(api.listTag(knowledgeId));\n\nexport const removeTag = (knowledgeId: string, tags: string[]) =>\n  post(api.removeTag(knowledgeId), { tags });\n\nexport const renameTag = (\n  knowledgeId: string,\n  { fromTag, toTag }: IRenameTag,\n) => post(api.renameTag(knowledgeId), { fromTag, toTag });\n\nexport function getKnowledgeGraph(knowledgeId: string) {\n  return request.get(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport function deleteKnowledgeGraph(knowledgeId: string) {\n  return request.delete(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport const listDataset = (\n  params?: IFetchKnowledgeListRequestParams,\n  body?: IFetchKnowledgeListRequestBody,\n) => request.post(api.kb_list, { data: body || {}, params });\n\nexport const listDocument = (\n  params?: IFetchKnowledgeListRequestParams,\n  body?: IFetchDocumentListRequestBody,\n) => request.post(api.get_document_list, { data: body || {}, params });\n\nexport default kbService;\n","import {\n  ChatVariableEnabledField,\n  EmptyConversationId,\n} from '@/constants/chat';\nimport { Message } from '@/interfaces/database/chat';\nimport { IMessage } from '@/pages/chat/interface';\nimport { omit } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nexport const isConversationIdExist = (conversationId: string) => {\n  return conversationId !== EmptyConversationId && conversationId !== '';\n};\n\nexport const buildMessageUuid = (message: Partial<Message | IMessage>) => {\n  if ('id' in message && message.id) {\n    return message.id;\n  }\n  return uuid();\n};\n\nexport const buildMessageListWithUuid = (messages?: Message[]) => {\n  return (\n    messages?.map((x: Message | IMessage) => ({\n      ...omit(x, 'reference'),\n      id: buildMessageUuid(x),\n    })) ?? []\n  );\n};\n\nexport const getConversationId = () => {\n  return uuid().replace(/-/g, '');\n};\n\n// When rendering each message, add a prefix to the id to ensure uniqueness.\nexport const buildMessageUuidWithRole = (\n  message: Partial<Message | IMessage>,\n) => {\n  return `${message.role}_${message.id}`;\n};\n\n// Preprocess LaTeX equations to be rendered by KaTeX\n// ref: https://github.com/remarkjs/react-markdown/issues/785\n\nexport const preprocessLaTeX = (content: string) => {\n  const blockProcessedContent = content.replace(\n    /\\\\\\[([\\s\\S]*?)\\\\\\]/g,\n    (_, equation) => `$$${equation}$$`,\n  );\n  const inlineProcessedContent = blockProcessedContent.replace(\n    /\\\\\\(([\\s\\S]*?)\\\\\\)/g,\n    (_, equation) => `$${equation}$`,\n  );\n  return inlineProcessedContent;\n};\n\nexport function replaceThinkToSection(text: string = '') {\n  const pattern = /<think>([\\s\\S]*?)<\\/think>/g;\n\n  const result = text.replace(pattern, '<section class=\"think\">$1</section>');\n\n  return result;\n}\n\nexport function setInitialChatVariableEnabledFieldValue(\n  field: ChatVariableEnabledField,\n) {\n  return false;\n  return field !== ChatVariableEnabledField.MaxTokensEnabled;\n}\n\nconst ShowImageFields = ['image', 'table'];\n\nexport function showImage(filed?: string) {\n  return ShowImageFields.some((x) => x === filed);\n}\n\nexport function setChatVariableEnabledFieldValuePage() {\n  const variableCheckBoxFieldMap = Object.values(\n    ChatVariableEnabledField,\n  ).reduce<Record<string, boolean>>((pre, cur) => {\n    pre[cur] = cur !== ChatVariableEnabledField.MaxTokensEnabled;\n    return pre;\n  }, {});\n\n  return variableCheckBoxFieldMap;\n}\n","import { Images, SupportedPreviewDocumentTypes } from '@/constants/common';\nimport { IReferenceChunk } from '@/interfaces/database/chat';\nimport { IChunk } from '@/interfaces/database/knowledge';\nimport { UploadFile } from 'antd';\nimport { get } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nexport const buildChunkHighlights = (\n  selectedChunk: IChunk | IReferenceChunk,\n  size: { width: number; height: number },\n) => {\n  return Array.isArray(selectedChunk?.positions) &&\n    selectedChunk.positions.every((x) => Array.isArray(x))\n    ? selectedChunk?.positions?.map((x) => {\n        const boundingRect = {\n          width: size.width,\n          height: size.height,\n          x1: x[1],\n          x2: x[2],\n          y1: x[3],\n          y2: x[4],\n        };\n        return {\n          id: uuid(),\n          comment: {\n            text: '',\n            emoji: '',\n          },\n          content: {\n            text:\n              get(selectedChunk, 'content_with_weight') ||\n              get(selectedChunk, 'content', ''),\n          },\n          position: {\n            boundingRect: boundingRect,\n            rects: [boundingRect],\n            pageNumber: x[0],\n          },\n        };\n      })\n    : [];\n};\n\nexport const isFileUploadDone = (file: UploadFile) => file.status === 'done';\n\nexport const getExtension = (name: string) =>\n  name?.slice(name.lastIndexOf('.') + 1).toLowerCase() ?? '';\n\nexport const isPdf = (name: string) => {\n  return getExtension(name) === 'pdf';\n};\n\nexport const getUnSupportedFilesCount = (message: string) => {\n  return message.split('\\n').length;\n};\n\nexport const isSupportedPreviewDocumentType = (fileExtension: string) => {\n  return SupportedPreviewDocumentTypes.includes(fileExtension);\n};\n\nexport const isImage = (image: string) => {\n  return [...Images, 'svg'].some((x) => x === image);\n};\n","var map = {\n\t\"./akshare.svg\": 26032,\n\t\"./api.svg\": 30747,\n\t\"./arxiv.svg\": 90854,\n\t\"./assistant.svg\": 4159,\n\t\"./baidu-fanyi.svg\": 83544,\n\t\"./baidu.svg\": 92892,\n\t\"./begin.svg\": 69779,\n\t\"./bing.svg\": 55914,\n\t\"./cancel.svg\": 8156,\n\t\"./chat-app-cube.svg\": 34339,\n\t\"./chat-configuration-atom.svg\": 57950,\n\t\"./chat-star.svg\": 49570,\n\t\"./chunk-method/book-01.svg\": 38726,\n\t\"./chunk-method/book-02.svg\": 21357,\n\t\"./chunk-method/book-03.svg\": 88093,\n\t\"./chunk-method/book-04.svg\": 58355,\n\t\"./chunk-method/chunk-empty.svg\": 16035,\n\t\"./chunk-method/knowledge-graph-01.svg\": 42576,\n\t\"./chunk-method/knowledge-graph-02.svg\": 46853,\n\t\"./chunk-method/law-01.svg\": 54530,\n\t\"./chunk-method/law-02.svg\": 75787,\n\t\"./chunk-method/manual-01.svg\": 64179,\n\t\"./chunk-method/manual-02.svg\": 40547,\n\t\"./chunk-method/manual-03.svg\": 1437,\n\t\"./chunk-method/manual-04.svg\": 81486,\n\t\"./chunk-method/media-01.svg\": 33952,\n\t\"./chunk-method/media-02.svg\": 93802,\n\t\"./chunk-method/naive-01.svg\": 88488,\n\t\"./chunk-method/naive-02.svg\": 74795,\n\t\"./chunk-method/one-01.svg\": 88533,\n\t\"./chunk-method/one-02.svg\": 99199,\n\t\"./chunk-method/one-03.svg\": 23192,\n\t\"./chunk-method/one-04.svg\": 72906,\n\t\"./chunk-method/paper-01.svg\": 64018,\n\t\"./chunk-method/paper-02.svg\": 77250,\n\t\"./chunk-method/presentation-01.svg\": 87162,\n\t\"./chunk-method/presentation-02.svg\": 59640,\n\t\"./chunk-method/qa-01.svg\": 39420,\n\t\"./chunk-method/qa-02.svg\": 55086,\n\t\"./chunk-method/resume-01.svg\": 76604,\n\t\"./chunk-method/resume-02.svg\": 96131,\n\t\"./chunk-method/table-01.svg\": 42743,\n\t\"./chunk-method/table-02.svg\": 84817,\n\t\"./chunk-method/tag-01.svg\": 96953,\n\t\"./chunk-method/tag-02.svg\": 82472,\n\t\"./concentrator.svg\": 86933,\n\t\"./crawler.svg\": 71090,\n\t\"./database.svg\": 38575,\n\t\"./deepl.svg\": 98301,\n\t\"./delete.svg\": 71483,\n\t\"./disable.svg\": 84377,\n\t\"./duck.svg\": 24287,\n\t\"./email.svg\": 10808,\n\t\"./enable.svg\": 8207,\n\t\"./es.svg\": 96492,\n\t\"./exesql.svg\": 43004,\n\t\"./file-icon/aep.svg\": 83889,\n\t\"./file-icon/ai.svg\": 28897,\n\t\"./file-icon/avi.svg\": 27635,\n\t\"./file-icon/css.svg\": 52229,\n\t\"./file-icon/csv.svg\": 50747,\n\t\"./file-icon/dmg.svg\": 71691,\n\t\"./file-icon/doc.svg\": 35354,\n\t\"./file-icon/docx.svg\": 69139,\n\t\"./file-icon/eps.svg\": 43279,\n\t\"./file-icon/exe.svg\": 46462,\n\t\"./file-icon/fig.svg\": 33179,\n\t\"./file-icon/folder.svg\": 54168,\n\t\"./file-icon/gif.svg\": 73845,\n\t\"./file-icon/html.svg\": 53682,\n\t\"./file-icon/indd.svg\": 26763,\n\t\"./file-icon/java.svg\": 13916,\n\t\"./file-icon/jpeg.svg\": 19525,\n\t\"./file-icon/jpg.svg\": 24674,\n\t\"./file-icon/js.svg\": 38470,\n\t\"./file-icon/json.svg\": 56373,\n\t\"./file-icon/md.svg\": 77357,\n\t\"./file-icon/mkv.svg\": 49197,\n\t\"./file-icon/mp3.svg\": 44538,\n\t\"./file-icon/mp4.svg\": 52038,\n\t\"./file-icon/mpeg.svg\": 77747,\n\t\"./file-icon/pdf.svg\": 82938,\n\t\"./file-icon/png.svg\": 71915,\n\t\"./file-icon/ppt.svg\": 85173,\n\t\"./file-icon/pptx.svg\": 62133,\n\t\"./file-icon/psd.svg\": 30182,\n\t\"./file-icon/rss.svg\": 38428,\n\t\"./file-icon/sql.svg\": 78501,\n\t\"./file-icon/svg.svg\": 72515,\n\t\"./file-icon/tiff.svg\": 4502,\n\t\"./file-icon/txt.svg\": 55773,\n\t\"./file-icon/wav.svg\": 63645,\n\t\"./file-icon/webp.svg\": 87260,\n\t\"./file-icon/xls.svg\": 5343,\n\t\"./file-icon/xlsx.svg\": 41475,\n\t\"./file-icon/xml.svg\": 38476,\n\t\"./file-management.svg\": 39121,\n\t\"./github.svg\": 69696,\n\t\"./google-scholar.svg\": 99466,\n\t\"./google.svg\": 18176,\n\t\"./graph.svg\": 57355,\n\t\"./invoke-ai.svg\": 82888,\n\t\"./jin10.svg\": 31801,\n\t\"./keyword.svg\": 30552,\n\t\"./knowledge-base.svg\": 87055,\n\t\"./knowledge-configration.svg\": 96450,\n\t\"./knowledge-dataset.svg\": 9385,\n\t\"./knowledge-testing.svg\": 65376,\n\t\"./langfuse.svg\": 6514,\n\t\"./llm/anthropic.svg\": 74768,\n\t\"./llm/azure.svg\": 99817,\n\t\"./llm/baai.svg\": 93594,\n\t\"./llm/baichuan.svg\": 6507,\n\t\"./llm/bedrock.svg\": 30818,\n\t\"./llm/chat-minimax.svg\": 69534,\n\t\"./llm/cohere.svg\": 86198,\n\t\"./llm/deepseek.svg\": 23476,\n\t\"./llm/fish-audio.svg\": 97300,\n\t\"./llm/gemini.svg\": 69156,\n\t\"./llm/github.svg\": 29034,\n\t\"./llm/google-cloud.svg\": 75383,\n\t\"./llm/google.svg\": 93926,\n\t\"./llm/gpustack.svg\": 41538,\n\t\"./llm/groq-next.svg\": 43719,\n\t\"./llm/huggingface.svg\": 20566,\n\t\"./llm/hunyuan.svg\": 10266,\n\t\"./llm/jina.svg\": 19765,\n\t\"./llm/lepton-ai.svg\": 68341,\n\t\"./llm/lm-studio.svg\": 77894,\n\t\"./llm/local-ai.svg\": 97354,\n\t\"./llm/mistral.svg\": 58247,\n\t\"./llm/modelscope.svg\": 21248,\n\t\"./llm/moonshot.svg\": 98184,\n\t\"./llm/nomic-ai.svg\": 14860,\n\t\"./llm/novita-ai.svg\": 72584,\n\t\"./llm/nvidia.svg\": 33325,\n\t\"./llm/ollama.svg\": 59488,\n\t\"./llm/open-router.svg\": 23258,\n\t\"./llm/openai-api.svg\": 63715,\n\t\"./llm/openai.svg\": 81459,\n\t\"./llm/perfx-cloud.svg\": 39886,\n\t\"./llm/ppio.svg\": 89957,\n\t\"./llm/replicate.svg\": 13492,\n\t\"./llm/sentence-transformers.svg\": 85448,\n\t\"./llm/siliconflow.svg\": 65762,\n\t\"./llm/spark.svg\": 4216,\n\t\"./llm/stepfun.svg\": 53618,\n\t\"./llm/tencent-cloud.svg\": 96734,\n\t\"./llm/together-ai.svg\": 65167,\n\t\"./llm/tongyi.svg\": 74296,\n\t\"./llm/upstage.svg\": 30464,\n\t\"./llm/vllm.svg\": 91333,\n\t\"./llm/volc_engine.svg\": 25210,\n\t\"./llm/voyage.svg\": 6385,\n\t\"./llm/wenxin.svg\": 34981,\n\t\"./llm/xinference.svg\": 76577,\n\t\"./llm/yi.svg\": 20447,\n\t\"./llm/yiyan.svg\": 55103,\n\t\"./llm/youdao.svg\": 81010,\n\t\"./llm/zhipu.svg\": 19568,\n\t\"./login-avatars.svg\": 68683,\n\t\"./login-background.svg\": 89624,\n\t\"./login-star.svg\": 31130,\n\t\"./logo-with-text-white.svg\": 49313,\n\t\"./logout.svg\": 67487,\n\t\"./minio.svg\": 32382,\n\t\"./model-providers.svg\": 70410,\n\t\"./moon.svg\": 22350,\n\t\"./more-model.svg\": 88458,\n\t\"./more.svg\": 1333,\n\t\"./move.svg\": 90076,\n\t\"./mysql.svg\": 37124,\n\t\"./navigation-pointer.svg\": 1979,\n\t\"./next-login-bg.svg\": 33391,\n\t\"./note.svg\": 28687,\n\t\"./nothing.svg\": 47138,\n\t\"./paper-clip.svg\": 2306,\n\t\"./password.svg\": 33530,\n\t\"./plus-circle-fill.svg\": 3804,\n\t\"./plus.svg\": 75350,\n\t\"./profile.svg\": 1769,\n\t\"./prompt.svg\": 49261,\n\t\"./pubmed.svg\": 78566,\n\t\"./qweather.svg\": 56077,\n\t\"./redis.svg\": 43867,\n\t\"./refresh.svg\": 96198,\n\t\"./resize.svg\": 80415,\n\t\"./run.svg\": 91449,\n\t\"./select-files-end.svg\": 14387,\n\t\"./select-files-start.svg\": 16734,\n\t\"./selected-files-collapse.svg\": 40975,\n\t\"./sso.svg\": 51653,\n\t\"./storage.svg\": 99021,\n\t\"./switch.svg\": 1311,\n\t\"./team.svg\": 52381,\n\t\"./template.svg\": 63993,\n\t\"./translation.svg\": 40724,\n\t\"./tushare.svg\": 16521,\n\t\"./wencai.svg\": 72835,\n\t\"./wikipedia.svg\": 18684,\n\t\"./yahoo-finance.svg\": 7957\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 78131;"],"names":["requireContext","routeList","require","keys","map","key","name","replace","value","error","console","warn","SvgIcon","_ref","width","height","imgClass","restProps","_objectWithoutProperties","_excluded","ListItem","find","item","_jsx","Icon","_objectSpread","component","src","alt","className","cn","LlmIcon","_ref2","_ref2$height","_ref2$width","_ref2$size","size","icon","IconMap","concat","Avatar","shape","UserOutlined","KnowledgeRouteKey","RunningStatus","ModelVariableType","settledModelVariableMap","_defineProperty","Improvise","temperature","top_p","frequency_penalty","presence_penalty","max_tokens","Precise","Balance","LlmModelType","KnowledgeSearchParams","DocumentType","DocumentParserType","useGetDocumentUrl","documentId","useCallback","id","api_host","useGetChunkHighlights","selectedChunk","_useState","useState","_useState2","_slicedToArray","setSize","highlights","useMemo","buildChunkHighlights","setWidthAndHeight","pre","useFetchNextDocumentList","_queryFn","knowledgeId","useGetKnowledgeSearchParams","_useHandleSearchChang","useHandleSearchChange","searchString","handleInputChange","_useGetPaginationWith","useGetPaginationWithRouter","pagination","setPagination","useParams","_useQuery","useQuery","queryKey","initialData","docs","total","refetchInterval","enabled","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ret","wrap","_context","prev","next","listDocument","kb_id","keywords","page_size","pageSize","page","current","sent","data","code","abrupt","stop","apply","arguments","loading","isFetching","onInputChange","e","documents","useSetNextDocumentStatus","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","_callee2","status","_yield$kbService$docu","_context2","kbService","document_change_status","doc_id","Number","message","success","i18n","t","invalidateQueries","_x","isPending","setDocumentStatus","mutateAsync","useSaveNextDocumentName","_mutationFn2","_useMutation2","_callee3","_yield$kbService$docu2","_context3","document_rename","_x2","saveName","useCreateNextDocument","_mutationFn3","_useSetPaginationPara","useSetPaginationParams","setPaginationParams","_useMutation3","_callee4","_yield$kbService$docu3","_context4","document_create","_x3","createDocument","useSetNextDocumentParser","_mutationFn4","_useMutation4","_callee5","_ref3","parserId","parserConfig","_yield$kbService$docu4","_context5","document_change_parser","parser_id","parser_config","_x4","setDocumentParser","useUploadNextDocument","_mutationFn5","_useMutation5","_callee6","fileList","formData","_context6","FormData","append","forEach","file","document_upload","get","t0","_x5","uploadDocument","useNextWebCrawl","_mutationFn6","_useMutation6","_callee7","_ref4","url","_context7","web_crawl","_x6","webCrawl","useRunNextDocument","_mutationFn7","_useMutation7","_callee8","_ref5","documentIds","run","shouldDelete","_context8","document_run","doc_ids","delete","_x7","runDocumentByIds","useFetchDocumentInfosByIds","_queryFn2","_useState3","_useState4","ids","setDocumentIds","idList","filter","x","_useQuery2","length","_callee9","_yield$kbService$docu5","_context9","document_infos","useFetchDocumentThumbnailsByIds","_queryFn3","_useState5","_useState6","_useQuery3","_callee10","_yield$kbService$docu6","_context10","document_thumbnails","useRemoveNextDocument","_mutationFn8","_useMutation8","_callee11","_yield$kbService$docu7","_context11","document_rm","_x8","removeDocument","useDeleteDocument","_mutationFn9","_useMutation9","_callee12","_context12","document_delete","_x9","deleteDocument","useUploadAndParseDocument","uploadMethod","_mutationFn10","_useMutation10","_callee13","_ref6","conversationId","_data","_data2","_context13","upload_and_parse","chatService","uploadAndParseExternal","_x10","uploadAndParseDocument","useParseDocument","_mutationFn11","_useMutation11","_callee14","_data3","_context14","post","api","parse","_x11","parseDocument","useSetDocumentMeta","_mutationFn12","_useMutation12","_callee15","params","_yield$kbService$setM","_data4","_context15","setMeta","meta","_x12","setDocumentMeta","useKnowledgeBaseId","_useSearchParams","useSearchParams","useFetchKnowledgeBaseConfiguration","knowledgeBaseId","gcTime","_data$data","_yield$kbService$get_","get_kb_detail","useFetchKnowledgeList","shouldFilterListWithoutDocument","undefined","_data$data$kbs","_data$data2","_yield$listDataset","list","listDataset","kbs","chunk_num","useSelectKnowledgeOptions","label","useInfiniteFetchKnowledgeList","debouncedSearchString","useDebounce","wait","_useInfiniteQuery","useInfiniteQuery","_data$data3","pageParam","_yield$listDataset2","initialPageParam","getNextPageParam","lastPage","pages","lastPageParam","fetchNextPage","hasNextPage","isFetchingNextPage","useCreateKnowledge","_yield$kbService$crea","_yield$kbService$crea2","createKb","createKnowledge","useDeleteKnowledge","_data$data4","_yield$kbService$rmKb","rmKb","deleteKnowledge","useUpdateKnowledge","shouldFetchList","_yield$kbService$upda","_yield$kbService$upda2","updateKb","saveKnowledgeConfiguration","useTestChunkRetrieval","values","_values$kb_id","_data$data5","_yield$kbService$retr","res","retrieval_test","doc_aggs","chunks","testChunk","useTestChunkAllRetrieval","_useSetPaginationPara2","_values$kb_id2","_data$data6","_yield$kbService$retr2","testChunkAll","useChunkIsTesting","useIsMutating","useSelectTestingResult","_data$at","useMutationState","filters","select","mutation","state","at","useSelectIsTestingSuccess","useAllTestingSuccess","useAllTestingResult","_data$at2","useFetchTagList","_queryFn4","_yield$listTag","listTag","useDeleteTag","tags","_data$data7","_yield$removeTag","removeTag","deleteTag","useRenameTag","_data$data8","_yield$renameTag","renameTag","useTagIsRenaming","useFetchTagListByKnowledgeIds","_queryFn5","knowledgeIds","setKnowledgeIds","_useQuery4","_yield$kbService$list","listTagByKnowledgeIds","kb_ids","join","useFetchKnowledgeGraph","_queryFn6","_useQuery5","graph","mind_map","_yield$getKnowledgeGr","getKnowledgeGraph","useRemoveKnowledgeGraph","_yield$deleteKnowledg","deleteKnowledgeGraph","removeKnowledgeGraph","useSetSelectedRecord","currentRecord","setCurrentRecord","setRecord","record","setSearchString","target","useChangeLanguage","useTranslation","saveSetting","useSaveSetting","lng","changeLanguage","LanguageTranslationMap","language","useTranslate","onPageChange","pageNumber","setCurrentPagination","showQuickJumper","showSizeChanger","pageSizeOptions","onChange","showTotal","useFetchAppConf","_useState7","_useState8","appConf","setAppConf","fetchAppConf","axios","useEffect","useSendMessageWithSse","completeConversation","_useState9","_useState10","answer","setAnswer","_useState11","_useState12","done","setDone","timer","useRef","sseRef","initializeSseRef","AbortController","resetAnswer","clearTimeout","setTimeout","send","body","controller","_sseRef$current","_response$body","response","reader","_done","val","d","fetch","method","headers","Authorization","getAuthorization","JSON","stringify","signal","clone","json","pipeThrough","TextDecoderStream","EventSourceParserStream","getReader","read","info","conversation_id","t1","t2","stopOutputMessage","_sseRef$current2","abort","useSpeechWithSse","tts","useHandleMessageInputChange","_useState13","_useState14","setValue","nextValue","replaceAll","useSelectDerivedMessages","_useState15","_useState16","derivedMessages","setDerivedMessages","ref","messages","scrollToBottom","_ref$current","scrollIntoView","behavior","useScrollToBottom","addNewestQuestion","_toConsumableArray","buildMessageUuid","role","MessageType","Assistant","content","addNewestOneQuestion","addNewestAnswer","_pre$slice","slice","reference","prompt","audio_binary","omit","addNewestOneAnswer","findIndex","removeLatestMessage","_pre$slice2","removeMessageById","messageId","_pre$filter","removeMessagesAfterCurrentMessage","index","_pre$slice3","nextMessages","latestMessage","useRegenerateMessage","sendMessage","regenerateMessage","uuid","useSelectItem","defaultId","_useState17","_useState18","selectedId","setSelectedId","handleItemClick","useFetchModelId","_tenantInfo$llm_id","tenantInfo","useFetchTenantInfo","llm_id","ChunkTokenNumMap","naive","knowledge_graph","useHandleChunkMethodSelectChange","form","setFieldValue","useResetFormOnCloseModal","visible","prevOpenRef","prevOpen","resetFields","SegmentIndex","useSegmentedPathName","useLocation","pathname","split","useSecondPathName","Second","useThirdPathName","Third","currentQueryParameters","DocumentId","KnowledgeId","useNavigateWithFromState","navigate","useNavigate","path","from","useNavigateToDataset","Dataset","_useSearchParams5","_useSearchParams6","queryParameters","setSearchParams","set","toString","create_kb","update_kb","rm_kb","kb_list","get_document_list","chunk_list","create_chunk","set_chunk","get_chunk","switch_chunk","rm_chunk","methods","getList","registerServer","request","fromTag","toTag","isConversationIdExist","EmptyConversationId","buildMessageListWithUuid","_messages$map","getConversationId","buildMessageUuidWithRole","preprocessLaTeX","_","equation","replaceThinkToSection","setInitialChatVariableEnabledFieldValue","field","ShowImageFields","showImage","filed","some","setChatVariableEnabledFieldValuePage","Object","ChatVariableEnabledField","reduce","cur","MaxTokensEnabled","_selectedChunk$positi","Array","isArray","positions","every","boundingRect","x1","x2","y1","y2","comment","text","emoji","position","rects","getExtension","_name$slice$toLowerCa","lastIndexOf","toLowerCase","getUnSupportedFilesCount","isSupportedPreviewDocumentType","fileExtension","SupportedPreviewDocumentTypes","includes","isImage","image","Images","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","resolve","module","exports"],"sourceRoot":""}