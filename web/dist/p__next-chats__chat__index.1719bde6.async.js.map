{"version":3,"file":"p__next-chats__chat__index.1719bde6.async.js","mappings":"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","sources":["webpack:///./src/components/switch-fom-field.tsx","webpack:///./src/components/use-knowledge-graph-item.tsx","webpack:///./src/constants/agent.ts","webpack:///./src/pages/next-chats/chat/app-settings/subhead.tsx","webpack:///./src/pages/next-chats/chat/app-settings/chat-basic-settings.tsx","webpack:///./src/pages/next-chats/chat/app-settings/chat-model-settings.tsx","webpack:///./src/pages/next-chats/chat/app-settings/chat-prompt-engine.tsx","webpack:///./src/pages/next-chats/chat/app-settings/index.tsx","webpack:///./src/pages/next-chats/chat/app-settings/use-chat-setting-schema.tsx","webpack:///./src/components/chat-input.tsx","webpack:///./src/pages/next-chats/chat/chat-box.tsx","webpack:///./src/pages/next-chats/chat/sessions.tsx","webpack:///./src/pages/next-chats/chat/index.tsx"],"sourcesContent":["import {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n} from '@/components/ui/form';\nimport { Switch } from '@/components/ui/switch';\nimport { cn } from '@/lib/utils';\nimport { ReactNode } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\ninterface SwitchFormItemProps {\n  name: string;\n  label: ReactNode;\n  vertical?: boolean;\n  tooltip?: ReactNode;\n}\n\nexport function SwitchFormField({\n  label,\n  name,\n  vertical = true,\n  tooltip,\n}: SwitchFormItemProps) {\n  const form = useFormContext();\n\n  return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem\n          className={cn('flex', {\n            'gap-2': vertical,\n            'flex-col': vertical,\n            'justify-between': !vertical,\n          })}\n        >\n          <FormLabel tooltip={tooltip}>{label}</FormLabel>\n          <FormControl>\n            <Switch\n              checked={field.value}\n              onCheckedChange={field.onChange}\n              aria-readonly\n              className=\"!m-0\"\n            />\n          </FormControl>\n        </FormItem>\n      )}\n    />\n  );\n}\n","import { Form, Switch } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { SwitchFormField } from './switch-fom-field';\n\ntype IProps = {\n  filedName: string[] | string;\n};\n\nexport function UseKnowledgeGraphItem({ filedName }: IProps) {\n  const { t } = useTranslation();\n\n  return (\n    <Form.Item\n      label={t('chat.useKnowledgeGraph')}\n      tooltip={t('chat.useKnowledgeGraphTip')}\n      name={filedName}\n      initialValue={false}\n    >\n      <Switch></Switch>\n    </Form.Item>\n  );\n}\n\ninterface UseKnowledgeGraphFormFieldProps {\n  name: string;\n}\n\nexport function UseKnowledgeGraphFormField({\n  name,\n}: UseKnowledgeGraphFormFieldProps) {\n  const { t } = useTranslation();\n\n  return (\n    <SwitchFormField\n      name={name}\n      label={t('chat.useKnowledgeGraph')}\n      tooltip={t('chat.useKnowledgeGraphTip')}\n    ></SwitchFormField>\n  );\n}\n","export enum ProgrammingLanguage {\n  Python = 'python',\n  Javascript = 'javascript',\n}\n\nexport const CodeTemplateStrMap = {\n  [ProgrammingLanguage.Python]: `def main(arg1: str, arg2: str) -> str:\n    return f\"result: {arg1 + arg2}\"\n`,\n  [ProgrammingLanguage.Javascript]: `const axios = require('axios');\nasync function main(args) {\n  try {\n    const response = await axios.get('https://github.com/infiniflow/ragflow');\n    console.log('Body:', response.data);\n  } catch (error) {\n    console.error('Error:', error.message);\n  }\n}\n\nmodule.exports = { main };\n`,\n};\n\nexport enum AgentGlobals {\n  SysQuery = 'sys.query',\n  SysUserId = 'sys.user_id',\n  SysConversationTurns = 'sys.conversation_turns',\n  SysFiles = 'sys.files',\n}\n","import { PropsWithChildren } from 'react';\n\nexport function Subhead({ children }: PropsWithChildren) {\n  return (\n    <div className=\"text-xl font-bold mb-4 text-colors-text-neutral-strong\">\n      {children}\n    </div>\n  );\n}\n","'use client';\n\nimport { FileUploader } from '@/components/file-uploader';\nimport { KnowledgeBaseFormField } from '@/components/knowledge-base-item';\nimport { SwitchFormField } from '@/components/switch-fom-field';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useFormContext } from 'react-hook-form';\nimport { Subhead } from './subhead';\n\nexport default function ChatBasicSetting() {\n  const { t } = useTranslate('chat');\n  const form = useFormContext();\n\n  return (\n    <section>\n      <Subhead>Basic settings</Subhead>\n      <div className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name={'icon'}\n          render={({ field }) => (\n            <div className=\"space-y-6\">\n              <FormItem className=\"w-full\">\n                <FormLabel>{t('assistantAvatar')}</FormLabel>\n                <FormControl>\n                  <FileUploader\n                    value={field.value}\n                    onValueChange={field.onChange}\n                    maxFileCount={1}\n                    maxSize={4 * 1024 * 1024}\n                    // progresses={progresses}\n                    // pass the onUpload function here for direct upload\n                    // onUpload={uploadFiles}\n                    // disabled={isUploading}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            </div>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('assistantName')}</FormLabel>\n              <FormControl>\n                <Input {...field}></Input>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('description')}</FormLabel>\n              <FormControl>\n                <Input {...field}></Input>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name={'prompt_config.empty_response'}\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('emptyResponse')}</FormLabel>\n              <FormControl>\n                <Input {...field}></Input>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name={'prompt_config.prologue'}\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('setAnOpener')}</FormLabel>\n              <FormControl>\n                <Input {...field}></Input>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <SwitchFormField\n          name={'prompt_config.quote'}\n          label={t('quote')}\n        ></SwitchFormField>\n        <SwitchFormField\n          name={'prompt_config.keyword'}\n          label={t('keyword')}\n        ></SwitchFormField>\n        <SwitchFormField\n          name={'prompt_config.tts'}\n          label={t('tts')}\n        ></SwitchFormField>\n        <KnowledgeBaseFormField></KnowledgeBaseFormField>\n      </div>\n    </section>\n  );\n}\n","import { LlmSettingFieldItems } from '@/components/llm-setting-items/next';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useFormContext } from 'react-hook-form';\nimport { Subhead } from './subhead';\n\nexport function ChatModelSettings() {\n  const { t } = useTranslate('chat');\n  const form = useFormContext();\n\n  return (\n    <section>\n      <Subhead>Model Setting</Subhead>\n      <div className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"prompt_config.system\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('system')}</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Tell us a little bit about yourself\"\n                  className=\"resize-none\"\n                  {...field}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <LlmSettingFieldItems></LlmSettingFieldItems>\n      </div>\n    </section>\n  );\n}\n","'use client';\n\nimport { RerankFormFields } from '@/components/rerank';\nimport { SimilaritySliderFormField } from '@/components/similarity-slider';\nimport { SwitchFormField } from '@/components/switch-fom-field';\nimport { TopNFormField } from '@/components/top-n-item';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Textarea } from '@/components/ui/textarea';\nimport { UseKnowledgeGraphFormField } from '@/components/use-knowledge-graph-item';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useFormContext } from 'react-hook-form';\nimport { Subhead } from './subhead';\n\nexport function ChatPromptEngine() {\n  const { t } = useTranslate('chat');\n  const form = useFormContext();\n\n  return (\n    <section>\n      <Subhead>Prompt engine</Subhead>\n      <div className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"prompt_config.system\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('system')}</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Tell us a little bit about yourself\"\n                  className=\"resize-none\"\n                  {...field}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <SimilaritySliderFormField></SimilaritySliderFormField>\n        <TopNFormField></TopNFormField>\n        <SwitchFormField\n          name={'prompt_config.refine_multiturn'}\n          label={t('multiTurn')}\n        ></SwitchFormField>\n        <UseKnowledgeGraphFormField name=\"prompt_config.use_kg\"></UseKnowledgeGraphFormField>\n        <RerankFormFields></RerankFormFields>\n      </div>\n    </section>\n  );\n}\n","import { Button } from '@/components/ui/button';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { z } from 'zod';\nimport ChatBasicSetting from './chat-basic-settings';\nimport { ChatModelSettings } from './chat-model-settings';\nimport { ChatPromptEngine } from './chat-prompt-engine';\nimport { useChatSettingSchema } from './use-chat-setting-schema';\n\nexport function AppSettings() {\n  const formSchema = useChatSettingSchema();\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      language: 'English',\n      prompt_config: {\n        quote: true,\n        keyword: false,\n        tts: false,\n        use_kg: false,\n        refine_multiturn: true,\n      },\n      top_n: 8,\n      vector_similarity_weight: 0.2,\n      top_k: 1024,\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values);\n  }\n\n  return (\n    <section className=\"py-6 w-[500px] max-w-[25%] \">\n      <div className=\"text-2xl font-bold mb-4 text-colors-text-neutral-strong px-6\">\n        App settings\n      </div>\n      <div className=\"overflow-auto max-h-[81vh] px-6 \">\n        <FormProvider {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <ChatBasicSetting></ChatBasicSetting>\n            <ChatPromptEngine></ChatPromptEngine>\n            <ChatModelSettings></ChatModelSettings>\n          </form>\n        </FormProvider>\n      </div>\n      <div className=\"p-6 text-center\">\n        <p className=\"text-colors-text-neutral-weak mb-1\">\n          There are unsaved changes\n        </p>\n        <Button variant={'tertiary'} className=\"w-full\">\n          Update\n        </Button>\n      </div>\n    </section>\n  );\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { z } from 'zod';\n\nexport function useChatSettingSchema() {\n  const { t } = useTranslate('chat');\n\n  const promptConfigSchema = z.object({\n    quote: z.boolean(),\n    keyword: z.boolean(),\n    tts: z.boolean(),\n    empty_response: z.string().min(1, {\n      message: t('emptyResponse'),\n    }),\n    prologue: z.string().min(1, {}),\n    system: z.string().min(1, { message: t('systemMessage') }),\n    refine_multiturn: z.boolean(),\n    use_kg: z.boolean(),\n  });\n\n  const formSchema = z.object({\n    name: z.string().min(1, { message: t('assistantNameMessage') }),\n    icon: z.array(z.instanceof(File)),\n    language: z.string().min(1, {\n      message: 'Username must be at least 2 characters.',\n    }),\n    description: z.string(),\n    kb_ids: z.array(z.string()).min(0, {\n      message: 'Username must be at least 1 characters.',\n    }),\n    prompt_config: promptConfigSchema,\n    top_n: z.number(),\n    vector_similarity_weight: z.number(),\n    top_k: z.number(),\n  });\n\n  return formSchema;\n}\n","import { useEventListener } from 'ahooks';\nimport { Mic, Paperclip, Send } from 'lucide-react';\nimport { useRef, useState } from 'react';\nimport { Button } from './ui/button';\nimport { Textarea } from './ui/textarea';\n\nexport function ChatInput() {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const [textareaHeight, setTextareaHeight] = useState<number>(40);\n\n  useEventListener(\n    'keydown',\n    (ev) => {\n      if (ev.shiftKey && ev.code === 'Enter') {\n        setTextareaHeight((h) => {\n          return h + 10;\n        });\n      }\n    },\n    {\n      target: textareaRef,\n    },\n  );\n\n  return (\n    <section className=\"flex items-end bg-colors-background-neutral-strong px-4 py-3 rounded-xl m-8\">\n      <Button variant={'icon'} className=\"w-10 h-10\">\n        <Mic />\n      </Button>\n      <Textarea\n        ref={textareaRef}\n        placeholder=\"Tell us a little bit about yourself \"\n        className=\"resize-none focus-visible:ring-0 focus-visible:ring-offset-0 bg-transparent border-none min-h-0 max-h-20\"\n        style={{ height: textareaHeight }}\n      />\n      <div className=\"flex gap-2\">\n        <Button variant={'icon'} size={'icon'}>\n          <Paperclip />\n        </Button>\n        <Button variant={'tertiary'} size={'icon'}>\n          <Send />\n        </Button>\n      </div>\n    </section>\n  );\n}\n","import { ChatInput } from '@/components/chat-input';\n\nexport function ChatBox() {\n  return (\n    <section className=\"border-x flex-1\">\n      <ChatInput></ChatInput>\n    </section>\n  );\n}\n","import { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { EllipsisVertical, Plus } from 'lucide-react';\n\nfunction SessionCard() {\n  return (\n    <Card className=\"bg-colors-background-inverse-weak border-colors-outline-neutral-standard\">\n      <CardContent className=\"px-3 py-2 flex justify-between items-center\">\n        xxx\n        <Button variant={'icon'} size={'icon'}>\n          <EllipsisVertical />\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function Sessions() {\n  const sessionList = new Array(10).fill(1);\n\n  return (\n    <section className=\"p-6 w-[400px] max-w-[20%]\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <span className=\"text-colors-text-neutral-strong text-2xl font-bold\">\n          Sessions\n        </span>\n        <Button variant={'icon'} size={'icon'}>\n          <Plus></Plus>\n        </Button>\n      </div>\n      <div className=\"space-y-4\">\n        {sessionList.map((x) => (\n          <SessionCard key={x.id}></SessionCard>\n        ))}\n      </div>\n    </section>\n  );\n}\n","import { PageHeader } from '@/components/page-header';\nimport { Button } from '@/components/ui/button';\nimport { useNavigatePage } from '@/hooks/logic-hooks/navigate-hooks';\nimport { EllipsisVertical } from 'lucide-react';\nimport { AppSettings } from './app-settings';\nimport { ChatBox } from './chat-box';\nimport { Sessions } from './sessions';\n\nexport default function Chat() {\n  const { navigateToChatList } = useNavigatePage();\n\n  return (\n    <section className=\"h-full flex flex-col\">\n      <PageHeader back={navigateToChatList} title=\"Chat app 01\">\n        <div className=\"flex items-center gap-2\">\n          <Button variant={'icon'} size={'icon'}>\n            <EllipsisVertical />\n          </Button>\n          <Button variant={'tertiary'} size={'sm'}>\n            Publish\n          </Button>\n        </div>\n      </PageHeader>\n      <div className=\"flex flex-1\">\n        <Sessions></Sessions>\n        <ChatBox></ChatBox>\n        <AppSettings></AppSettings>\n      </div>\n    </section>\n  );\n}\n"],"names":["SwitchFormField","_ref","label","name","_ref$vertical","vertical","tooltip","form","useFormContext","_jsx","FormField","control","render","_ref2","field","_jsxs","FormItem","className","cn","children","FormLabel","FormControl","Switch","checked","value","onCheckedChange","onChange","UseKnowledgeGraphItem","filedName","t","useTranslation","Form","Item","initialValue","UseKnowledgeGraphFormField","ProgrammingLanguage","CodeTemplateStrMap","_defineProperty","Python","Javascript","AgentGlobals","Subhead","ChatBasicSetting","useTranslate","FileUploader","onValueChange","maxFileCount","maxSize","FormMessage","Input","_objectSpread","_ref3","_ref4","_ref5","KnowledgeBaseFormField","ChatModelSettings","Textarea","placeholder","LlmSettingFieldItems","ChatPromptEngine","SimilaritySliderFormField","TopNFormField","RerankFormFields","AppSettings","promptConfigSchema","formSchema","z","object","quote","keyword","tts","empty_response","string","min","message","prologue","system","refine_multiturn","use_kg","icon","array","File","language","description","kb_ids","prompt_config","top_n","number","vector_similarity_weight","top_k","useForm","resolver","zodResolver","defaultValues","FormProvider","onSubmit","handleSubmit","values","console","log","Button","variant","ChatInput","textareaRef","useRef","_useState","useState","_useState2","_slicedToArray","textareaHeight","setTextareaHeight","useEventListener","ev","shiftKey","code","h","target","Mic","ref","style","height","size","Paperclip","Send","ChatBox","SessionCard","Card","CardContent","EllipsisVertical","Sessions","sessionList","Array","fill","Plus","map","x","id","Chat","navigateToChatList","useNavigatePage","PageHeader","back","title"],"sourceRoot":""}