{"version":3,"file":"8843.b264b542.async.js","mappings":"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","sources":["webpack:///./node_modules/@radix-ui/react-popover/node_modules/@radix-ui/primitive/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-compose-refs/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-popover/node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack:///./node_modules/@radix-ui/react-popover/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack:///./node_modules/@radix-ui/react-popover/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs","webpack:///./node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-slot/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-primitive/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-arrow/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-popper/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-portal/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-presence/dist/index.mjs","webpack:///./node_modules/@radix-ui/react-popover/dist/index.mjs"],"sourcesContent":["// packages/core/primitive/src/primitive.tsx\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\nexport {\n  composeEventHandlers\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/compose-refs/src/composeRefs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { computePosition, arrow as arrow$2, offset as offset$1, shift as shift$1, limitShift as limitShift$1, flip as flip$1, size as size$1, autoPlacement as autoPlacement$1, hide as hide$1, inline as inline$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n","// packages/react/slot/src/Slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nvar Slot = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n  if (slottable) {\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement) ? newElement.props.children : null;\n      } else {\n        return child;\n      }\n    });\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n  }\n  return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n});\nSlot.displayName = \"Slot\";\nvar SlotClone = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      // @ts-ignore\n      ref: forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef\n    });\n  }\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\nSlotClone.displayName = \"SlotClone\";\nvar Slottable = ({ children }) => {\n  return /* @__PURE__ */ jsx(Fragment, { children });\n};\nfunction isSlottable(child) {\n  return React.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Slot;\nexport {\n  Root,\n  Slot,\n  Slottable\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/primitive/src/Primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ jsx(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\nexport {\n  Primitive,\n  Root,\n  dispatchDiscreteCustomEvent\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/arrow/src/Arrow.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"Arrow\";\nvar Arrow = React.forwardRef((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return /* @__PURE__ */ jsx(\n    Primitive.svg,\n    {\n      ...arrowProps,\n      ref: forwardedRef,\n      width,\n      height,\n      viewBox: \"0 0 30 10\",\n      preserveAspectRatio: \"none\",\n      children: props.asChild ? children : /* @__PURE__ */ jsx(\"polygon\", { points: \"0,0 30,0 15,10\" })\n    }\n  );\n});\nArrow.displayName = NAME;\nvar Root = Arrow;\nexport {\n  Arrow,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/popper/src/Popper.tsx\nimport * as React from \"react\";\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size\n} from \"@floating-ui/react-dom\";\nimport * as ArrowPrimitive from \"@radix-ui/react-arrow\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SIDE_OPTIONS = [\"top\", \"right\", \"bottom\", \"left\"];\nvar ALIGN_OPTIONS = [\"start\", \"center\", \"end\"];\nvar POPPER_NAME = \"Popper\";\nvar [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\nvar [PopperProvider, usePopperContext] = createPopperContext(POPPER_NAME);\nvar Popper = (props) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState(null);\n  return /* @__PURE__ */ jsx(PopperProvider, { scope: __scopePopper, anchor, onAnchorChange: setAnchor, children });\n};\nPopper.displayName = POPPER_NAME;\nvar ANCHOR_NAME = \"PopperAnchor\";\nvar PopperAnchor = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    React.useEffect(() => {\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n    return virtualRef ? null : /* @__PURE__ */ jsx(Primitive.div, { ...anchorProps, ref: composedRefs });\n  }\n);\nPopperAnchor.displayName = ANCHOR_NAME;\nvar CONTENT_NAME = \"PopperContent\";\nvar [PopperContentProvider, useContentContext] = createPopperContext(CONTENT_NAME);\nvar PopperContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = \"bottom\",\n      sideOffset = 0,\n      align = \"center\",\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = \"partial\",\n      hideWhenDetached = false,\n      updatePositionStrategy = \"optimized\",\n      onPlaced,\n      ...contentProps\n    } = props;\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n    const [content, setContent] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [arrow, setArrow] = React.useState(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n    const desiredPlacement = side + (align !== \"center\" ? \"-\" + align : \"\");\n    const collisionPadding = typeof collisionPaddingProp === \"number\" ? collisionPaddingProp : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries\n    };\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: \"fixed\",\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === \"always\"\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions && shift({\n          mainAxis: true,\n          crossAxis: false,\n          limiter: sticky === \"partial\" ? limitShift() : void 0,\n          ...detectOverflowOptions\n        }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty(\"--radix-popper-available-width\", `${availableWidth}px`);\n            contentStyle.setProperty(\"--radix-popper-available-height\", `${availableHeight}px`);\n            contentStyle.setProperty(\"--radix-popper-anchor-width\", `${anchorWidth}px`);\n            contentStyle.setProperty(\"--radix-popper-anchor-height\", `${anchorHeight}px`);\n          }\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: \"referenceHidden\", ...detectOverflowOptions })\n      ]\n    });\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const [contentZIndex, setContentZIndex] = React.useState();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n    return /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        ref: refs.setFloating,\n        \"data-radix-popper-content-wrapper\": \"\",\n        style: {\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : \"translate(0, -200%)\",\n          // keep off the page when measuring\n          minWidth: \"max-content\",\n          zIndex: contentZIndex,\n          [\"--radix-popper-transform-origin\"]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y\n          ].join(\" \"),\n          // hide the content if using the hide middleware and should be hidden\n          // set visibility to hidden and disable pointer events so the UI behaves\n          // as if the PopperContent isn't there at all\n          ...middlewareData.hide?.referenceHidden && {\n            visibility: \"hidden\",\n            pointerEvents: \"none\"\n          }\n        },\n        dir: props.dir,\n        children: /* @__PURE__ */ jsx(\n          PopperContentProvider,\n          {\n            scope: __scopePopper,\n            placedSide,\n            onArrowChange: setArrow,\n            arrowX,\n            arrowY,\n            shouldHideArrow: cannotCenterArrow,\n            children: /* @__PURE__ */ jsx(\n              Primitive.div,\n              {\n                \"data-side\": placedSide,\n                \"data-align\": placedAlign,\n                ...contentProps,\n                ref: composedRefs,\n                style: {\n                  ...contentProps.style,\n                  // if the PopperContent hasn't been placed yet (not all measurements done)\n                  // we prevent animations so that users's animation don't kick in too early referring wrong sides\n                  animation: !isPositioned ? \"none\" : void 0\n                }\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nPopperContent.displayName = CONTENT_NAME;\nvar ARROW_NAME = \"PopperArrow\";\nvar OPPOSITE_SIDE = {\n  top: \"bottom\",\n  right: \"left\",\n  bottom: \"top\",\n  left: \"right\"\n};\nvar PopperArrow = React.forwardRef(function PopperArrow2(props, forwardedRef) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    /* @__PURE__ */ jsx(\n      \"span\",\n      {\n        ref: contentContext.onArrowChange,\n        style: {\n          position: \"absolute\",\n          left: contentContext.arrowX,\n          top: contentContext.arrowY,\n          [baseSide]: 0,\n          transformOrigin: {\n            top: \"\",\n            right: \"0 0\",\n            bottom: \"center 0\",\n            left: \"100% 0\"\n          }[contentContext.placedSide],\n          transform: {\n            top: \"translateY(100%)\",\n            right: \"translateY(50%) rotate(90deg) translateX(-50%)\",\n            bottom: `rotate(180deg)`,\n            left: \"translateY(50%) rotate(-90deg) translateX(50%)\"\n          }[contentContext.placedSide],\n          visibility: contentContext.shouldHideArrow ? \"hidden\" : void 0\n        },\n        children: /* @__PURE__ */ jsx(\n          ArrowPrimitive.Root,\n          {\n            ...arrowProps,\n            ref: forwardedRef,\n            style: {\n              ...arrowProps.style,\n              // ensures the element can be measured correctly (mostly for if SVG)\n              display: \"block\"\n            }\n          }\n        )\n      }\n    )\n  );\n});\nPopperArrow.displayName = ARROW_NAME;\nfunction isNotNull(value) {\n  return value !== null;\n}\nvar transformOrigin = (options) => ({\n  name: \"transformOrigin\",\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: \"0%\", center: \"50%\", end: \"100%\" }[placedAlign];\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n    let x = \"\";\n    let y = \"\";\n    if (placedSide === \"bottom\") {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === \"top\") {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === \"right\") {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === \"left\") {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  }\n});\nfunction getSideAndAlignFromPlacement(placement) {\n  const [side, align = \"center\"] = placement.split(\"-\");\n  return [side, align];\n}\nvar Root2 = Popper;\nvar Anchor = PopperAnchor;\nvar Content = PopperContent;\nvar Arrow = PopperArrow;\nexport {\n  ALIGN_OPTIONS,\n  Anchor,\n  Arrow,\n  Content,\n  Popper,\n  PopperAnchor,\n  PopperArrow,\n  PopperContent,\n  Root2 as Root,\n  SIDE_OPTIONS,\n  createPopperScope\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/portal/src/Portal.tsx\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PORTAL_NAME = \"Portal\";\nvar Portal = React.forwardRef((props, forwardedRef) => {\n  const { container: containerProp, ...portalProps } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || mounted && globalThis?.document?.body;\n  return container ? ReactDOM.createPortal(/* @__PURE__ */ jsx(Primitive.div, { ...portalProps, ref: forwardedRef }), container) : null;\n});\nPortal.displayName = PORTAL_NAME;\nvar Root = Portal;\nexport {\n  Portal,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/presence/src/Presence.tsx\nimport * as React2 from \"react\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\n\n// packages/react/presence/src/useStateMachine.tsx\nimport * as React from \"react\";\nfunction useStateMachine(initialState, machine) {\n  return React.useReducer((state, event) => {\n    const nextState = machine[state][event];\n    return nextState ?? state;\n  }, initialState);\n}\n\n// packages/react/presence/src/Presence.tsx\nvar Presence = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n  const child = typeof children === \"function\" ? children({ present: presence.isPresent }) : React2.Children.only(children);\n  const ref = useComposedRefs(presence.ref, getElementRef(child));\n  const forceMount = typeof children === \"function\";\n  return forceMount || presence.isPresent ? React2.cloneElement(child, { ref }) : null;\n};\nPresence.displayName = \"Presence\";\nfunction usePresence(present) {\n  const [node, setNode] = React2.useState();\n  const stylesRef = React2.useRef({});\n  const prevPresentRef = React2.useRef(present);\n  const prevAnimationNameRef = React2.useRef(\"none\");\n  const initialState = present ? \"mounted\" : \"unmounted\";\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: \"unmounted\",\n      ANIMATION_OUT: \"unmountSuspended\"\n    },\n    unmountSuspended: {\n      MOUNT: \"mounted\",\n      ANIMATION_END: \"unmounted\"\n    },\n    unmounted: {\n      MOUNT: \"mounted\"\n    }\n  });\n  React2.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === \"mounted\" ? currentAnimationName : \"none\";\n  }, [state]);\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n      if (present) {\n        send(\"MOUNT\");\n      } else if (currentAnimationName === \"none\" || styles?.display === \"none\") {\n        send(\"UNMOUNT\");\n      } else {\n        const isAnimating = prevAnimationName !== currentAnimationName;\n        if (wasPresent && isAnimating) {\n          send(\"ANIMATION_OUT\");\n        } else {\n          send(\"UNMOUNT\");\n        }\n      }\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n  useLayoutEffect(() => {\n    if (node) {\n      let timeoutId;\n      const ownerWindow = node.ownerDocument.defaultView ?? window;\n      const handleAnimationEnd = (event) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          send(\"ANIMATION_END\");\n          if (!prevPresentRef.current) {\n            const currentFillMode = node.style.animationFillMode;\n            node.style.animationFillMode = \"forwards\";\n            timeoutId = ownerWindow.setTimeout(() => {\n              if (node.style.animationFillMode === \"forwards\") {\n                node.style.animationFillMode = currentFillMode;\n              }\n            });\n          }\n        }\n      };\n      const handleAnimationStart = (event) => {\n        if (event.target === node) {\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener(\"animationstart\", handleAnimationStart);\n      node.addEventListener(\"animationcancel\", handleAnimationEnd);\n      node.addEventListener(\"animationend\", handleAnimationEnd);\n      return () => {\n        ownerWindow.clearTimeout(timeoutId);\n        node.removeEventListener(\"animationstart\", handleAnimationStart);\n        node.removeEventListener(\"animationcancel\", handleAnimationEnd);\n        node.removeEventListener(\"animationend\", handleAnimationEnd);\n      };\n    } else {\n      send(\"ANIMATION_END\");\n    }\n  }, [node, send]);\n  return {\n    isPresent: [\"mounted\", \"unmountSuspended\"].includes(state),\n    ref: React2.useCallback((node2) => {\n      if (node2) stylesRef.current = getComputedStyle(node2);\n      setNode(node2);\n    }, [])\n  };\n}\nfunction getAnimationName(styles) {\n  return styles?.animationName || \"none\";\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Presence\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/popover/src/Popover.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { useFocusGuards } from \"@radix-ui/react-focus-guards\";\nimport { FocusScope } from \"@radix-ui/react-focus-scope\";\nimport { useId } from \"@radix-ui/react-id\";\nimport * as PopperPrimitive from \"@radix-ui/react-popper\";\nimport { createPopperScope } from \"@radix-ui/react-popper\";\nimport { Portal as PortalPrimitive } from \"@radix-ui/react-portal\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { hideOthers } from \"aria-hidden\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport { jsx } from \"react/jsx-runtime\";\nvar POPOVER_NAME = \"Popover\";\nvar [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [\n  createPopperScope\n]);\nvar usePopperScope = createPopperScope();\nvar [PopoverProvider, usePopoverContext] = createPopoverContext(POPOVER_NAME);\nvar Popover = (props) => {\n  const {\n    __scopePopover,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = false\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  const triggerRef = React.useRef(null);\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange\n  });\n  return /* @__PURE__ */ jsx(PopperPrimitive.Root, { ...popperScope, children: /* @__PURE__ */ jsx(\n    PopoverProvider,\n    {\n      scope: __scopePopover,\n      contentId: useId(),\n      triggerRef,\n      open,\n      onOpenChange: setOpen,\n      onOpenToggle: React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),\n      hasCustomAnchor,\n      onCustomAnchorAdd: React.useCallback(() => setHasCustomAnchor(true), []),\n      onCustomAnchorRemove: React.useCallback(() => setHasCustomAnchor(false), []),\n      modal,\n      children\n    }\n  ) });\n};\nPopover.displayName = POPOVER_NAME;\nvar ANCHOR_NAME = \"PopoverAnchor\";\nvar PopoverAnchor = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopover, ...anchorProps } = props;\n    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;\n    React.useEffect(() => {\n      onCustomAnchorAdd();\n      return () => onCustomAnchorRemove();\n    }, [onCustomAnchorAdd, onCustomAnchorRemove]);\n    return /* @__PURE__ */ jsx(PopperPrimitive.Anchor, { ...popperScope, ...anchorProps, ref: forwardedRef });\n  }\n);\nPopoverAnchor.displayName = ANCHOR_NAME;\nvar TRIGGER_NAME = \"PopoverTrigger\";\nvar PopoverTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopover, ...triggerProps } = props;\n    const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    const trigger = /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": context.open,\n        \"aria-controls\": context.contentId,\n        \"data-state\": getState(context.open),\n        ...triggerProps,\n        ref: composedTriggerRef,\n        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)\n      }\n    );\n    return context.hasCustomAnchor ? trigger : /* @__PURE__ */ jsx(PopperPrimitive.Anchor, { asChild: true, ...popperScope, children: trigger });\n  }\n);\nPopoverTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"PopoverPortal\";\nvar [PortalProvider, usePortalContext] = createPopoverContext(PORTAL_NAME, {\n  forceMount: void 0\n});\nvar PopoverPortal = (props) => {\n  const { __scopePopover, forceMount, children, container } = props;\n  const context = usePopoverContext(PORTAL_NAME, __scopePopover);\n  return /* @__PURE__ */ jsx(PortalProvider, { scope: __scopePopover, forceMount, children: /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: /* @__PURE__ */ jsx(PortalPrimitive, { asChild: true, container, children }) }) });\n};\nPopoverPortal.displayName = PORTAL_NAME;\nvar CONTENT_NAME = \"PopoverContent\";\nvar PopoverContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: context.modal ? /* @__PURE__ */ jsx(PopoverContentModal, { ...contentProps, ref: forwardedRef }) : /* @__PURE__ */ jsx(PopoverContentNonModal, { ...contentProps, ref: forwardedRef }) });\n  }\n);\nPopoverContent.displayName = CONTENT_NAME;\nvar PopoverContentModal = React.forwardRef(\n  (props, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const contentRef = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const isRightClickOutsideRef = React.useRef(false);\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n    return /* @__PURE__ */ jsx(RemoveScroll, { as: Slot, allowPinchZoom: true, children: /* @__PURE__ */ jsx(\n      PopoverContentImpl,\n      {\n        ...props,\n        ref: composedRefs,\n        trapFocus: context.open,\n        disableOutsidePointerEvents: true,\n        onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          if (!isRightClickOutsideRef.current) context.triggerRef.current?.focus();\n        }),\n        onPointerDownOutside: composeEventHandlers(\n          props.onPointerDownOutside,\n          (event) => {\n            const originalEvent = event.detail.originalEvent;\n            const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n            const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n            isRightClickOutsideRef.current = isRightClick;\n          },\n          { checkForDefaultPrevented: false }\n        ),\n        onFocusOutside: composeEventHandlers(\n          props.onFocusOutside,\n          (event) => event.preventDefault(),\n          { checkForDefaultPrevented: false }\n        )\n      }\n    ) });\n  }\n);\nvar PopoverContentNonModal = React.forwardRef(\n  (props, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n    return /* @__PURE__ */ jsx(\n      PopoverContentImpl,\n      {\n        ...props,\n        ref: forwardedRef,\n        trapFocus: false,\n        disableOutsidePointerEvents: false,\n        onCloseAutoFocus: (event) => {\n          props.onCloseAutoFocus?.(event);\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            event.preventDefault();\n          }\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        },\n        onInteractOutside: (event) => {\n          props.onInteractOutside?.(event);\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === \"pointerdown\") {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n          const target = event.target;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n          if (event.detail.originalEvent.type === \"focusin\" && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }\n      }\n    );\n  }\n);\nvar PopoverContentImpl = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopePopover,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      ...contentProps\n    } = props;\n    const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    useFocusGuards();\n    return /* @__PURE__ */ jsx(\n      FocusScope,\n      {\n        asChild: true,\n        loop: true,\n        trapped: trapFocus,\n        onMountAutoFocus: onOpenAutoFocus,\n        onUnmountAutoFocus: onCloseAutoFocus,\n        children: /* @__PURE__ */ jsx(\n          DismissableLayer,\n          {\n            asChild: true,\n            disableOutsidePointerEvents,\n            onInteractOutside,\n            onEscapeKeyDown,\n            onPointerDownOutside,\n            onFocusOutside,\n            onDismiss: () => context.onOpenChange(false),\n            children: /* @__PURE__ */ jsx(\n              PopperPrimitive.Content,\n              {\n                \"data-state\": getState(context.open),\n                role: \"dialog\",\n                id: context.contentId,\n                ...popperScope,\n                ...contentProps,\n                ref: forwardedRef,\n                style: {\n                  ...contentProps.style,\n                  // re-namespace exposed content custom properties\n                  ...{\n                    \"--radix-popover-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n                    \"--radix-popover-content-available-width\": \"var(--radix-popper-available-width)\",\n                    \"--radix-popover-content-available-height\": \"var(--radix-popper-available-height)\",\n                    \"--radix-popover-trigger-width\": \"var(--radix-popper-anchor-width)\",\n                    \"--radix-popover-trigger-height\": \"var(--radix-popper-anchor-height)\"\n                  }\n                }\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nvar CLOSE_NAME = \"PopoverClose\";\nvar PopoverClose = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopover, ...closeProps } = props;\n    const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        ...closeProps,\n        ref: forwardedRef,\n        onClick: composeEventHandlers(props.onClick, () => context.onOpenChange(false))\n      }\n    );\n  }\n);\nPopoverClose.displayName = CLOSE_NAME;\nvar ARROW_NAME = \"PopoverArrow\";\nvar PopoverArrow = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopover, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopePopover);\n    return /* @__PURE__ */ jsx(PopperPrimitive.Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef });\n  }\n);\nPopoverArrow.displayName = ARROW_NAME;\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root2 = Popover;\nvar Anchor2 = PopoverAnchor;\nvar Trigger = PopoverTrigger;\nvar Portal = PopoverPortal;\nvar Content2 = PopoverContent;\nvar Close = PopoverClose;\nvar Arrow2 = PopoverArrow;\nexport {\n  Anchor2 as Anchor,\n  Arrow2 as Arrow,\n  Close,\n  Content2 as Content,\n  Popover,\n  PopoverAnchor,\n  PopoverArrow,\n  PopoverClose,\n  PopoverContent,\n  PopoverPortal,\n  PopoverTrigger,\n  Portal,\n  Root2 as Root,\n  Trigger,\n  createPopoverScope\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","event","defaultPrevented","setRef","ref","value","current","composeRefs","refs","node","hasCleanup","cleanups","map","cleanup","i","length","useComposedRefs","computeCoordsFromPlacement","_ref","placement","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","side","isVertical","commonX","x","width","commonY","y","height","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","padding","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","rect","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","top","bottom","left","right","getSideOffsets","overflow","isAnySideFullyClipped","some","getCssDimensions","css","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","win","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","scrollLeft","getHTMLOffset","documentElement","scroll","ignoreScrollbarX","htmlRect","scrollTop","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","body","ownerDocument","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","parentNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","htmlOffset","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","svgOffsetParent","topLayer","clippingAncestors","cache","cachedResult","get","result","filter","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","includes","ancestor","set","getClippingElementAncestors","this","_c","concat","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","rectsAreEqual","a","b","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","_io","clearTimeout","disconnect","refresh","skip","threshold","elementRectForRootMargin","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","e","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","alignment","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","offset","arrow","alignmentOffset","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","mainAxisCoord","crossAxisCoord","maxSide","min","max","limitedCoords","enabled","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","initialSideAxis","isBasePlacement","hasFallbackAxisSideDirection","push","placements","overflows","overflowsData","flip","sides","every","_middlewareData$flip2","_overflowsData$filter","nextIndex","index","nextPlacement","reset","resetPlacement","d","sort","_overflowsData$filter2","currentSideAxis","acc","_state$middlewareData","_state$middlewareData2","apply","isYAxis","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","shift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","axis","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition","document","useLayoutEffect","useEffect","deepEqual","toString","keys","isArray","Object","hasOwnProperty","call","key","$$typeof","getDPR","window","defaultView","devicePixelRatio","roundByDPR","dpr","Math","round","useLatestRef","arrow$1","deps","Slot","props","forwardedRef","children","slotProps","childrenArray","toArray","slottable","find","isSlottable","newElement","newChildren","child","count","only","jsx","SlotClone","displayName","childrenRef","getter","getOwnPropertyDescriptor","mayWarn","isReactWarning","getElementRef","mergeProps","Slottable","Fragment","type","childProps","overrideProps","propName","slotPropValue","childPropValue","test","args","join","Primitive","primitive","Node","asChild","primitiveProps","Comp","Symbol","for","Arrow","arrowProps","svg","viewBox","preserveAspectRatio","points","POPPER_NAME","createPopperContext","createPopperScope","PopperProvider","usePopperContext","Popper","__scopePopper","anchor","setAnchor","scope","onAnchorChange","ANCHOR_NAME","PopperAnchor","virtualRef","anchorProps","context","composedRefs","div","CONTENT_NAME","PopperContentProvider","useContentContext","PopperContent","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","collisionPaddingProp","sticky","hideWhenDetached","updatePositionStrategy","onPlaced","contentProps","content","setContent","setArrow","arrowSize","arrowWidth","arrowHeight","desiredPlacement","hasExplicitBoundaries","isNotNull","floatingStyles","isPositioned","externalReference","externalFloating","transform","whileElementsMounted","open","setData","latestMiddleware","setLatestMiddleware","_reference","_setReference","_floating","_setFloating","setReference","referenceRef","setFloating","floatingRef","floatingEl","dataRef","hasWhileElementsMounted","whileElementsMountedRef","platformRef","openRef","then","fullData","isMountedRef","initialStyles","willChange","useFloating","anchorWidth","anchorHeight","contentStyle","style","setProperty","transformOrigin","placedSide","placedAlign","getSideAndAlignFromPlacement","handlePlaced","arrowX","arrowY","cannotCenterArrow","contentZIndex","setContentZIndex","getComputedStyle","zIndex","minWidth","hide","visibility","pointerEvents","dir","onArrowChange","shouldHideArrow","animation","ARROW_NAME","OPPOSITE_SIDE","PopperArrow","contentContext","baseSide","display","isArrowHidden","noArrowAlign","start","end","arrowXCenter","arrowYCenter","split","Root2","Anchor","Content","Portal","container","containerProp","portalProps","mounted","setMounted","globalThis","Presence","present","presence","setNode","stylesRef","prevPresentRef","prevAnimationNameRef","initialState","send","machine","useStateMachine","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","currentAnimationName","getAnimationName","styles","wasPresent","prevAnimationName","ownerWindow","handleAnimationEnd","isCurrentAnimation","animationName","currentFillMode","animationFillMode","handleAnimationStart","isPresent","node2","usePresence","POPOVER_NAME","createPopoverContext","createPopoverScope","usePopperScope","PopoverProvider","usePopoverContext","Popover","__scopePopover","openProp","defaultOpen","onOpenChange","modal","popperScope","triggerRef","hasCustomAnchor","setHasCustomAnchor","setOpen","prop","defaultProp","onChange","contentId","onOpenToggle","prevOpen","onCustomAnchorAdd","onCustomAnchorRemove","PopoverAnchor","TRIGGER_NAME","PopoverTrigger","triggerProps","composedTriggerRef","trigger","button","getState","onClick","PortalProvider","usePortalContext","forceMount","PopoverPortal","PopoverContent","portalContext","PopoverContentModal","PopoverContentNonModal","contentRef","isRightClickOutsideRef","as","allowPinchZoom","PopoverContentImpl","trapFocus","disableOutsidePointerEvents","onCloseAutoFocus","preventDefault","focus","onPointerDownOutside","originalEvent","detail","ctrlLeftClick","ctrlKey","isRightClick","onFocusOutside","hasInteractedOutsideRef","hasPointerDownOutsideRef","onInteractOutside","targetIsTrigger","contains","onOpenAutoFocus","onEscapeKeyDown","loop","trapped","onMountAutoFocus","onUnmountAutoFocus","onDismiss","role","id","CLOSE_NAME","PopoverClose","closeProps","PopoverArrow","Trigger","Content2"],"sourceRoot":""}