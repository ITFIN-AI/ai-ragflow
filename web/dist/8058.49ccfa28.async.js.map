{"version":3,"file":"8058.49ccfa28.async.js","mappings":"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","sources":["webpack:///./node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/UserOutlined.js","webpack:///./node_modules/antd/es/card/Grid.js","webpack:///./node_modules/antd/es/card/style/index.js","webpack:///./node_modules/antd/es/card/Card.js","webpack:///./node_modules/antd/es/card/Meta.js","webpack:///./node_modules/antd/es/card/index.js","webpack:///./node_modules/extend/index.js","webpack:///./node_modules/inline-style-parser/index.js","webpack:///./node_modules/style-to-object/cjs/index.js","webpack:///./node_modules/@ungap/structured-clone/esm/types.js","webpack:///./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack:///./node_modules/@ungap/structured-clone/esm/serialize.js","webpack:///./node_modules/@ungap/structured-clone/esm/index.js","webpack:///./node_modules/comma-separated-tokens/index.js","webpack:///./node_modules/decode-named-character-reference/index.dom.js","webpack:///./node_modules/devlop/lib/default.js","webpack:///./node_modules/hast-util-is-element/lib/index.js","webpack:///./node_modules/hast-util-whitespace/lib/index.js","webpack:///./node_modules/longest-streak/index.js","webpack:///./node_modules/mdast-util-to-string/lib/index.js","webpack:///./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack:///./node_modules/micromark-factory-space/index.js","webpack:///./node_modules/micromark-util-character/index.js","webpack:///./node_modules/micromark-util-chunked/index.js","webpack:///./node_modules/micromark-util-classify-character/index.js","webpack:///./node_modules/micromark-util-combine-extensions/index.js","webpack:///./node_modules/micromark-util-normalize-identifier/index.js","webpack:///./node_modules/micromark-util-resolve-all/index.js","webpack:///./node_modules/property-information/lib/util/schema.js","webpack:///./node_modules/property-information/lib/util/merge.js","webpack:///./node_modules/property-information/lib/util/create.js","webpack:///./node_modules/property-information/lib/xlink.js","webpack:///./node_modules/property-information/lib/xml.js","webpack:///./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack:///./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack:///./node_modules/property-information/lib/xmlns.js","webpack:///./node_modules/property-information/lib/aria.js","webpack:///./node_modules/property-information/lib/html.js","webpack:///./node_modules/property-information/lib/svg.js","webpack:///./node_modules/property-information/index.js","webpack:///./node_modules/property-information/lib/find.js","webpack:///./node_modules/property-information/lib/normalize.js","webpack:///./node_modules/property-information/lib/util/defined-info.js","webpack:///./node_modules/property-information/lib/util/info.js","webpack:///./node_modules/property-information/lib/util/types.js","webpack:///./node_modules/estree-util-is-identifier-name/lib/index.js","webpack:///./node_modules/property-information/lib/hast-to-react.js","webpack:///./node_modules/style-to-object/esm/index.mjs","webpack:///./node_modules/unist-util-stringify-position/lib/index.js","webpack:///./node_modules/vfile-message/lib/index.js","webpack:///./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack:///./node_modules/html-url-attributes/lib/index.js","webpack:///./node_modules/micromark-util-subtokenize/index.js","webpack:///./node_modules/micromark/lib/initialize/content.js","webpack:///./node_modules/micromark/lib/initialize/document.js","webpack:///./node_modules/micromark-core-commonmark/lib/content.js","webpack:///./node_modules/micromark/lib/initialize/flow.js","webpack:///./node_modules/micromark/lib/initialize/text.js","webpack:///./node_modules/micromark/lib/create-tokenizer.js","webpack:///./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack:///./node_modules/micromark-core-commonmark/lib/list.js","webpack:///./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack:///./node_modules/micromark-factory-destination/index.js","webpack:///./node_modules/micromark-factory-label/index.js","webpack:///./node_modules/micromark-factory-title/index.js","webpack:///./node_modules/micromark-factory-whitespace/index.js","webpack:///./node_modules/micromark-core-commonmark/lib/definition.js","webpack:///./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack:///./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack:///./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack:///./node_modules/micromark-util-html-tag-name/index.js","webpack:///./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack:///./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack:///./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack:///./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack:///./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack:///./node_modules/micromark-core-commonmark/lib/label-end.js","webpack:///./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack:///./node_modules/micromark-core-commonmark/lib/attention.js","webpack:///./node_modules/micromark-core-commonmark/lib/autolink.js","webpack:///./node_modules/micromark-core-commonmark/lib/html-text.js","webpack:///./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack:///./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack:///./node_modules/micromark-core-commonmark/lib/code-text.js","webpack:///./node_modules/micromark/lib/constructs.js","webpack:///./node_modules/micromark/lib/preprocess.js","webpack:///./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack:///./node_modules/micromark-util-decode-string/index.js","webpack:///./node_modules/mdast-util-from-markdown/lib/index.js","webpack:///./node_modules/micromark/lib/postprocess.js","webpack:///./node_modules/micromark/lib/parse.js","webpack:///./node_modules/remark-parse/lib/index.js","webpack:///./node_modules/micromark-util-sanitize-uri/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/footer.js","webpack:///./node_modules/mdast-util-to-hast/lib/revert.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack:///./node_modules/trim-lines/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack:///./node_modules/mdast-util-to-hast/lib/state.js","webpack:///./node_modules/mdast-util-to-hast/lib/index.js","webpack:///./node_modules/remark-rehype/lib/index.js","webpack:///./node_modules/bail/index.js","webpack:///./node_modules/is-plain-obj/index.js","webpack:///./node_modules/trough/lib/index.js","webpack:///./node_modules/vfile/lib/minpath.browser.js","webpack:///./node_modules/vfile/lib/minproc.browser.js","webpack:///./node_modules/vfile/lib/minurl.shared.js","webpack:///./node_modules/vfile/lib/minurl.browser.js","webpack:///./node_modules/vfile/lib/index.js","webpack:///./node_modules/unified/lib/callable-instance.js","webpack:///./node_modules/unified/lib/index.js","webpack:///./node_modules/react-markdown/lib/index.js","webpack:///./node_modules/hast-util-from-parse5/node_modules/hast-util-parse-selector/lib/index.js","webpack:///./node_modules/hast-util-from-parse5/node_modules/hastscript/lib/create-h.js","webpack:///./node_modules/hast-util-from-parse5/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","webpack:///./node_modules/hast-util-from-parse5/node_modules/hastscript/lib/index.js","webpack:///./node_modules/vfile-location/lib/index.js","webpack:///./node_modules/hast-util-from-parse5/lib/index.js","webpack:///./node_modules/hast-util-to-parse5/lib/index.js","webpack:///./node_modules/html-void-elements/index.js","webpack:///./node_modules/parse5/dist/common/unicode.js","webpack:///./node_modules/parse5/dist/common/error-codes.js","webpack:///./node_modules/parse5/dist/tokenizer/preprocessor.js","webpack:///./node_modules/parse5/dist/common/token.js","webpack:///./node_modules/entities/lib/esm/generated/decode-data-html.js","webpack:///./node_modules/entities/lib/esm/decode_codepoint.js","webpack:///./node_modules/entities/lib/esm/generated/decode-data-xml.js","webpack:///./node_modules/entities/lib/esm/decode.js","webpack:///./node_modules/parse5/dist/common/html.js","webpack:///./node_modules/parse5/dist/tokenizer/index.js","webpack:///./node_modules/parse5/dist/parser/open-element-stack.js","webpack:///./node_modules/parse5/dist/parser/formatting-element-list.js","webpack:///./node_modules/parse5/dist/tree-adapters/default.js","webpack:///./node_modules/parse5/dist/common/doctype.js","webpack:///./node_modules/parse5/dist/common/foreign-content.js","webpack:///./node_modules/parse5/dist/parser/index.js","webpack:///./node_modules/entities/lib/esm/escape.js","webpack:///./node_modules/parse5/dist/serializer/index.js","webpack:///./node_modules/hast-util-raw/lib/index.js","webpack:///./node_modules/rehype-raw/lib/index.js","webpack:///./node_modules/ccount/index.js","webpack:///./node_modules/mdast-util-find-and-replace/lib/index.js","webpack:///./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack:///./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack:///./node_modules/mdast-util-gfm-footnote/lib/index.js","webpack:///./node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack:///./node_modules/markdown-table/index.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack:///./node_modules/mdast-util-phrasing/lib/index.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack:///./node_modules/mdast-util-gfm-table/lib/index.js","webpack:///./node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack:///./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack:///./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack:///./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack:///./node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack:///./node_modules/micromark-extension-gfm-table/lib/infer.js","webpack:///./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack:///./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack:///./node_modules/remark-gfm/lib/index.js","webpack:///./node_modules/micromark-extension-gfm/index.js","webpack:///./node_modules/mdast-util-gfm/lib/index.js","webpack:///./node_modules/space-separated-tokens/index.js","webpack:///./node_modules/unist-util-is/lib/index.js","webpack:///./node_modules/unist-util-position/lib/index.js","webpack:///./node_modules/unist-util-visit-parents/lib/index.js","webpack:///./node_modules/unist-util-visit/lib/index.js","webpack:///./node_modules/web-namespaces/index.js","webpack:///./node_modules/zwitch/index.js"],"sourcesContent":["// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UserOutlined.displayName = 'UserOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nconst Grid = _a => {\n  var {\n      prefixCls,\n      className,\n      hoverable = true\n    } = _a,\n    props = __rest(_a, [\"prefixCls\", \"className\", \"hoverable\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefix = getPrefixCls('card', prefixCls);\n  const classString = classNames(`${prefix}-grid`, className, {\n    [`${prefix}-grid-hoverable`]: hoverable\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n    className: classString\n  }));\n};\nexport default Grid;","import { unit } from '@ant-design/cssinjs';\nimport { clearFix, resetComponent, textEllipsis } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Styles ==============================\n// ============================== Head ==============================\nconst genCardHeadStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    headerHeight,\n    cardPaddingBase,\n    tabsMarginBottom\n  } = token;\n  return Object.assign(Object.assign({\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    minHeight: headerHeight,\n    marginBottom: -1,\n    padding: `0 ${unit(cardPaddingBase)}`,\n    color: token.colorTextHeading,\n    fontWeight: token.fontWeightStrong,\n    fontSize: token.headerFontSize,\n    background: token.headerBg,\n    borderBottom: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorderSecondary}`,\n    borderRadius: `${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)} 0 0`\n  }, clearFix()), {\n    '&-wrapper': {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    '&-title': Object.assign(Object.assign({\n      display: 'inline-block',\n      flex: 1\n    }, textEllipsis), {\n      [`\n          > ${componentCls}-typography,\n          > ${componentCls}-typography-edit-content\n        `]: {\n        insetInlineStart: 0,\n        marginTop: 0,\n        marginBottom: 0\n      }\n    }),\n    [`${antCls}-tabs-top`]: {\n      clear: 'both',\n      marginBottom: tabsMarginBottom,\n      color: token.colorText,\n      fontWeight: 'normal',\n      fontSize: token.fontSize,\n      '&-bar': {\n        borderBottom: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorderSecondary}`\n      }\n    }\n  });\n};\n// ============================== Grid ==============================\nconst genCardGridStyle = token => {\n  const {\n    cardPaddingBase,\n    colorBorderSecondary,\n    cardShadow,\n    lineWidth\n  } = token;\n  return {\n    width: '33.33%',\n    padding: cardPaddingBase,\n    border: 0,\n    borderRadius: 0,\n    boxShadow: `\n      ${unit(lineWidth)} 0 0 0 ${colorBorderSecondary},\n      0 ${unit(lineWidth)} 0 0 ${colorBorderSecondary},\n      ${unit(lineWidth)} ${unit(lineWidth)} 0 0 ${colorBorderSecondary},\n      ${unit(lineWidth)} 0 0 0 ${colorBorderSecondary} inset,\n      0 ${unit(lineWidth)} 0 0 ${colorBorderSecondary} inset;\n    `,\n    transition: `all ${token.motionDurationMid}`,\n    '&-hoverable:hover': {\n      position: 'relative',\n      zIndex: 1,\n      boxShadow: cardShadow\n    }\n  };\n};\n// ============================== Actions ==============================\nconst genCardActionsStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    actionsLiMargin,\n    cardActionsIconSize,\n    colorBorderSecondary,\n    actionsBg\n  } = token;\n  return Object.assign(Object.assign({\n    margin: 0,\n    padding: 0,\n    listStyle: 'none',\n    background: actionsBg,\n    borderTop: `${unit(token.lineWidth)} ${token.lineType} ${colorBorderSecondary}`,\n    display: 'flex',\n    borderRadius: `0 0 ${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)}`\n  }, clearFix()), {\n    '& > li': {\n      margin: actionsLiMargin,\n      color: token.colorTextDescription,\n      textAlign: 'center',\n      '> span': {\n        position: 'relative',\n        display: 'block',\n        minWidth: token.calc(token.cardActionsIconSize).mul(2).equal(),\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        cursor: 'pointer',\n        '&:hover': {\n          color: token.colorPrimary,\n          transition: `color ${token.motionDurationMid}`\n        },\n        [`a:not(${componentCls}-btn), > ${iconCls}`]: {\n          display: 'inline-block',\n          width: '100%',\n          color: token.colorTextDescription,\n          lineHeight: unit(token.fontHeight),\n          transition: `color ${token.motionDurationMid}`,\n          '&:hover': {\n            color: token.colorPrimary\n          }\n        },\n        [`> ${iconCls}`]: {\n          fontSize: cardActionsIconSize,\n          lineHeight: unit(token.calc(cardActionsIconSize).mul(token.lineHeight).equal())\n        }\n      },\n      '&:not(:last-child)': {\n        borderInlineEnd: `${unit(token.lineWidth)} ${token.lineType} ${colorBorderSecondary}`\n      }\n    }\n  });\n};\n// ============================== Meta ==============================\nconst genCardMetaStyle = token => Object.assign(Object.assign({\n  margin: `${unit(token.calc(token.marginXXS).mul(-1).equal())} 0`,\n  display: 'flex'\n}, clearFix()), {\n  '&-avatar': {\n    paddingInlineEnd: token.padding\n  },\n  '&-detail': {\n    overflow: 'hidden',\n    flex: 1,\n    '> div:not(:last-child)': {\n      marginBottom: token.marginXS\n    }\n  },\n  '&-title': Object.assign({\n    color: token.colorTextHeading,\n    fontWeight: token.fontWeightStrong,\n    fontSize: token.fontSizeLG\n  }, textEllipsis),\n  '&-description': {\n    color: token.colorTextDescription\n  }\n});\n// ============================== Inner ==============================\nconst genCardTypeInnerStyle = token => {\n  const {\n    componentCls,\n    cardPaddingBase,\n    colorFillAlter\n  } = token;\n  return {\n    [`${componentCls}-head`]: {\n      padding: `0 ${unit(cardPaddingBase)}`,\n      background: colorFillAlter,\n      '&-title': {\n        fontSize: token.fontSize\n      }\n    },\n    [`${componentCls}-body`]: {\n      padding: `${unit(token.padding)} ${unit(cardPaddingBase)}`\n    }\n  };\n};\n// ============================== Loading ==============================\nconst genCardLoadingStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    overflow: 'hidden',\n    [`${componentCls}-body`]: {\n      userSelect: 'none'\n    }\n  };\n};\n// ============================== Basic ==============================\nconst genCardStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    cardShadow,\n    cardHeadPadding,\n    colorBorderSecondary,\n    boxShadowTertiary,\n    cardPaddingBase,\n    extraColor\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadiusLG,\n      [`&:not(${componentCls}-bordered)`]: {\n        boxShadow: boxShadowTertiary\n      },\n      [`${componentCls}-head`]: genCardHeadStyle(token),\n      [`${componentCls}-extra`]: {\n        // https://stackoverflow.com/a/22429853/3040605\n        marginInlineStart: 'auto',\n        color: extraColor,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`${componentCls}-body`]: Object.assign({\n        padding: cardPaddingBase,\n        borderRadius: ` 0 0 ${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)}`\n      }, clearFix()),\n      [`${componentCls}-grid`]: genCardGridStyle(token),\n      [`${componentCls}-cover`]: {\n        '> *': {\n          display: 'block',\n          width: '100%'\n        },\n        [`img, img + ${antCls}-image-mask`]: {\n          borderRadius: `${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)} 0 0`\n        }\n      },\n      [`${componentCls}-actions`]: genCardActionsStyle(token),\n      [`${componentCls}-meta`]: genCardMetaStyle(token)\n    }),\n    [`${componentCls}-bordered`]: {\n      border: `${unit(token.lineWidth)} ${token.lineType} ${colorBorderSecondary}`,\n      [`${componentCls}-cover`]: {\n        marginTop: -1,\n        marginInlineStart: -1,\n        marginInlineEnd: -1\n      }\n    },\n    [`${componentCls}-hoverable`]: {\n      cursor: 'pointer',\n      transition: `box-shadow ${token.motionDurationMid}, border-color ${token.motionDurationMid}`,\n      '&:hover': {\n        borderColor: 'transparent',\n        boxShadow: cardShadow\n      }\n    },\n    [`${componentCls}-contain-grid`]: {\n      borderRadius: `${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)} 0 0 `,\n      [`${componentCls}-body`]: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      [`&:not(${componentCls}-loading) ${componentCls}-body`]: {\n        marginBlockStart: token.calc(token.lineWidth).mul(-1).equal(),\n        marginInlineStart: token.calc(token.lineWidth).mul(-1).equal(),\n        padding: 0\n      }\n    },\n    [`${componentCls}-contain-tabs`]: {\n      [`> ${componentCls}-head`]: {\n        minHeight: 0,\n        [`${componentCls}-head-title, ${componentCls}-extra`]: {\n          paddingTop: cardHeadPadding\n        }\n      }\n    },\n    [`${componentCls}-type-inner`]: genCardTypeInnerStyle(token),\n    [`${componentCls}-loading`]: genCardLoadingStyle(token),\n    [`${componentCls}-rtl`]: {\n      direction: 'rtl'\n    }\n  };\n};\n// ============================== Size ==============================\nconst genCardSizeStyle = token => {\n  const {\n    componentCls,\n    cardPaddingSM,\n    headerHeightSM,\n    headerFontSizeSM\n  } = token;\n  return {\n    [`${componentCls}-small`]: {\n      [`> ${componentCls}-head`]: {\n        minHeight: headerHeightSM,\n        padding: `0 ${unit(cardPaddingSM)}`,\n        fontSize: headerFontSizeSM,\n        [`> ${componentCls}-head-wrapper`]: {\n          [`> ${componentCls}-extra`]: {\n            fontSize: token.fontSize\n          }\n        }\n      },\n      [`> ${componentCls}-body`]: {\n        padding: cardPaddingSM\n      }\n    },\n    [`${componentCls}-small${componentCls}-contain-tabs`]: {\n      [`> ${componentCls}-head`]: {\n        [`${componentCls}-head-title, ${componentCls}-extra`]: {\n          paddingTop: 0,\n          display: 'flex',\n          alignItems: 'center'\n        }\n      }\n    }\n  };\n};\nexport const prepareComponentToken = token => ({\n  headerBg: 'transparent',\n  headerFontSize: token.fontSizeLG,\n  headerFontSizeSM: token.fontSize,\n  headerHeight: token.fontSizeLG * token.lineHeightLG + token.padding * 2,\n  headerHeightSM: token.fontSize * token.lineHeight + token.paddingXS * 2,\n  actionsBg: token.colorBgContainer,\n  actionsLiMargin: `${token.paddingSM}px 0`,\n  tabsMarginBottom: -token.padding - token.lineWidth,\n  extraColor: token.colorText\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Card', token => {\n  const cardToken = mergeToken(token, {\n    cardShadow: token.boxShadowCard,\n    cardHeadPadding: token.padding,\n    cardPaddingBase: token.paddingLG,\n    cardActionsIconSize: token.fontSize,\n    cardPaddingSM: 12 // Fixed padding.\n  });\n  return [\n  // Style\n  genCardStyle(cardToken),\n  // Size\n  genCardSizeStyle(cardToken)];\n}, prepareComponentToken);","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport useSize from '../config-provider/hooks/useSize';\nimport Skeleton from '../skeleton';\nimport Tabs from '../tabs';\nimport Grid from './Grid';\nimport useStyle from './style';\nconst ActionNode = props => {\n  const {\n    prefixCls,\n    actions = []\n  } = props;\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: `${prefixCls}-actions`\n  }, actions.map((action, index) => {\n    // Move this out since eslint not allow index key\n    // And eslint-disable makes conflict with rollup\n    // ref https://github.com/ant-design/ant-design/issues/46022\n    const key = `action-${index}`;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        width: `${100 / actions.length}%`\n      },\n      key: key\n    }, /*#__PURE__*/React.createElement(\"span\", null, action));\n  }));\n};\nconst Card = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      style,\n      extra,\n      headStyle = {},\n      bodyStyle = {},\n      title,\n      loading,\n      bordered = true,\n      size: customizeSize,\n      type,\n      cover,\n      actions,\n      tabList,\n      children,\n      activeTabKey,\n      defaultActiveTabKey,\n      tabBarExtraContent,\n      hoverable,\n      tabProps = {}\n    } = props,\n    others = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"style\", \"extra\", \"headStyle\", \"bodyStyle\", \"title\", \"loading\", \"bordered\", \"size\", \"type\", \"cover\", \"actions\", \"tabList\", \"children\", \"activeTabKey\", \"defaultActiveTabKey\", \"tabBarExtraContent\", \"hoverable\", \"tabProps\"]);\n  const {\n    getPrefixCls,\n    direction,\n    card\n  } = React.useContext(ConfigContext);\n  const onTabChange = key => {\n    var _a;\n    (_a = props.onTabChange) === null || _a === void 0 ? void 0 : _a.call(props, key);\n  };\n  const isContainGrid = React.useMemo(() => {\n    let containGrid = false;\n    React.Children.forEach(children, element => {\n      if (element && element.type && element.type === Grid) {\n        containGrid = true;\n      }\n    });\n    return containGrid;\n  }, [children]);\n  const prefixCls = getPrefixCls('card', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const loadingBlock = /*#__PURE__*/React.createElement(Skeleton, {\n    loading: true,\n    active: true,\n    paragraph: {\n      rows: 4\n    },\n    title: false\n  }, children);\n  const hasActiveTabKey = activeTabKey !== undefined;\n  const extraProps = Object.assign(Object.assign({}, tabProps), {\n    [hasActiveTabKey ? 'activeKey' : 'defaultActiveKey']: hasActiveTabKey ? activeTabKey : defaultActiveTabKey,\n    tabBarExtraContent\n  });\n  let head;\n  const mergedSize = useSize(customizeSize);\n  const tabSize = !mergedSize || mergedSize === 'default' ? 'large' : mergedSize;\n  const tabs = tabList ? ( /*#__PURE__*/React.createElement(Tabs, Object.assign({\n    size: tabSize\n  }, extraProps, {\n    className: `${prefixCls}-head-tabs`,\n    onChange: onTabChange,\n    items: tabList.map(_a => {\n      var {\n          tab\n        } = _a,\n        item = __rest(_a, [\"tab\"]);\n      return Object.assign({\n        label: tab\n      }, item);\n    })\n  }))) : null;\n  if (title || extra || tabs) {\n    head = /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-head`,\n      style: headStyle\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-head-wrapper`\n    }, title && /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-head-title`\n    }, title), extra && /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-extra`\n    }, extra)), tabs);\n  }\n  const coverDom = cover ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-cover`\n  }, cover) : null;\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-body`,\n    style: bodyStyle\n  }, loading ? loadingBlock : children);\n  const actionDom = actions && actions.length ? /*#__PURE__*/React.createElement(ActionNode, {\n    prefixCls: prefixCls,\n    actions: actions\n  }) : null;\n  const divProps = omit(others, ['onTabChange']);\n  const classString = classNames(prefixCls, card === null || card === void 0 ? void 0 : card.className, {\n    [`${prefixCls}-loading`]: loading,\n    [`${prefixCls}-bordered`]: bordered,\n    [`${prefixCls}-hoverable`]: hoverable,\n    [`${prefixCls}-contain-grid`]: isContainGrid,\n    [`${prefixCls}-contain-tabs`]: tabList && tabList.length,\n    [`${prefixCls}-${mergedSize}`]: mergedSize,\n    [`${prefixCls}-type-${type}`]: !!type,\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId, cssVarCls);\n  const mergedStyle = Object.assign(Object.assign({}, card === null || card === void 0 ? void 0 : card.style), style);\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: ref\n  }, divProps, {\n    className: classString,\n    style: mergedStyle\n  }), head, coverDom, body, actionDom));\n});\nexport default Card;","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nconst Meta = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      avatar,\n      title,\n      description\n    } = props,\n    others = __rest(props, [\"prefixCls\", \"className\", \"avatar\", \"title\", \"description\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('card', customizePrefixCls);\n  const classString = classNames(`${prefixCls}-meta`, className);\n  const avatarDom = avatar ? ( /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-meta-avatar`\n  }, avatar)) : null;\n  const titleDom = title ? ( /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-meta-title`\n  }, title)) : null;\n  const descriptionDom = description ? ( /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-meta-description`\n  }, description)) : null;\n  const MetaDetail = titleDom || descriptionDom ? ( /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-meta-detail`\n  }, titleDom, descriptionDom)) : null;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, others, {\n    className: classString\n  }), avatarDom, MetaDetail);\n};\nexport default Meta;","\"use client\";\n\nimport InternalCard from './Card';\nimport Grid from './Grid';\nimport Meta from './Meta';\nconst Card = InternalCard;\nCard.Grid = Grid;\nCard.Meta = Meta;\nif (process.env.NODE_ENV !== 'production') {\n  Card.displayName = 'Card';\n}\nexport default Card;","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\nexports.default = StyleToObject;\n//# sourceMappingURL=index.js.map","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is an element.\n * @param {unknown} this\n *   Context object (`this`) to call `test` with\n * @param {unknown} [element]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | null | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n *\n * @typedef {Array<TestFunction | string> | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary element.\n *\n *   * when `string`, checks that the element has that tag name\n *   * when `function`, see `TestFunction`\n *   * when `Array`, checks if one of the subtests pass\n *\n * @callback TestFunction\n *   Check if an element passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Element} element\n *   An element.\n * @param {number | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean | undefined | void}\n *   Whether this element passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `element` is an `Element` and whether it passes the given test.\n *\n * @param element\n *   Thing to check, typically `element`.\n * @param test\n *   Check for a specific element.\n * @param index\n *   Position of `element` in its parent.\n * @param parent\n *   Parent of `element`.\n * @param context\n *   Context object (`this`) to call `test` with.\n * @returns\n *   Whether `element` is an `Element` and passes a test.\n * @throws\n *   When an incorrect `test`, `index`, or `parent` is given; there is no error\n *   thrown when `element` is not a node or not an element.\n */\nexport const isElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((element?: null | undefined) => false) &\n   *   ((element: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((element: unknown, test?: Test, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [element]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parents | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (element, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== null &&\n        index !== undefined &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite `index`')\n      }\n\n      if (\n        parent !== null &&\n        parent !== undefined &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected valid `parent`')\n      }\n\n      if (\n        (index === null || index === undefined) !==\n        (parent === null || parent === undefined)\n      ) {\n        throw new Error('Expected both `index` and `parent`')\n      }\n\n      return looksLikeAnElement(element)\n        ? check.call(context, element, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate a check from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * an `element`, `index`, and `parent`.\n *\n * @param test\n *   A test for a specific element.\n * @returns\n *   A check.\n */\nexport const convertElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      // Assume array.\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as `test`')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction tagNameFactory(check) {\n  return castFactory(tagName)\n\n  /**\n   * @param {Element} element\n   * @returns {boolean}\n   */\n  function tagName(element) {\n    return element.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeAnElement(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} element\n * @returns {element is Element}\n */\nfunction element(element) {\n  return Boolean(\n    element &&\n      typeof element === 'object' &&\n      'type' in element &&\n      element.type === 'element' &&\n      'tagName' in element &&\n      typeof element.tagName === 'string'\n  )\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Element}\n */\nfunction looksLikeAnElement(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    'type' in value &&\n    'tagName' in value\n  )\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} ToHastOptions\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(options || destination)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('hast-util-raw').Options} Options\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  }\n}\n\n/** @type {Code} */\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (default: `true`).\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0]\n    })\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(\n        events.slice(this.map[index][0] + this.map[index][1]),\n        this.map[index][2]\n      )\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n    vecs.push([...events])\n    events.length = 0\n    let slice = vecs.pop()\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n    index += 1\n  }\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === 'lineEnding' ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === 'linePrefix'\n      )\n        index--\n      else break\n    }\n    const tail = index > -1 ? self.events[index][1].type : null\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, 'whitespace')(code)\n    }\n    sizeB += 1\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter('data')\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return headRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return headRowData\n    }\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code)\n    }\n    if (code === 124) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, 'whitespace')(code)\n    }\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1\n      seen = true\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, 'whitespace')(code)\n    }\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, 'whitespace')(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('data')\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return bodyRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return bodyRowData\n    }\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n  const map = new EditMap()\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === 'data' ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === 'data' ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n  return events\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = 'chunkText'\n      start[1].contentType = 'text'\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n"],"names":["props","ref","AntdIcon","icon","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_a","prefixCls","className","hoverable","getPrefixCls","prefix","classString","assign","genCardHeadStyle","token","antCls","componentCls","headerHeight","cardPaddingBase","tabsMarginBottom","display","justifyContent","flexDirection","minHeight","marginBottom","padding","color","colorTextHeading","fontWeight","fontWeightStrong","fontSize","headerFontSize","background","headerBg","borderBottom","lineWidth","lineType","colorBorderSecondary","borderRadius","borderRadiusLG","width","alignItems","flex","insetInlineStart","marginTop","clear","colorText","genCardGridStyle","cardShadow","border","boxShadow","transition","motionDurationMid","position","zIndex","genCardActionsStyle","iconCls","actionsLiMargin","cardActionsIconSize","actionsBg","margin","listStyle","borderTop","colorTextDescription","textAlign","minWidth","calc","mul","equal","lineHeight","cursor","colorPrimary","fontHeight","borderInlineEnd","genCardMetaStyle","marginXXS","paddingInlineEnd","overflow","marginXS","fontSizeLG","genCardTypeInnerStyle","colorFillAlter","genCardLoadingStyle","userSelect","genCardStyle","cardHeadPadding","boxShadowTertiary","extraColor","colorBgContainer","marginInlineStart","marginInlineEnd","borderColor","flexWrap","marginBlockStart","paddingTop","direction","genCardSizeStyle","cardPaddingSM","headerHeightSM","headerFontSizeSM","cardToken","boxShadowCard","paddingLG","lineHeightLG","paddingXS","paddingSM","ActionNode","actions","map","action","index","key","style","Card","customizePrefixCls","rootClassName","extra","headStyle","bodyStyle","title","loading","bordered","size","customizeSize","type","cover","tabList","children","activeTabKey","defaultActiveTabKey","tabBarExtraContent","tabProps","others","card","isContainGrid","containGrid","forEach","element","wrapCSSVar","hashId","cssVarCls","loadingBlock","active","paragraph","rows","hasActiveTabKey","undefined","extraProps","head","mergedSize","useSize","tabSize","tabs","onChange","onTabChange","items","tab","item","label","coverDom","body","actionDom","divProps","omit","mergedStyle","avatar","description","avatarDom","titleDom","descriptionDom","MetaDetail","Grid","Meta","hasOwn","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","declaration","prop","val","ret","property","decl","decls","declarations","__importDefault","mod","__esModule","inline_style_parser_1","iterator","styleObject","default","hasIterator","env","self","globalThis","deserialize","serialized","$","_","as","out","set","unpair","has","get","object","Date","flags","RegExp","Map","Set","add","message","BigInt","deserializer","EMPTY","keys","typeOf","asString","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","valueOf","toJSON","entries","toISOString","serializer","structuredClone","any","parse","tokens","input","String","stringify","values","settings","join","padRight","padLeft","document","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","charCodeAt","ok","unreachable","convertElement","test","check","castFactory","tagName","tagNameFactory","tests","checks","parameters","apply","anyFactory","testFunction","parent","Boolean","looksLikeAnElement","thing","empty","longestStreak","substring","expected","count","max","emptyOptions","one","includeImageAlt","includeHtml","alt","all","result","blankLine","tokenize","effects","nok","code","f","after","partial","factorySpace","limit","Number","POSITIVE_INFINITY","enter","consume","exit","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","splice","list","remove","chunkStart","from","unshift","classifyCharacter","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","normalizeIdentifier","toLowerCase","toUpperCase","resolveAll","events","context","called","resolve","Schema","normal","space","merge","definitions","own","create","definition","properties","info","transform","attributes","mustUseProperty","normalize","attribute","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","number","ariaColIndex","ariaColSpan","ariaControls","spaceSeparated","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","commaSeparated","acceptCharset","accessKey","allow","allowFullScreen","boolean","allowPaymentRequest","allowUserMedia","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","defer","dir","dirName","disabled","download","overloadedBoolean","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","lang","language","loop","low","manifest","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootDelegatesFocus","shadowRootMode","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","translate","typeMustMatch","useMap","wrap","align","aLink","archive","axis","bgColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","codeBase","codeType","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSizeAdjust","fontStretch","fontStyle","fontVariant","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","commaOrSpaceSeparated","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cx","cy","d","defaultAction","descent","diffuseConstant","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","find","schema","Type","rest","camelcase","dashes","kebab","$0","DefinedInfo","super","mark","defined","Info","powers","increment","nameRe","nameReJsx","jsx","hastToReact","stringifyPosition","point","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","ruleId","fatal","file","stack","actual","note","url","emptyMap","dashSomething","tableElements","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","isStaticChildren","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","state","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","parentSchema","findComponentFromName","alignValue","createProperty","createElementProps","createChildren","child","addNode","addChildren","pop","estree","expression","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","isNaN","replacer","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","split","computed","optional","toDash","$1","urlAttributes","subtokenize","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","previous","current","adjust","breaks","sliceStream","next","defineSkip","_gfmTasklistFirstContentOfListItem","write","contentStart","attempt","contentInitial","lineStart","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","eof","seen","disable","null","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","shift","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","lastIndex","Math","ceil","preprocess","combined","remarkParse","doc","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","revert","subtype","suffix","contents","listItemLoose","trimLines","last","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","handlers","handle","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","getPrototypeOf","Symbol","toStringTag","trough","fns","pipeline","middlewareIndex","callback","output","middleware","wrapped","fnExpectsCallback","done","then","middelware","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","proc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","func","setPrototypeOf","names","getOwnPropertyNames","descriptor","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","changelog","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign","buttonTypes","createH","defaultTagName","caseSensitive","createAdjustMap","selector","subvalue","parseSelector","isProperties","addProperty","addChild","parsePrimitive","concat","finalResult","h","cr","lf","fromParse5","location","verbose","nodeName","quirksMode","childNodes","loc","indices","toOffset","eol","toPoint","namespaceURI","attrs","sourceCodeLocation","startTag","endTag","createLocation","opening","closing","startLine","startCol","endLine","endCol","endOffset","zwitch","currentSchema","parentNode","publicId","systemId","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","ERR","Preprocessor","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","_err","onParseError","_addGap","_processSurrogate","nextCp","isSurrogatePair","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","peek","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","TokenType","getTokenAttr","attrName","Uint16Array","decodeMap","codePoint","replaceCodePoint","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isEntityInAttributeInvalidEnd","EQUALS","UPPER_A","UPPER_Z","LOWER_A","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","treeIndex","excess","decodeMode","Strict","startEntity","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","digitCount","pow","substr","startIdx","UPPER_F","LOWER_F","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","decoder","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","NS","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","writeCallback","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","NULL","_emitChars","_matchNamedCharacterReference","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","matchResult","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","ns","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","MIME_TYPES","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","activeFormattingElements","fragmentContextID","_setContextModes","openElements","getFragmentParser","opts","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","_adoptNodes","beforeToken","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","textNodeIdx","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","_reconstructActiveFormattingElements","listLength","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","noembedStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","xmlCodeMap","getEscaper","lastIdx","knownMdxNames","parseOptions","documentMode","unknown","stitches","resetTokenizer","stitch","toParse5","tag","createParse5Location","cloneWithoutChildren","fakeRoot","handleRaw","setPoint","node_","rehypeRaw","ccount","character","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","visitor","parents","grandparent","change","matchObject","global","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","domain","parts","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","tracker","createTracker","move","subexit","safe","associationId","indentLines","containerFlow","blank","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","none","_1","unsafe","checkQuote","quote","checkEmphasis","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","rule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","encode","rank","literalWithBreak","setext","formatHeadingAsSetext","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","EditMap","editMap","at","addImpl","sort","a","b","vecs","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","spaceThenNonSpace","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","gfm","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","convert","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","looksLikeANode","pointEnd","pointStart","CONTINUE","EXIT","SKIP","visitParents","reverse","factory","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","webNamespaces","mathml","invalid"],"sourceRoot":""}