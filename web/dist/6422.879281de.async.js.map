{"version":3,"file":"6422.879281de.async.js","mappings":"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","sources":["webpack:///./src/components/auto-keywords-form-field.tsx","webpack:///./src/components/delimiter-form-field.tsx","webpack:///./src/components/edit-tag/index.less?3847","webpack:///./src/components/edit-tag/index.tsx","webpack:///./src/components/entity-types-form-field.tsx","webpack:///./src/components/excel-to-html-form-field.tsx","webpack:///./src/components/form-container.tsx","webpack:///./src/components/layout-recognize-form-field.tsx","webpack:///./src/components/list-filter-bar/use-handle-filter-submit.ts","webpack:///./src/components/max-token-number-from-field.tsx","webpack:///./src/components/parse-configuration/graph-rag-form-fields.tsx","webpack:///./src/components/parse-configuration/raptor-form-fields.tsx","webpack:///./src/components/slider-input-form-field.tsx","webpack:///./src/components/ui/dialog.tsx","webpack:///./src/components/ui/dual-range-slider.tsx","webpack:///./src/components/ui/switch.tsx","webpack:///./src/components/ui/table.tsx","webpack:///./src/components/ui/textarea.tsx","webpack:///./src/hooks/use-knowledge-request.ts","webpack:///./src/services/file-manager-service.ts","webpack:///./src/utils/file-util.ts"],"sourcesContent":["import { useTranslate } from '@/hooks/common-hooks';\nimport { SliderInputFormField } from './slider-input-form-field';\n\nexport function AutoKeywordsFormField() {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <SliderInputFormField\n      name={'parser_config.auto_keywords'}\n      label={t('autoKeywords')}\n      max={30}\n      min={0}\n      tooltip={t('autoKeywordsTip')}\n    ></SliderInputFormField>\n  );\n}\n\nexport function AutoQuestionsFormField() {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <SliderInputFormField\n      name={'parser_config.auto_questions'}\n      label={t('autoQuestions')}\n      max={10}\n      min={0}\n      tooltip={t('autoQuestionsTip')}\n    ></SliderInputFormField>\n  );\n}\n","import { forwardRef } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\nimport { Input, InputProps } from './ui/input';\n\ninterface IProps {\n  value?: string | undefined;\n  onChange?: (val: string | undefined) => void;\n}\n\nexport const DelimiterInput = forwardRef<HTMLInputElement, InputProps & IProps>(\n  ({ value, onChange, maxLength, defaultValue }, ref) => {\n    const nextValue = value?.replaceAll('\\n', '\\\\n');\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const val = e.target.value;\n      const nextValue = val.replaceAll('\\\\n', '\\n');\n      onChange?.(nextValue);\n    };\n    return (\n      <Input\n        value={nextValue}\n        onChange={handleInputChange}\n        maxLength={maxLength}\n        defaultValue={defaultValue}\n        ref={ref}\n      ></Input>\n    );\n  },\n);\n\nexport function DelimiterFormField() {\n  const { t } = useTranslation();\n  const form = useFormContext();\n\n  return (\n    <FormField\n      control={form.control}\n      name={'parser_config.delimiter'}\n      render={({ field }) => {\n        if (typeof field.value === 'undefined') {\n          // default value set\n          form.setValue('parser_config.delimiter', '\\n');\n        }\n        return (\n          <FormItem className=\" items-center space-y-0 \">\n            <div className=\"flex items-center\">\n              <FormLabel\n                tooltip={t('knowledgeDetails.delimiterTip')}\n                className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n              >\n                {t('knowledgeDetails.delimiter')}\n              </FormLabel>\n              <div className=\"w-3/4\">\n                <FormControl>\n                  <DelimiterInput {...field}></DelimiterInput>\n                </FormControl>\n              </div>\n            </div>\n            <div className=\"flex pt-1\">\n              <div className=\"w-1/4\"></div>\n              <FormMessage />\n            </div>\n          </FormItem>\n        );\n      }}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tweenGroup\":\"tweenGroup___HgfIF\",\"tag\":\"tag___EPGvm\"};","import { PlusOutlined } from '@ant-design/icons';\nimport type { InputRef } from 'antd';\nimport { Input, Tag, theme, Tooltip } from 'antd';\nimport { TweenOneGroup } from 'rc-tween-one';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport styles from './index.less';\n\ninterface EditTagsProps {\n  value?: string[];\n  onChange?: (tags: string[]) => void;\n}\n\nconst EditTag = ({ value = [], onChange }: EditTagsProps) => {\n  const { token } = theme.useToken();\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const inputRef = useRef<InputRef>(null);\n\n  useEffect(() => {\n    if (inputVisible) {\n      inputRef.current?.focus();\n    }\n  }, [inputVisible]);\n\n  const handleClose = (removedTag: string) => {\n    const newTags = value?.filter((tag) => tag !== removedTag);\n    onChange?.(newTags ?? []);\n  };\n\n  const showInput = () => {\n    setInputVisible(true);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleInputConfirm = () => {\n    if (inputValue && value) {\n      const newTags = inputValue\n        .split(';')\n        .map((tag) => tag.trim())\n        .filter((tag) => tag && !value.includes(tag));\n      onChange?.([...value, ...newTags]);\n    }\n    setInputVisible(false);\n    setInputValue('');\n  };\n\n  const forMap = (tag: string) => {\n    return (\n      <Tooltip title={tag}>\n        <Tag\n          key={tag}\n          className={styles.tag}\n          closable\n          onClose={(e) => {\n            e.preventDefault();\n            handleClose(tag);\n          }}\n        >\n          {tag}\n        </Tag>\n      </Tooltip>\n    );\n  };\n\n  const tagChild = value?.map(forMap);\n\n  const tagPlusStyle: React.CSSProperties = {\n    background: token.colorBgContainer,\n    borderStyle: 'dashed',\n  };\n\n  return (\n    <div>\n      {Array.isArray(tagChild) && tagChild.length > 0 && (\n        <TweenOneGroup\n          className={styles.tweenGroup}\n          enter={{\n            scale: 0.8,\n            opacity: 0,\n            type: 'from',\n            duration: 100,\n          }}\n          onEnd={(e) => {\n            if (e.type === 'appear' || e.type === 'enter') {\n              (e.target as any).style = 'display: inline-block';\n            }\n          }}\n          leave={{ opacity: 0, width: 0, scale: 0, duration: 200 }}\n          appear={false}\n        >\n          {tagChild}\n        </TweenOneGroup>\n      )}\n      {inputVisible ? (\n        <Input\n          ref={inputRef}\n          type=\"text\"\n          size=\"small\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onBlur={handleInputConfirm}\n          onPressEnter={handleInputConfirm}\n        />\n      ) : (\n        <Tag onClick={showInput} style={tagPlusStyle}>\n          <PlusOutlined />\n        </Tag>\n      )}\n    </div>\n  );\n};\n\nexport default EditTag;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { useFormContext } from 'react-hook-form';\nimport EditTag from './edit-tag';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\n\ntype EntityTypesFormFieldProps = {\n  name?: string;\n};\n\nexport function EntityTypesFormField({\n  name = 'parser_config.entity_types',\n}: EntityTypesFormFieldProps) {\n  const { t } = useTranslate('knowledgeConfiguration');\n  const form = useFormContext();\n\n  return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem className=\" items-center space-y-0 \">\n          <div className=\"flex items-center\">\n            <FormLabel className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\">\n              <span className=\"text-red-600\">*</span> {t('entityTypes')}\n            </FormLabel>\n            <div className=\"w-3/4\">\n              <FormControl>\n                <EditTag {...field}></EditTag>\n              </FormControl>\n            </div>\n          </div>\n          <div className=\"flex pt-1\">\n            <div className=\"w-1/4\"></div>\n            <FormMessage />\n          </div>\n        </FormItem>\n      )}\n    />\n  );\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { useFormContext } from 'react-hook-form';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\nimport { Switch } from './ui/switch';\n\nexport function ExcelToHtmlFormField() {\n  const form = useFormContext();\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <FormField\n      control={form.control}\n      name=\"parser_config.html4excel\"\n      render={({ field }) => {\n        if (typeof field.value === 'undefined') {\n          // default value set\n          form.setValue('parser_config.html4excel', false);\n        }\n\n        return (\n          <FormItem defaultChecked={false} className=\" items-center space-y-0 \">\n            <div className=\"flex items-center\">\n              <FormLabel\n                tooltip={t('html4excelTip')}\n                className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n              >\n                {t('html4excel')}\n              </FormLabel>\n              <div className=\"w-3/4\">\n                <FormControl>\n                  <Switch\n                    checked={field.value}\n                    onCheckedChange={field.onChange}\n                  ></Switch>\n                </FormControl>\n              </div>\n            </div>\n            <div className=\"flex pt-1\">\n              <div className=\"w-1/4\"></div>\n              <FormMessage />\n            </div>\n          </FormItem>\n        );\n      }}\n    />\n  );\n}\n","import { cn } from '@/lib/utils';\nimport { PropsWithChildren } from 'react';\n\nexport type FormContainerProps = {\n  className?: string;\n  show?: boolean;\n} & PropsWithChildren;\n\nexport function FormContainer({\n  children,\n  show = true,\n  className,\n}: FormContainerProps) {\n  return show ? (\n    <section className={cn('border rounded-lg p-5 space-y-5', className)}>\n      {children}\n    </section>\n  ) : (\n    children\n  );\n}\n","import { LlmModelType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useSelectLlmOptionsByModelType } from '@/hooks/llm-hooks';\nimport { camelCase } from 'lodash';\nimport { useMemo } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\nimport { RAGFlowSelect } from './ui/select';\n\nexport const enum DocumentType {\n  DeepDOC = 'DeepDOC',\n  PlainText = 'Plain Text',\n}\n\nexport function LayoutRecognizeFormField() {\n  const form = useFormContext();\n\n  const { t } = useTranslate('knowledgeDetails');\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  const options = useMemo(() => {\n    const list = [DocumentType.DeepDOC, DocumentType.PlainText].map((x) => ({\n      label: x === DocumentType.PlainText ? t(camelCase(x)) : 'DeepDoc',\n      value: x,\n    }));\n\n    const image2TextList = allOptions[LlmModelType.Image2text].map((x) => {\n      return {\n        ...x,\n        options: x.options.map((y) => {\n          return {\n            ...y,\n            label: (\n              <div className=\"flex justify-between items-center gap-2\">\n                {y.label}\n                <span className=\"text-red-500 text-sm\">Experimental</span>\n              </div>\n            ),\n          };\n        }),\n      };\n    });\n\n    return [...list, ...image2TextList];\n  }, [allOptions, t]);\n\n  return (\n    <FormField\n      control={form.control}\n      name=\"parser_config.layout_recognize\"\n      render={({ field }) => {\n        if (typeof field.value === 'undefined') {\n          // default value set\n          form.setValue(\n            'parser_config.layout_recognize',\n            form.formState.defaultValues?.parser_config?.layout_recognize ??\n              'DeepDOC',\n          );\n        }\n        return (\n          <FormItem className=\" items-center space-y-0 \">\n            <div className=\"flex items-center\">\n              <FormLabel\n                tooltip={t('layoutRecognizeTip')}\n                className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n              >\n                {t('layoutRecognize')}\n              </FormLabel>\n              <div className=\"w-3/4\">\n                <FormControl>\n                  <RAGFlowSelect {...field} options={options}></RAGFlowSelect>\n                </FormControl>\n              </div>\n            </div>\n            <div className=\"flex pt-1\">\n              <div className=\"w-1/4\"></div>\n              <FormMessage />\n            </div>\n          </FormItem>\n        );\n      }}\n    />\n  );\n}\n","import { useCallback, useState } from 'react';\nimport { FilterChange, FilterValue } from './interface';\n\nexport function useHandleFilterSubmit() {\n  const [filterValue, setFilterValue] = useState<FilterValue>({});\n\n  const handleFilterSubmit: FilterChange = useCallback((value) => {\n    setFilterValue(value);\n  }, []);\n\n  return { filterValue, setFilterValue, handleFilterSubmit };\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { SliderInputFormField } from './slider-input-form-field';\n\ninterface IProps {\n  initialValue?: number;\n  max?: number;\n}\n\nexport function MaxTokenNumberFormField({ max = 2048 }: IProps) {\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  return (\n    <SliderInputFormField\n      name={'parser_config.chunk_token_num'}\n      label={t('chunkTokenNumber')}\n      max={max}\n    ></SliderInputFormField>\n  );\n}\n","import { DocumentParserType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { cn } from '@/lib/utils';\nimport { upperFirst } from 'lodash';\nimport { useCallback, useMemo } from 'react';\nimport { useFormContext, useWatch } from 'react-hook-form';\nimport { EntityTypesFormField } from '../entity-types-form-field';\nimport { FormContainer } from '../form-container';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '../ui/form';\nimport { RAGFlowSelect } from '../ui/select';\nimport { Switch } from '../ui/switch';\n\nconst excludedTagParseMethods = [\n  DocumentParserType.Table,\n  DocumentParserType.KnowledgeGraph,\n  DocumentParserType.Tag,\n];\n\nexport const showTagItems = (parserId: DocumentParserType) => {\n  return !excludedTagParseMethods.includes(parserId);\n};\n\nconst enum MethodValue {\n  General = 'general',\n  Light = 'light',\n}\n\nexport const excludedParseMethods = [\n  DocumentParserType.Table,\n  DocumentParserType.Resume,\n  DocumentParserType.Picture,\n  DocumentParserType.KnowledgeGraph,\n  DocumentParserType.Qa,\n  DocumentParserType.Tag,\n];\n\nexport const showGraphRagItems = (parserId: DocumentParserType | undefined) => {\n  return !excludedParseMethods.some((x) => x === parserId);\n};\n\ntype GraphRagItemsProps = {\n  marginBottom?: boolean;\n  className?: string;\n};\n\nexport function UseGraphRagFormField() {\n  const form = useFormContext();\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  return (\n    <FormField\n      control={form.control}\n      name=\"parser_config.graphrag.use_graphrag\"\n      render={({ field }) => (\n        <FormItem defaultChecked={false} className=\" items-center space-y-0 \">\n          <div className=\"flex items-center\">\n            <FormLabel\n              tooltip={t('useGraphRagTip')}\n              className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n            >\n              {t('useGraphRag')}\n            </FormLabel>\n            <div className=\"w-3/4\">\n              <FormControl>\n                <Switch\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                ></Switch>\n              </FormControl>\n            </div>\n          </div>\n          <div className=\"flex pt-1\">\n            <div className=\"w-1/4\"></div>\n            <FormMessage />\n          </div>\n        </FormItem>\n      )}\n    />\n  );\n}\n\n// The three types \"table\", \"resume\" and \"one\" do not display this configuration.\nconst GraphRagItems = ({\n  marginBottom = false,\n  className = 'p-10',\n}: GraphRagItemsProps) => {\n  const { t } = useTranslate('knowledgeConfiguration');\n  const form = useFormContext();\n\n  const useRaptor = useWatch({\n    control: form.control,\n    name: 'parser_config.graphrag.use_graphrag',\n  });\n\n  const methodOptions = useMemo(() => {\n    return [MethodValue.Light, MethodValue.General].map((x) => ({\n      value: x,\n      label: upperFirst(x),\n    }));\n  }, []);\n\n  const renderWideTooltip = useCallback(\n    (title: React.ReactNode | string) => {\n      return typeof title === 'string' ? t(title) : title;\n    },\n    [t],\n  );\n\n  return (\n    <FormContainer className={cn({ 'mb-4': marginBottom }, className)}>\n      <UseGraphRagFormField></UseGraphRagFormField>\n      {useRaptor && (\n        <>\n          <EntityTypesFormField name=\"parser_config.graphrag.entity_types\"></EntityTypesFormField>\n          <FormField\n            control={form.control}\n            name=\"parser_config.graphrag.method\"\n            render={({ field }) => (\n              <FormItem className=\" items-center space-y-0 \">\n                <div className=\"flex items-center\">\n                  <FormLabel\n                    className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n                    tooltip={renderWideTooltip(\n                      <div\n                        dangerouslySetInnerHTML={{\n                          __html: t('graphRagMethodTip'),\n                        }}\n                      ></div>,\n                    )}\n                  >\n                    {t('graphRagMethod')}\n                  </FormLabel>\n                  <div className=\"w-3/4\">\n                    <FormControl>\n                      <RAGFlowSelect\n                        {...field}\n                        options={methodOptions}\n                      ></RAGFlowSelect>\n                    </FormControl>\n                  </div>\n                </div>\n                <div className=\"flex pt-1\">\n                  <div className=\"w-1/4\"></div>\n                  <FormMessage />\n                </div>\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"parser_config.graphrag.resolution\"\n            render={({ field }) => (\n              <FormItem className=\" items-center space-y-0 \">\n                <div className=\"flex items-center\">\n                  <FormLabel\n                    tooltip={renderWideTooltip('resolutionTip')}\n                    className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n                  >\n                    {t('resolution')}\n                  </FormLabel>\n                  <div className=\"w-3/4\">\n                    <FormControl>\n                      <Switch\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                      ></Switch>\n                    </FormControl>\n                  </div>\n                </div>\n                <div className=\"flex pt-1\">\n                  <div className=\"w-1/4\"></div>\n                  <FormMessage />\n                </div>\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"parser_config.graphrag.community\"\n            render={({ field }) => (\n              <FormItem className=\" items-center space-y-0 \">\n                <div className=\"flex items-center\">\n                  <FormLabel\n                    tooltip={renderWideTooltip('communityTip')}\n                    className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n                  >\n                    {t('community')}\n                  </FormLabel>\n                  <div className=\"w-3/4\">\n                    <FormControl>\n                      <Switch\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                      ></Switch>\n                    </FormControl>\n                  </div>\n                </div>\n                <div className=\"flex pt-1\">\n                  <div className=\"w-1/4\"></div>\n                  <FormMessage />\n                </div>\n              </FormItem>\n            )}\n          />\n        </>\n      )}\n    </FormContainer>\n  );\n};\n\nexport default GraphRagItems;\n","import { DocumentParserType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport random from 'lodash/random';\nimport { Plus } from 'lucide-react';\nimport { useCallback } from 'react';\nimport { useFormContext, useWatch } from 'react-hook-form';\nimport { SliderInputFormField } from '../slider-input-form-field';\nimport { Button } from '../ui/button';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '../ui/form';\nimport { Input } from '../ui/input';\nimport { Switch } from '../ui/switch';\nimport { Textarea } from '../ui/textarea';\n\nexport const excludedParseMethods = [\n  DocumentParserType.Table,\n  DocumentParserType.Resume,\n  DocumentParserType.One,\n  DocumentParserType.Picture,\n  DocumentParserType.KnowledgeGraph,\n  DocumentParserType.Qa,\n  DocumentParserType.Tag,\n];\n\nexport const showRaptorParseConfiguration = (\n  parserId: DocumentParserType | undefined,\n) => {\n  return !excludedParseMethods.some((x) => x === parserId);\n};\n\nexport const excludedTagParseMethods = [\n  DocumentParserType.Table,\n  DocumentParserType.KnowledgeGraph,\n  DocumentParserType.Tag,\n];\n\nexport const showTagItems = (parserId: DocumentParserType) => {\n  return !excludedTagParseMethods.includes(parserId);\n};\n\nconst UseRaptorField = 'parser_config.raptor.use_raptor';\nconst RandomSeedField = 'parser_config.raptor.random_seed';\n\n// The three types \"table\", \"resume\" and \"one\" do not display this configuration.\n\nconst RaptorFormFields = () => {\n  const form = useFormContext();\n  const { t } = useTranslate('knowledgeConfiguration');\n  const useRaptor = useWatch({ name: UseRaptorField });\n\n  const handleGenerate = useCallback(() => {\n    form.setValue(RandomSeedField, random(10000));\n  }, [form]);\n\n  return (\n    <>\n      <FormField\n        control={form.control}\n        name={UseRaptorField}\n        render={({ field }) => {\n          if (typeof field.value === 'undefined') {\n            // default value set\n            form.setValue('parser_config.raptor.use_raptor', false);\n          }\n          return (\n            <FormItem\n              defaultChecked={false}\n              className=\"items-center space-y-0 \"\n            >\n              <div className=\"flex items-center\">\n                <FormLabel\n                  tooltip={t('useRaptorTip')}\n                  className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n                >\n                  {t('useRaptor')}\n                </FormLabel>\n                <div className=\"w-3/4\">\n                  <FormControl>\n                    <Switch\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                    ></Switch>\n                  </FormControl>\n                </div>\n              </div>\n              <div className=\"flex pt-1\">\n                <div className=\"w-1/4\"></div>\n                <FormMessage />\n              </div>\n            </FormItem>\n          );\n        }}\n      />\n      {useRaptor && (\n        <div className=\"space-y-3\">\n          <FormField\n            control={form.control}\n            name={'parser_config.raptor.prompt'}\n            render={({ field }) => (\n              <FormItem className=\" items-center space-y-0 \">\n                <div className=\"flex items-start\">\n                  <FormLabel\n                    tooltip={t('promptTip')}\n                    className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n                  >\n                    {t('prompt')}\n                  </FormLabel>\n                  <div className=\"w-3/4\">\n                    <FormControl>\n                      <Textarea {...field} rows={8} />\n                    </FormControl>\n                  </div>\n                </div>\n                <div className=\"flex pt-1\">\n                  <div className=\"w-1/4\"></div>\n                  <FormMessage />\n                </div>\n              </FormItem>\n            )}\n          />\n          <SliderInputFormField\n            name={'parser_config.raptor.max_token'}\n            label={t('maxToken')}\n            tooltip={t('maxTokenTip')}\n            defaultValue={256}\n            max={2048}\n            min={0}\n          ></SliderInputFormField>\n          <SliderInputFormField\n            name={'parser_config.raptor.threshold'}\n            label={t('threshold')}\n            tooltip={t('thresholdTip')}\n            defaultValue={0.1}\n            step={0.01}\n            max={1}\n            min={0}\n          ></SliderInputFormField>\n          <SliderInputFormField\n            name={'parser_config.raptor.max_cluster'}\n            label={t('maxCluster')}\n            tooltip={t('maxClusterTip')}\n            defaultValue={64}\n            max={1024}\n            min={1}\n          ></SliderInputFormField>\n          <FormField\n            control={form.control}\n            name={'parser_config.raptor.random_seed'}\n            render={({ field }) => (\n              <FormItem className=\" items-center space-y-0 \">\n                <div className=\"flex items-center\">\n                  <FormLabel className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\">\n                    {t('randomSeed')}\n                  </FormLabel>\n                  <div className=\"w-3/4\">\n                    <FormControl defaultValue={0}>\n                      <div className=\"flex gap-4\">\n                        <Input {...field} />\n                        <Button\n                          size={'sm'}\n                          onClick={handleGenerate}\n                          type={'button'}\n                        >\n                          <Plus />\n                        </Button>\n                      </div>\n                    </FormControl>\n                  </div>\n                </div>\n                <div className=\"flex pt-1\">\n                  <div className=\"w-1/4\"></div>\n                  <FormMessage />\n                </div>\n              </FormItem>\n            )}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default RaptorFormFields;\n","import { cn } from '@/lib/utils';\nimport { ReactNode } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { SingleFormSlider } from './ui/dual-range-slider';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\nimport { Input } from './ui/input';\n\ntype SliderInputFormFieldProps = {\n  max?: number;\n  min?: number;\n  step?: number;\n  name: string;\n  label: string;\n  tooltip?: ReactNode;\n  defaultValue?: number;\n  className?: string;\n};\n\nexport function SliderInputFormField({\n  max,\n  min,\n  step,\n  label,\n  name,\n  tooltip,\n  defaultValue,\n  className,\n}: SliderInputFormFieldProps) {\n  const form = useFormContext();\n\n  return (\n    <FormField\n      control={form.control}\n      name={name}\n      defaultValue={defaultValue || 0}\n      render={({ field }) => (\n        <FormItem className=\" items-center space-y-0 \">\n          <div className=\"flex items-center\">\n            <FormLabel\n              tooltip={tooltip}\n              className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n            >\n              {label}\n            </FormLabel>\n            <div\n              className={cn(\n                'flex items-center gap-14 justify-between',\n                'w-3/4',\n                className,\n              )}\n            >\n              <FormControl>\n                <SingleFormSlider\n                  {...field}\n                  max={max}\n                  min={min}\n                  step={step}\n                  // defaultValue={\n                  //   typeof defaultValue === 'number' ? [defaultValue] : undefined\n                  // }\n                ></SingleFormSlider>\n              </FormControl>\n              <FormControl>\n                <Input\n                  type={'number'}\n                  className=\"h-7 w-20\"\n                  max={max}\n                  min={min}\n                  step={step}\n                  {...field}\n                  onChange={(ev) => {\n                    const value = ev.target.value;\n                    field.onChange(value === '' ? 0 : Number(value)); // convert to number\n                  }}\n                  // defaultValue={defaultValue}\n                ></Input>\n              </FormControl>\n            </div>\n          </div>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n","'use client';\n\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-colors-background-neutral-standard p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col space-y-1.5 text-center sm:text-left',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      'text-lg font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n","'use client';\n\nimport * as SliderPrimitive from '@radix-ui/react-slider';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\ninterface DualRangeSliderProps\n  extends React.ComponentProps<typeof SliderPrimitive.Root> {\n  labelPosition?: 'top' | 'bottom';\n  label?: (value: number | undefined) => React.ReactNode;\n}\n\nconst DualRangeSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  DualRangeSliderProps\n>(({ className, label, labelPosition = 'top', ...props }, ref) => {\n  const initialValue = Array.isArray(props.value)\n    ? props.value\n    : [props.min, props.max];\n\n  return (\n    <SliderPrimitive.Root\n      ref={ref}\n      className={cn(\n        'relative flex w-full touch-none select-none items-center',\n        className,\n      )}\n      {...props}\n    >\n      <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n        <SliderPrimitive.Range className=\"absolute h-full bg-background-checked\" />\n      </SliderPrimitive.Track>\n      {initialValue.map((value, index) => (\n        <React.Fragment key={index}>\n          <SliderPrimitive.Thumb className=\"relative block h-4 w-4 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 cursor-pointer\">\n            {label && (\n              <span\n                className={cn(\n                  'absolute flex w-full justify-center',\n                  labelPosition === 'top' && '-top-7',\n                  labelPosition === 'bottom' && 'top-4',\n                )}\n              >\n                {label(value)}\n              </span>\n            )}\n          </SliderPrimitive.Thumb>\n        </React.Fragment>\n      ))}\n    </SliderPrimitive.Root>\n  );\n});\nDualRangeSlider.displayName = 'DualRangeSlider';\n\ntype SingleSliderProps = Omit<\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>,\n  'onChange' | 'value'\n> & { onChange: (value: number) => void; value: number };\n\nconst SingleFormSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  SingleSliderProps\n>(({ value, onChange, ...props }, ref) => {\n  return (\n    <DualRangeSlider\n      ref={ref}\n      value={[value]}\n      onValueChange={(vals) => {\n        onChange(vals[0]);\n      }}\n      {...props}\n    />\n  );\n});\n\nexport { DualRangeSlider, SingleFormSlider };\n","'use client';\n\nimport * as SwitchPrimitives from '@radix-ui/react-switch';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      'peer inline-flex h-3.5 w-6 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-background-checked data-[state=unchecked]:bg-text-sub-title',\n      className,\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        'pointer-events-none block size-3 rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-2 data-[state=unchecked]:translate-x-0',\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement> & { rootClassName?: string }\n>(({ className, rootClassName, ...props }, ref) => (\n  <div\n    className={cn(\n      'relative w-full overflow-auto rounded-2xl bg-background-card',\n      rootClassName,\n    )}\n  >\n    <table\n      ref={ref}\n      className={cn('w-full caption-bottom text-sm ', className)}\n      {...props}\n    />\n  </div>\n));\nTable.displayName = 'Table';\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead\n    ref={ref}\n    className={cn('[&_tr]:border-b top-0 sticky', className)}\n    {...props}\n  />\n));\nTableHeader.displayName = 'TableHeader';\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn('[&_tr:last-child]:border-0', className)}\n    {...props}\n  />\n));\nTableBody.displayName = 'TableBody';\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      'border-t bg-muted/50 font-medium [&>tr]:last:border-b-0',\n      className,\n    )}\n    {...props}\n  />\n));\nTableFooter.displayName = 'TableFooter';\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\n      className,\n    )}\n    {...props}\n  />\n));\nTableRow.displayName = 'TableRow';\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      'h-12 px-4 text-left align-middle font-normal text-text-sub-title [&:has([role=checkbox])]:pr-0',\n      className,\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = 'TableHead';\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      'p-4 align-middle [&:has([role=checkbox])]:pr-0 text-text-title font-normal',\n      className,\n    )}\n    {...props}\n  />\n));\nTableCell.displayName = 'TableCell';\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn('mt-4 text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nTableCaption.displayName = 'TableCaption';\n\nexport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n};\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<'textarea'>\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        'flex min-h-[80px] w-full rounded-md border border-input bg-colors-background-inverse-weak px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm overflow-hidden',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nTextarea.displayName = 'Textarea';\n\nexport { Textarea };\n\ntype Value = string | readonly string[] | number | undefined;\n\nexport const BlurTextarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<'textarea'> & {\n    value: Value;\n    onChange(value: Value): void;\n  }\n>(({ value, onChange, ...props }, ref) => {\n  const [val, setVal] = React.useState<Value>();\n\n  const handleChange: React.ChangeEventHandler<HTMLTextAreaElement> =\n    React.useCallback((e) => {\n      setVal(e.target.value);\n    }, []);\n\n  const handleBlur: React.FocusEventHandler<HTMLTextAreaElement> =\n    React.useCallback(\n      (e) => {\n        onChange?.(e.target.value);\n      },\n      [onChange],\n    );\n\n  React.useEffect(() => {\n    setVal(value);\n  }, [value]);\n\n  return (\n    <Textarea\n      {...props}\n      value={val}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      ref={ref}\n    ></Textarea>\n  );\n});\n","import { useHandleFilterSubmit } from '@/components/list-filter-bar/use-handle-filter-submit';\nimport {\n  IKnowledge,\n  IKnowledgeResult,\n  INextTestingResult,\n} from '@/interfaces/database/knowledge';\nimport { ITestRetrievalRequestBody } from '@/interfaces/request/knowledge';\nimport i18n from '@/locales/config';\nimport kbService, { listDataset } from '@/services/knowledge-service';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useDebounce } from 'ahooks';\nimport { message } from 'antd';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useParams } from 'umi';\nimport {\n  useGetPaginationWithRouter,\n  useHandleSearchChange,\n} from './logic-hooks';\n\nexport const enum KnowledgeApiAction {\n  TestRetrieval = 'testRetrieval',\n  FetchKnowledgeListByPage = 'fetchKnowledgeListByPage',\n  CreateKnowledge = 'createKnowledge',\n  DeleteKnowledge = 'deleteKnowledge',\n  SaveKnowledge = 'saveKnowledge',\n  FetchKnowledgeDetail = 'fetchKnowledgeDetail',\n}\n\nexport const useKnowledgeBaseId = () => {\n  const { id } = useParams();\n\n  return id;\n};\n\nexport const useTestRetrieval = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const [values, setValues] = useState<ITestRetrievalRequestBody>();\n  const mountedRef = useRef(false);\n  const { filterValue, handleFilterSubmit } = useHandleFilterSubmit();\n\n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n\n  const onPaginationChange = useCallback((page: number, pageSize: number) => {\n    setPage(page);\n    setPageSize(pageSize);\n  }, []);\n\n  const queryParams = useMemo(() => {\n    return {\n      ...values,\n      kb_id: values?.kb_id || knowledgeBaseId,\n      page,\n      size: pageSize,\n      doc_ids: filterValue.doc_ids,\n    };\n  }, [filterValue, knowledgeBaseId, page, pageSize, values]);\n\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<INextTestingResult>({\n    queryKey: [KnowledgeApiAction.TestRetrieval, queryParams, page, pageSize],\n    initialData: {\n      chunks: [],\n      doc_aggs: [],\n      total: 0,\n    },\n    enabled: false,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await kbService.retrieval_test(queryParams);\n      return data?.data ?? {};\n    },\n  });\n\n  useEffect(() => {\n    if (mountedRef.current) {\n      refetch();\n    }\n    mountedRef.current = true;\n  }, [page, pageSize, refetch, filterValue]);\n\n  return {\n    data,\n    loading,\n    setValues,\n    refetch,\n    onPaginationChange,\n    page,\n    pageSize,\n    handleFilterSubmit,\n    filterValue,\n  };\n};\n\nexport const useFetchNextKnowledgeListByPage = () => {\n  const { searchString, handleInputChange } = useHandleSearchChange();\n  const { pagination, setPagination } = useGetPaginationWithRouter();\n  const debouncedSearchString = useDebounce(searchString, { wait: 500 });\n  const { filterValue, handleFilterSubmit } = useHandleFilterSubmit();\n\n  const { data, isFetching: loading } = useQuery<IKnowledgeResult>({\n    queryKey: [\n      KnowledgeApiAction.FetchKnowledgeListByPage,\n      {\n        debouncedSearchString,\n        ...pagination,\n        filterValue,\n      },\n    ],\n    initialData: {\n      kbs: [],\n      total: 0,\n    },\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await listDataset(\n        {\n          keywords: debouncedSearchString,\n          page_size: pagination.pageSize,\n          page: pagination.current,\n        },\n        {\n          owner_ids: filterValue.owner,\n        },\n      );\n\n      return data?.data;\n    },\n  });\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => {\n      // setPagination({ page: 1 }); // TODO: 这里导致重复请求\n      handleInputChange(e);\n    },\n    [handleInputChange],\n  );\n\n  return {\n    ...data,\n    searchString,\n    handleInputChange: onInputChange,\n    pagination: { ...pagination, total: data?.total },\n    setPagination,\n    loading,\n    filterValue,\n    handleFilterSubmit,\n  };\n};\n\nexport const useCreateKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [KnowledgeApiAction.CreateKnowledge],\n    mutationFn: async (params: { id?: string; name: string }) => {\n      const { data = {} } = await kbService.createKb(params);\n      if (data.code === 0) {\n        message.success(\n          i18n.t(`message.${params?.id ? 'modified' : 'created'}`),\n        );\n        queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeList'] });\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, createKnowledge: mutateAsync };\n};\n\nexport const useDeleteKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [KnowledgeApiAction.DeleteKnowledge],\n    mutationFn: async (id: string) => {\n      const { data } = await kbService.rmKb({ kb_id: id });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.deleted`));\n        queryClient.invalidateQueries({\n          queryKey: [KnowledgeApiAction.FetchKnowledgeListByPage],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteKnowledge: mutateAsync };\n};\n\nexport const useUpdateKnowledge = (shouldFetchList = false) => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [KnowledgeApiAction.SaveKnowledge],\n    mutationFn: async (params: Record<string, any>) => {\n      const { data = {} } = await kbService.updateKb({\n        kb_id: params?.kb_id ? params?.kb_id : knowledgeBaseId,\n        ...params,\n      });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.updated`));\n        if (shouldFetchList) {\n          queryClient.invalidateQueries({\n            queryKey: [KnowledgeApiAction.FetchKnowledgeListByPage],\n          });\n        } else {\n          queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeDetail'] });\n        }\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, saveKnowledgeConfiguration: mutateAsync };\n};\n\nexport const useFetchKnowledgeBaseConfiguration = (refreshCount?: number) => {\n  const { id } = useParams();\n\n  let queryKey: (KnowledgeApiAction | number)[] = [\n    KnowledgeApiAction.FetchKnowledgeDetail,\n  ];\n  if (typeof refreshCount === 'number') {\n    queryKey = [KnowledgeApiAction.FetchKnowledgeDetail, refreshCount];\n  }\n\n  const { data, isFetching: loading } = useQuery<IKnowledge>({\n    queryKey,\n    initialData: {} as IKnowledge,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await kbService.get_kb_detail({\n        kb_id: id,\n      });\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n","import api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request from '@/utils/request';\n\nconst {\n  listFile,\n  removeFile,\n  uploadFile,\n  renameFile,\n  getAllParentFolder,\n  createFolder,\n  connectFileToKnowledge,\n  get_document_file,\n  getFile,\n  moveFile,\n} = api;\n\nconst methods = {\n  listFile: {\n    url: listFile,\n    method: 'get',\n  },\n  removeFile: {\n    url: removeFile,\n    method: 'post',\n  },\n  uploadFile: {\n    url: uploadFile,\n    method: 'post',\n  },\n  renameFile: {\n    url: renameFile,\n    method: 'post',\n  },\n  getAllParentFolder: {\n    url: getAllParentFolder,\n    method: 'get',\n  },\n  createFolder: {\n    url: createFolder,\n    method: 'post',\n  },\n  connectFileToKnowledge: {\n    url: connectFileToKnowledge,\n    method: 'post',\n  },\n  getFile: {\n    url: getFile,\n    method: 'get',\n    responseType: 'blob',\n  },\n  getDocumentFile: {\n    url: get_document_file,\n    method: 'get',\n    responseType: 'blob',\n  },\n  moveFile: {\n    url: moveFile,\n    method: 'post',\n  },\n} as const;\n\nconst fileManagerService = registerServer<keyof typeof methods>(\n  methods,\n  request,\n);\n\nexport default fileManagerService;\n","import { FileMimeType } from '@/constants/common';\nimport fileManagerService from '@/services/file-manager-service';\nimport { UploadFile } from 'antd';\n\nexport const transformFile2Base64 = (val: any): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(val);\n    reader.onload = (): void => {\n      // Create image object\n      const img = new Image();\n      img.src = reader.result as string;\n\n      img.onload = () => {\n        // Create canvas\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        // Calculate compressed dimensions, set max width/height to 800px\n        let width = img.width;\n        let height = img.height;\n        const maxSize = 100;\n\n        if (width > height && width > maxSize) {\n          height = (height * maxSize) / width;\n          width = maxSize;\n        } else if (height > maxSize) {\n          width = (width * maxSize) / height;\n          height = maxSize;\n        }\n\n        // Set canvas dimensions\n        canvas.width = width;\n        canvas.height = height;\n\n        // Draw image\n        ctx?.drawImage(img, 0, 0, width, height);\n\n        // Convert to base64, maintain original format and transparency\n        const compressedBase64 = canvas.toDataURL('image/png');\n        resolve(compressedBase64);\n      };\n\n      img.onerror = reject;\n    };\n    reader.onerror = reject;\n  });\n};\n\nexport const transformBase64ToFile = (\n  dataUrl: string,\n  filename: string = 'file',\n) => {\n  let arr = dataUrl.split(','),\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n\n  const mime = arr[0].match(/:(.*?);/);\n  const mimeType = mime ? mime[1] : 'image/png';\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], filename, { type: mimeType });\n};\n\nexport const normFile = (e: any) => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e?.fileList;\n};\n\nexport const getUploadFileListFromBase64 = (avatar: string) => {\n  let fileList: UploadFile[] = [];\n\n  if (avatar) {\n    fileList = [{ uid: '1', name: 'file', thumbUrl: avatar, status: 'done' }];\n  }\n\n  return fileList;\n};\n\nexport const getBase64FromUploadFileList = async (fileList?: UploadFile[]) => {\n  if (Array.isArray(fileList) && fileList.length > 0) {\n    const file = fileList[0];\n    const originFileObj = file.originFileObj;\n    if (originFileObj) {\n      const base64 = await transformFile2Base64(originFileObj);\n      return base64;\n    } else {\n      return file.thumbUrl;\n    }\n    // return fileList[0].thumbUrl; TODO: Even JPG files will be converted to base64 parameters in png format\n  }\n\n  return '';\n};\n\nasync function fetchDocumentBlob(id: string, mimeType?: FileMimeType) {\n  const response = await fileManagerService.getDocumentFile({}, id);\n  const blob = new Blob([response.data], {\n    type: mimeType || response.data.type,\n  });\n\n  return blob;\n}\n\nexport async function previewHtmlFile(id: string) {\n  const blob = await fetchDocumentBlob(id, FileMimeType.Html);\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.click();\n  URL.revokeObjectURL(url);\n}\n\nexport const downloadFileFromBlob = (blob: Blob, name?: string) => {\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  if (name) {\n    a.download = name;\n  }\n  a.click();\n  window.URL.revokeObjectURL(url);\n};\n\nexport const downloadDocument = async ({\n  id,\n  filename,\n}: {\n  id: string;\n  filename?: string;\n}) => {\n  const blob = await fetchDocumentBlob(id);\n  downloadFileFromBlob(blob, filename);\n};\n\nconst Units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\nexport const formatBytes = (x: string | number) => {\n  let l = 0,\n    n = (typeof x === 'string' ? parseInt(x, 10) : x) || 0;\n\n  while (n >= 1024 && ++l) {\n    n = n / 1024;\n  }\n\n  return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + Units[l];\n};\n\nexport const downloadJsonFile = async (\n  data: Record<string, any>,\n  fileName: string,\n) => {\n  const blob = new Blob([JSON.stringify(data)], { type: FileMimeType.Json });\n  downloadFileFromBlob(blob, fileName);\n};\n\nexport function transformBase64ToFileWithPreview(\n  dataUrl: string,\n  filename: string = 'file',\n) {\n  const file = transformBase64ToFile(dataUrl, filename);\n\n  (file as any).preview = dataUrl;\n\n  return file;\n}\n\nexport const getBase64FromFileList = async (fileList?: File[]) => {\n  if (Array.isArray(fileList) && fileList.length > 0) {\n    const file = fileList[0];\n    if (file) {\n      const base64 = await transformFile2Base64(file);\n      return base64;\n    }\n  }\n\n  return '';\n};\n"],"names":["AutoKeywordsFormField","t","useTranslate","_jsx","SliderInputFormField","name","label","max","min","tooltip","AutoQuestionsFormField","DelimiterInput","forwardRef","_ref","ref","value","onChange","maxLength","defaultValue","nextValue","replaceAll","Input","e","target","DelimiterFormField","useTranslation","form","useFormContext","FormField","control","render","_ref2","field","setValue","_jsxs","FormItem","className","children","FormLabel","FormControl","_objectSpread","FormMessage","_ref$value","token","theme","useToken","_useState","useState","_useState2","_slicedToArray","inputVisible","setInputVisible","_useState3","_useState4","inputValue","setInputValue","inputRef","useRef","useEffect","_inputRef$current","current","focus","handleInputConfirm","newTags","split","map","tag","trim","filter","includes","concat","_toConsumableArray","tagChild","Tooltip","title","Tag","styles","closable","onClose","removedTag","preventDefault","tagPlusStyle","background","colorBgContainer","borderStyle","Array","isArray","length","TweenOneGroup","enter","scale","opacity","type","duration","onEnd","style","leave","width","appear","size","onBlur","onPressEnter","onClick","PlusOutlined","EntityTypesFormField","_ref$name","EditTag","ExcelToHtmlFormField","defaultChecked","Switch","checked","onCheckedChange","FormContainer","_ref$show","show","cn","DocumentType","DeepDOC","PlainText","LayoutRecognizeFormField","allOptions","useSelectLlmOptionsByModelType","options","useMemo","list","x","camelCase","image2TextList","LlmModelType","Image2text","y","_form$formState$defau","_form$formState$defau2","formState","defaultValues","parser_config","layout_recognize","RAGFlowSelect","useHandleFilterSubmit","filterValue","setFilterValue","handleFilterSubmit","useCallback","MaxTokenNumberFormField","_ref$max","excludedParseMethods","DocumentParserType","Table","KnowledgeGraph","Resume","Picture","Qa","showGraphRagItems","parserId","some","UseGraphRagFormField","_ref2$marginBottom","marginBottom","_ref2$className","useRaptor","useWatch","methodOptions","upperFirst","renderWideTooltip","_Fragment","_ref3","dangerouslySetInnerHTML","__html","_ref4","_ref5","One","showRaptorParseConfiguration","UseRaptorField","handleGenerate","random","Textarea","rows","step","Button","Plus","SingleFormSlider","ev","Number","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","Dialog","DialogPrimitive","DialogTrigger","DialogPortal","DialogOverlay","React","props","_objectWithoutProperties","displayName","DialogContent","X","DialogHeader","DialogFooter","DialogTitle","_ref6","DualRangeSlider","_ref$labelPosition","labelPosition","initialValue","SliderPrimitive","index","onValueChange","vals","SwitchPrimitives","rootClassName","TableHeader","TableBody","TableRow","TableHead","TableCell","_ref7","_excluded7","_ref8","_excluded8","BlurTextarea","_React$useState","_React$useState2","val","setVal","handleChange","handleBlur","KnowledgeApiAction","useKnowledgeBaseId","useParams","id","useTestRetrieval","_queryFn","knowledgeBaseId","values","setValues","mountedRef","_useHandleFilterSubmi","page","setPage","_useState5","_useState6","pageSize","setPageSize","onPaginationChange","queryParams","kb_id","doc_ids","_useQuery","useQuery","queryKey","initialData","chunks","doc_aggs","total","enabled","gcTime","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_yield$kbService$retr","data","wrap","_context","prev","next","kbService","retrieval_test","sent","abrupt","stop","apply","arguments","loading","isFetching","refetch","useFetchNextKnowledgeListByPage","_queryFn2","_useHandleSearchChang","useHandleSearchChange","searchString","handleInputChange","_useGetPaginationWith","useGetPaginationWithRouter","pagination","setPagination","debouncedSearchString","useDebounce","wait","_useHandleFilterSubmi2","_useQuery2","kbs","_callee2","_yield$listDataset","_context2","listDataset","keywords","page_size","owner_ids","owner","onInputChange","useCreateKnowledge","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","_callee3","params","_yield$kbService$crea","_yield$kbService$crea2","_context3","createKb","code","message","success","i18n","invalidateQueries","_x","isPending","createKnowledge","mutateAsync","useDeleteKnowledge","_mutationFn2","_useMutation2","_callee4","_data$data2","_yield$kbService$rmKb","_context4","rmKb","_x2","deleteKnowledge","useUpdateKnowledge","_mutationFn3","shouldFetchList","undefined","_useMutation3","_callee5","_yield$kbService$upda","_yield$kbService$upda2","_context5","updateKb","_x3","saveKnowledgeConfiguration","useFetchKnowledgeBaseConfiguration","refreshCount","_queryFn3","_useQuery3","_callee6","_data$data3","_yield$kbService$get_","_context6","get_kb_detail","listFile","api","removeFile","uploadFile","renameFile","getAllParentFolder","createFolder","connectFileToKnowledge","get_document_file","methods","url","method","getFile","responseType","getDocumentFile","moveFile","fileManagerService","registerServer","request","transformFile2Base64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","img","Image","src","result","canvas","document","createElement","ctx","getContext","height","maxSize","drawImage","compressedBase64","toDataURL","onerror","normFile","fileList","getUploadFileListFromBase64","avatar","uid","thumbUrl","status","getBase64FromUploadFileList","file","originFileObj","base64","fetchDocumentBlob","_fetchDocumentBlob","mimeType","response","blob","Blob","previewHtmlFile","_x4","_previewHtmlFile","link","FileMimeType","Html","URL","createObjectURL","href","click","revokeObjectURL","downloadFileFromBlob","window","a","download","downloadDocument","filename","_x5","Units","formatBytes","l","n","parseInt","toFixed","downloadJsonFile","fileName","JSON","stringify","Json","_x6","_x7"],"sourceRoot":""}