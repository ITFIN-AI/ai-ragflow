{"version":3,"file":"1282.6f37de5e.async.js","mappings":"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","sources":["webpack:///./src/components/svg-icon.tsx","webpack:///./src/components/ui/form.tsx","webpack:///./src/components/ui/label.tsx","webpack:///./src/constants/knowledge.ts","webpack:///./src/hooks/knowledge-hooks.ts","webpack:///./src/hooks/llm-hooks.tsx","webpack:///./src/hooks/logic-hooks.ts","webpack:///./src/hooks/route-hook.ts","webpack:///./src/services/knowledge-service.ts","webpack:///./src/utils/chat.ts","webpack:///./src/utils/llm-util.ts","webpack:///./src/assets/svg/ sync \\.svg$"],"sourcesContent":["import { IconMap } from '@/constants/llm';\nimport { cn } from '@/lib/utils';\nimport Icon, { UserOutlined } from '@ant-design/icons';\nimport { IconComponentProps } from '@ant-design/icons/lib/components/Icon';\nimport { Avatar } from 'antd';\nimport { AvatarSize } from 'antd/es/avatar/AvatarContext';\n\nconst importAll = (requireContext: __WebpackModuleApi.RequireContext) => {\n  const list = requireContext.keys().map((key) => {\n    const name = key.replace(/\\.\\/(.*)\\.\\w+$/, '$1');\n    return { name, value: requireContext(key) };\n  });\n  return list;\n};\n\nlet routeList: { name: string; value: string }[] = [];\n\ntry {\n  routeList = importAll(require.context('@/assets/svg', true, /\\.svg$/));\n} catch (error) {\n  console.warn(error);\n  routeList = [];\n}\n\ninterface IProps extends IconComponentProps {\n  name: string;\n  width: string | number;\n  height?: string | number;\n  imgClass?: string;\n}\n\nconst SvgIcon = ({ name, width, height, imgClass, ...restProps }: IProps) => {\n  const ListItem = routeList.find((item) => item.name === name);\n  return (\n    <Icon\n      component={() => (\n        <img\n          src={ListItem?.value}\n          alt=\"\"\n          width={width}\n          height={height}\n          className={cn(imgClass, 'max-w-full')}\n        />\n      )}\n      {...(restProps as any)}\n    />\n  );\n};\n\nexport const LlmIcon = ({\n  name,\n  height = 48,\n  width = 48,\n  size = 'large',\n  imgClass,\n}: {\n  name: string;\n  height?: number;\n  width?: number;\n  size?: AvatarSize;\n  imgClass?: string;\n}) => {\n  const icon = IconMap[name as keyof typeof IconMap];\n\n  return icon ? (\n    <SvgIcon\n      name={`llm/${icon}`}\n      width={width}\n      height={height}\n      imgClass={imgClass}\n    ></SvgIcon>\n  ) : (\n    <Avatar shape=\"square\" size={size} icon={<UserOutlined />} />\n  );\n};\n\nexport default SvgIcon;\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { Slot } from '@radix-ui/react-slot';\nimport * as React from 'react';\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from 'react-hook-form';\n\nimport { Label } from '@/components/ui/label';\nimport { cn } from '@/lib/utils';\nimport { FormTooltip } from './tooltip';\n\nconst Form = FormProvider;\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue,\n);\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue,\n);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState, formState } = useFormContext();\n\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error('useFormField should be used within <FormField>');\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\nconst InnerFormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn('space-y-2', className)} {...props} />\n    </FormItemContext.Provider>\n  );\n});\n\nInnerFormItem.displayName = 'FormItem';\n\nconst FormItem = React.memo(InnerFormItem);\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & {\n    tooltip?: React.ReactNode;\n  }\n>(({ className, tooltip, ...props }, ref) => {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && 'text-destructive', className, 'flex pb-0.5')}\n      htmlFor={formItemId}\n      {...props}\n    >\n      {props.children}\n      {tooltip && <FormTooltip tooltip={tooltip}></FormTooltip>}\n    </Label>\n  );\n});\nFormLabel.displayName = 'FormLabel';\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } =\n    useFormField();\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n});\nFormControl.displayName = 'FormControl';\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn('text-sm text-muted-foreground', className)}\n      {...props}\n    />\n  );\n});\nFormDescription.displayName = 'FormDescription';\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message) : children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn('text-sm font-medium text-destructive', className)}\n      {...props}\n    >\n      {body}\n    </p>\n  );\n});\nFormMessage.displayName = 'FormMessage';\n\nexport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  useFormField,\n};\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","export enum KnowledgeRouteKey {\n  Dataset = 'dataset',\n  Testing = 'testing',\n  Configuration = 'configuration',\n  KnowledgeGraph = 'knowledgeGraph',\n}\n\nexport const DatasetBaseKey = 'dataset';\n\nexport enum RunningStatus {\n  UNSTART = '0', // need to run\n  RUNNING = '1', // need to cancel\n  CANCEL = '2', // need to refresh\n  DONE = '3', // need to refresh\n  FAIL = '4', // need to refresh\n}\n\nexport enum ModelVariableType {\n  Improvise = 'Improvise',\n  Precise = 'Precise',\n  Balance = 'Balance',\n}\n\nexport const settledModelVariableMap = {\n  [ModelVariableType.Improvise]: {\n    temperature: 0.8,\n    top_p: 0.9,\n    frequency_penalty: 0.1,\n    presence_penalty: 0.1,\n    max_tokens: 4096,\n  },\n  [ModelVariableType.Precise]: {\n    temperature: 0.2,\n    top_p: 0.75,\n    frequency_penalty: 0.5,\n    presence_penalty: 0.5,\n    max_tokens: 4096,\n  },\n  [ModelVariableType.Balance]: {\n    temperature: 0.5,\n    top_p: 0.85,\n    frequency_penalty: 0.3,\n    presence_penalty: 0.2,\n    max_tokens: 4096,\n  },\n};\n\nexport enum LlmModelType {\n  Embedding = 'embedding',\n  Chat = 'chat',\n  Image2text = 'image2text',\n  Speech2text = 'speech2text',\n  Rerank = 'rerank',\n  TTS = 'tts',\n}\n\nexport enum KnowledgeSearchParams {\n  DocumentId = 'doc_id',\n  KnowledgeId = 'id',\n}\n\nexport enum DocumentType {\n  Virtual = 'virtual',\n  Visual = 'visual',\n}\n\nexport enum DocumentParserType {\n  Naive = 'naive',\n  Qa = 'qa',\n  Resume = 'resume',\n  Manual = 'manual',\n  Table = 'table',\n  Paper = 'paper',\n  Book = 'book',\n  Laws = 'laws',\n  Presentation = 'presentation',\n  Picture = 'picture',\n  One = 'one',\n  Audio = 'audio',\n  Email = 'email',\n  Tag = 'tag',\n  KnowledgeGraph = 'knowledge_graph',\n}\n","import { ResponsePostType } from '@/interfaces/database/base';\nimport {\n  IKnowledge,\n  IKnowledgeGraph,\n  IRenameTag,\n  ITestingResult,\n} from '@/interfaces/database/knowledge';\nimport i18n from '@/locales/config';\nimport kbService, {\n  deleteKnowledgeGraph,\n  getKnowledgeGraph,\n  listDataset,\n  listTag,\n  removeTag,\n  renameTag,\n} from '@/services/knowledge-service';\nimport {\n  useInfiniteQuery,\n  useIsMutating,\n  useMutation,\n  useMutationState,\n  useQuery,\n  useQueryClient,\n} from '@tanstack/react-query';\nimport { useDebounce } from 'ahooks';\nimport { message } from 'antd';\nimport { useState } from 'react';\nimport { useSearchParams } from 'umi';\nimport { useHandleSearchChange } from './logic-hooks';\nimport { useSetPaginationParams } from './route-hook';\n\nexport const useKnowledgeBaseId = (): string => {\n  const [searchParams] = useSearchParams();\n  const knowledgeBaseId = searchParams.get('id');\n\n  return knowledgeBaseId || '';\n};\n\nexport const useFetchKnowledgeBaseConfiguration = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const { data, isFetching: loading } = useQuery<IKnowledge>({\n    queryKey: ['fetchKnowledgeDetail'],\n    initialData: {} as IKnowledge,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await kbService.get_kb_detail({\n        kb_id: knowledgeBaseId,\n      });\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useFetchKnowledgeList = (\n  shouldFilterListWithoutDocument: boolean = false,\n): {\n  list: IKnowledge[];\n  loading: boolean;\n} => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['fetchKnowledgeList'],\n    initialData: [],\n    gcTime: 0, // https://tanstack.com/query/latest/docs/framework/react/guides/caching?from=reactQueryV3\n    queryFn: async () => {\n      const { data } = await listDataset();\n      const list = data?.data?.kbs ?? [];\n      return shouldFilterListWithoutDocument\n        ? list.filter((x: IKnowledge) => x.chunk_num > 0)\n        : list;\n    },\n  });\n\n  return { list: data, loading };\n};\n\nexport const useSelectKnowledgeOptions = () => {\n  const { list } = useFetchKnowledgeList();\n\n  const options = list?.map((item) => ({\n    label: item.name,\n    value: item.id,\n  }));\n\n  return options;\n};\n\nexport const useInfiniteFetchKnowledgeList = () => {\n  const { searchString, handleInputChange } = useHandleSearchChange();\n  const debouncedSearchString = useDebounce(searchString, { wait: 500 });\n\n  const PageSize = 30;\n\n  const {\n    data,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetching,\n    isFetchingNextPage,\n    status,\n  } = useInfiniteQuery({\n    queryKey: ['infiniteFetchKnowledgeList', debouncedSearchString],\n    queryFn: async ({ pageParam }) => {\n      const { data } = await listDataset({\n        page: pageParam,\n        page_size: PageSize,\n        keywords: debouncedSearchString,\n      });\n      const list = data?.data ?? [];\n      return list;\n    },\n    initialPageParam: 1,\n    getNextPageParam: (lastPage, pages, lastPageParam) => {\n      if (lastPageParam * PageSize <= lastPage.total) {\n        return lastPageParam + 1;\n      }\n      return undefined;\n    },\n  });\n  return {\n    data,\n    loading: isFetching,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetching,\n    isFetchingNextPage,\n    status,\n    handleInputChange,\n    searchString,\n  };\n};\n\nexport const useCreateKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['infiniteFetchKnowledgeList'],\n    mutationFn: async (params: { id?: string; name: string }) => {\n      const { data = {} } = await kbService.createKb(params);\n      if (data.code === 0) {\n        message.success(\n          i18n.t(`message.${params?.id ? 'modified' : 'created'}`),\n        );\n        queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeList'] });\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, createKnowledge: mutateAsync };\n};\n\nexport const useDeleteKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteKnowledge'],\n    mutationFn: async (id: string) => {\n      const { data } = await kbService.rmKb({ kb_id: id });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.deleted`));\n        queryClient.invalidateQueries({\n          queryKey: ['infiniteFetchKnowledgeList'],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteKnowledge: mutateAsync };\n};\n\n//#region knowledge configuration\n\nexport const useUpdateKnowledge = (shouldFetchList = false) => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveKnowledge'],\n    mutationFn: async (params: Record<string, any>) => {\n      const { data = {} } = await kbService.updateKb({\n        kb_id: params?.kb_id ? params?.kb_id : knowledgeBaseId,\n        ...params,\n      });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.updated`));\n        if (shouldFetchList) {\n          queryClient.invalidateQueries({\n            queryKey: ['fetchKnowledgeListByPage'],\n          });\n        } else {\n          queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeDetail'] });\n        }\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, saveKnowledgeConfiguration: mutateAsync };\n};\n\n//#endregion\n\n//#region Retrieval testing\n\nexport const useTestChunkRetrieval = (): ResponsePostType<ITestingResult> & {\n  testChunk: (...params: any[]) => void;\n} => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const { page, size: pageSize } = useSetPaginationParams();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['testChunk'], // This method is invalid\n    gcTime: 0,\n    mutationFn: async (values: any) => {\n      const { data } = await kbService.retrieval_test({\n        ...values,\n        kb_id: values.kb_id ?? knowledgeBaseId,\n        page,\n        size: pageSize,\n      });\n      if (data.code === 0) {\n        const res = data.data;\n        return {\n          ...res,\n          documents: res.doc_aggs,\n        };\n      }\n      return (\n        data?.data ?? {\n          chunks: [],\n          documents: [],\n          total: 0,\n        }\n      );\n    },\n  });\n\n  return {\n    data: data ?? { chunks: [], documents: [], total: 0 },\n    loading,\n    testChunk: mutateAsync,\n  };\n};\n\nexport const useTestChunkAllRetrieval = (): ResponsePostType<ITestingResult> & {\n  testChunkAll: (...params: any[]) => void;\n} => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const { page, size: pageSize } = useSetPaginationParams();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['testChunkAll'], // This method is invalid\n    gcTime: 0,\n    mutationFn: async (values: any) => {\n      const { data } = await kbService.retrieval_test({\n        ...values,\n        kb_id: values.kb_id ?? knowledgeBaseId,\n        doc_ids: [],\n        page,\n        size: pageSize,\n      });\n      if (data.code === 0) {\n        const res = data.data;\n        return {\n          ...res,\n          documents: res.doc_aggs,\n        };\n      }\n      return (\n        data?.data ?? {\n          chunks: [],\n          documents: [],\n          total: 0,\n        }\n      );\n    },\n  });\n\n  return {\n    data: data ?? { chunks: [], documents: [], total: 0 },\n    loading,\n    testChunkAll: mutateAsync,\n  };\n};\n\nexport const useChunkIsTesting = () => {\n  return useIsMutating({ mutationKey: ['testChunk'] }) > 0;\n};\n\nexport const useSelectTestingResult = (): ITestingResult => {\n  const data = useMutationState({\n    filters: { mutationKey: ['testChunk'] },\n    select: (mutation) => {\n      return mutation.state.data;\n    },\n  });\n  return (data.at(-1) ?? {\n    chunks: [],\n    documents: [],\n    total: 0,\n  }) as ITestingResult;\n};\n\nexport const useSelectIsTestingSuccess = () => {\n  const status = useMutationState({\n    filters: { mutationKey: ['testChunk'] },\n    select: (mutation) => {\n      return mutation.state.status;\n    },\n  });\n  return status.at(-1) === 'success';\n};\n\nexport const useAllTestingSuccess = () => {\n  const status = useMutationState({\n    filters: { mutationKey: ['testChunkAll'] },\n    select: (mutation) => {\n      return mutation.state.status;\n    },\n  });\n  return status.at(-1) === 'success';\n};\n\nexport const useAllTestingResult = (): ITestingResult => {\n  const data = useMutationState({\n    filters: { mutationKey: ['testChunkAll'] },\n    select: (mutation) => {\n      return mutation.state.data;\n    },\n  });\n  return (data.at(-1) ?? {\n    chunks: [],\n    documents: [],\n    total: 0,\n  }) as ITestingResult;\n};\n//#endregion\n\n//#region tags\n\nexport const useFetchTagList = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const { data, isFetching: loading } = useQuery<Array<[string, number]>>({\n    queryKey: ['fetchTagList'],\n    initialData: [],\n    gcTime: 0, // https://tanstack.com/query/latest/docs/framework/react/guides/caching?from=reactQueryV3\n    queryFn: async () => {\n      const { data } = await listTag(knowledgeBaseId);\n      const list = data?.data || [];\n      return list;\n    },\n  });\n\n  return { list: data, loading };\n};\n\nexport const useDeleteTag = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteTag'],\n    mutationFn: async (tags: string[]) => {\n      const { data } = await removeTag(knowledgeBaseId, tags);\n      if (data.code === 0) {\n        message.success(i18n.t(`message.deleted`));\n        queryClient.invalidateQueries({\n          queryKey: ['fetchTagList'],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteTag: mutateAsync };\n};\n\nexport const useRenameTag = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['renameTag'],\n    mutationFn: async (params: IRenameTag) => {\n      const { data } = await renameTag(knowledgeBaseId, params);\n      if (data.code === 0) {\n        message.success(i18n.t(`message.modified`));\n        queryClient.invalidateQueries({\n          queryKey: ['fetchTagList'],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, renameTag: mutateAsync };\n};\n\nexport const useTagIsRenaming = () => {\n  return useIsMutating({ mutationKey: ['renameTag'] }) > 0;\n};\n\nexport const useFetchTagListByKnowledgeIds = () => {\n  const [knowledgeIds, setKnowledgeIds] = useState<string[]>([]);\n\n  const { data, isFetching: loading } = useQuery<Array<[string, number]>>({\n    queryKey: ['fetchTagListByKnowledgeIds'],\n    enabled: knowledgeIds.length > 0,\n    initialData: [],\n    gcTime: 0, // https://tanstack.com/query/latest/docs/framework/react/guides/caching?from=reactQueryV3\n    queryFn: async () => {\n      const { data } = await kbService.listTagByKnowledgeIds({\n        kb_ids: knowledgeIds.join(','),\n      });\n      const list = data?.data || [];\n      return list;\n    },\n  });\n\n  return { list: data, loading, setKnowledgeIds };\n};\n\n//#endregion\n\nexport function useFetchKnowledgeGraph() {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const { data, isFetching: loading } = useQuery<IKnowledgeGraph>({\n    queryKey: ['fetchKnowledgeGraph', knowledgeBaseId],\n    initialData: { graph: {}, mind_map: {} } as IKnowledgeGraph,\n    enabled: !!knowledgeBaseId,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await getKnowledgeGraph(knowledgeBaseId);\n      return data?.data;\n    },\n  });\n\n  return { data, loading };\n}\n\nexport const useRemoveKnowledgeGraph = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['removeKnowledgeGraph'],\n    mutationFn: async () => {\n      const { data } = await deleteKnowledgeGraph(knowledgeBaseId);\n      if (data.code === 0) {\n        message.success(i18n.t(`message.deleted`));\n        queryClient.invalidateQueries({\n          queryKey: ['fetchKnowledgeGraph'],\n        });\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, removeKnowledgeGraph: mutateAsync };\n};\n","import { LlmIcon } from '@/components/svg-icon';\nimport { LlmModelType } from '@/constants/knowledge';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport {\n  IFactory,\n  IMyLlmValue,\n  IThirdOAIModelCollection as IThirdAiModelCollection,\n  IThirdOAIModel,\n  IThirdOAIModelCollection,\n} from '@/interfaces/database/llm';\nimport {\n  IAddLlmRequestBody,\n  IDeleteLlmRequestBody,\n} from '@/interfaces/request/llm';\nimport userService from '@/services/user-service';\nimport { sortLLmFactoryListBySpecifiedOrder } from '@/utils/common-util';\nimport { getLLMIconName, getRealModelName } from '@/utils/llm-util';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Flex, message } from 'antd';\nimport { DefaultOptionType } from 'antd/es/select';\nimport { useCallback, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useFetchLlmList = (\n  modelType?: LlmModelType,\n): IThirdAiModelCollection => {\n  const { data } = useQuery({\n    queryKey: ['llmList'],\n    initialData: {},\n    queryFn: async () => {\n      const { data } = await userService.llm_list({ model_type: modelType });\n\n      return data?.data ?? {};\n    },\n  });\n\n  return data;\n};\n\nexport const useSelectLlmOptions = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const embeddingModelOptions = useMemo(() => {\n    return Object.entries(llmInfo).map(([key, value]) => {\n      return {\n        label: key,\n        options: value.map((x) => ({\n          label: getRealModelName(x.llm_name),\n          value: `${x.llm_name}@${x.fid}`,\n          disabled: !x.available,\n        })),\n      };\n    });\n  }, [llmInfo]);\n\n  return embeddingModelOptions;\n};\n\nfunction buildLlmOptionsWithIcon(x: IThirdOAIModel) {\n  return {\n    label: (\n      <Flex align=\"center\" gap={6}>\n        <LlmIcon\n          name={getLLMIconName(x.fid, x.llm_name)}\n          width={26}\n          height={26}\n          size={'small'}\n        />\n        <span>{getRealModelName(x.llm_name)}</span>\n      </Flex>\n    ),\n    value: `${x.llm_name}@${x.fid}`,\n    disabled: !x.available,\n    is_tools: x.is_tools,\n  };\n}\n\nexport const useSelectLlmOptionsByModelType = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const groupImage2TextOptions = useCallback(() => {\n    const modelType = LlmModelType.Image2text;\n    const modelTag = modelType.toUpperCase();\n\n    return Object.entries(llmInfo)\n      .map(([key, value]) => {\n        return {\n          label: key,\n          options: value\n            .filter(\n              (x) =>\n                (x.model_type.includes(modelType) ||\n                  (x.tags && x.tags.includes(modelTag))) &&\n                x.available,\n            )\n            .map(buildLlmOptionsWithIcon),\n        };\n      })\n      .filter((x) => x.options.length > 0);\n  }, [llmInfo]);\n\n  const groupOptionsByModelType = useCallback(\n    (modelType: LlmModelType) => {\n      return Object.entries(llmInfo)\n        .filter(([, value]) =>\n          modelType\n            ? value.some((x) => x.model_type.includes(modelType))\n            : true,\n        )\n        .map(([key, value]) => {\n          return {\n            label: key,\n            options: value\n              .filter(\n                (x) =>\n                  (modelType ? x.model_type.includes(modelType) : true) &&\n                  x.available,\n              )\n              .map(buildLlmOptionsWithIcon),\n          };\n        })\n        .filter((x) => x.options.length > 0);\n    },\n    [llmInfo],\n  );\n\n  return {\n    [LlmModelType.Chat]: groupOptionsByModelType(LlmModelType.Chat),\n    [LlmModelType.Embedding]: groupOptionsByModelType(LlmModelType.Embedding),\n    [LlmModelType.Image2text]: groupImage2TextOptions(),\n    [LlmModelType.Speech2text]: groupOptionsByModelType(\n      LlmModelType.Speech2text,\n    ),\n    [LlmModelType.Rerank]: groupOptionsByModelType(LlmModelType.Rerank),\n    [LlmModelType.TTS]: groupOptionsByModelType(LlmModelType.TTS),\n  };\n};\n\nexport const useComposeLlmOptionsByModelTypes = (\n  modelTypes: LlmModelType[],\n) => {\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  return modelTypes.reduce<\n    (DefaultOptionType & {\n      options: { label: JSX.Element; value: string; disabled: boolean; is_tools: boolean }[];\n    })[]\n  >((pre, cur) => {\n    const options = allOptions[cur];\n    options.forEach((x) => {\n      const item = pre.find((y) => y.label === x.label);\n      if (item) {\n        item.options.push(...x.options);\n      } else {\n        pre.push(x);\n      }\n    });\n\n    return pre;\n  }, []);\n};\n\nexport const useFetchLlmFactoryList = (): ResponseGetType<IFactory[]> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['factoryList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.factories_list();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading };\n};\n\nexport type LlmItem = { name: string; logo: string } & IMyLlmValue;\n\nexport const useFetchMyLlmList = (): ResponseGetType<\n  Record<string, IMyLlmValue>\n> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['myLlmList'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.my_llm();\n\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectLlmList = () => {\n  const { data: myLlmList, loading: myLlmListLoading } = useFetchMyLlmList();\n  const { data: factoryList, loading: factoryListLoading } =\n    useFetchLlmFactoryList();\n\n  const nextMyLlmList: Array<LlmItem> = useMemo(() => {\n    return Object.entries(myLlmList).map(([key, value]) => ({\n      name: key,\n      logo: factoryList.find((x) => x.name === key)?.logo ?? '',\n      ...value,\n      llm: value.llm.map((x) => ({ ...x, name: x.name })),\n    }));\n  }, [myLlmList, factoryList]);\n\n  const nextFactoryList = useMemo(() => {\n    const currentList = factoryList.filter((x) =>\n      Object.keys(myLlmList).every((y) => y !== x.name),\n    );\n    return sortLLmFactoryListBySpecifiedOrder(currentList);\n  }, [factoryList, myLlmList]);\n\n  return {\n    myLlmList: nextMyLlmList,\n    factoryList: nextFactoryList,\n    loading: myLlmListLoading || factoryListLoading,\n  };\n};\n\nexport interface IApiKeySavingParams {\n  llm_factory: string;\n  api_key: string;\n  llm_name?: string;\n  model_type?: string;\n  base_url?: string;\n}\n\nexport const useSaveApiKey = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveApiKey'],\n    mutationFn: async (params: IApiKeySavingParams) => {\n      const { data } = await userService.set_api_key(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveApiKey: mutateAsync };\n};\n\nexport interface ISystemModelSettingSavingParams {\n  tenant_id: string;\n  name?: string;\n  asr_id: string;\n  embd_id: string;\n  img2txt_id: string;\n  llm_id: string;\n}\n\nexport const useSaveTenantInfo = () => {\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveTenantInfo'],\n    mutationFn: async (params: ISystemModelSettingSavingParams) => {\n      const { data } = await userService.set_tenant_info(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveTenantInfo: mutateAsync };\n};\n\nexport const useAddLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addLlm'],\n    mutationFn: async (params: IAddLlmRequestBody) => {\n      const { data } = await userService.add_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, addLlm: mutateAsync };\n};\n\nexport const useDeleteLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteLlm'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.delete_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteLlm: mutateAsync };\n};\n\nexport const useDeleteFactory = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteFactory'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.deleteFactory(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteFactory: mutateAsync };\n};\n","import { Authorization } from '@/constants/authorization';\nimport { MessageType } from '@/constants/chat';\nimport { LanguageTranslationMap } from '@/constants/common';\nimport { ResponseType } from '@/interfaces/database/base';\nimport { IAnswer, Message } from '@/interfaces/database/chat';\nimport { IKnowledgeFile } from '@/interfaces/database/knowledge';\nimport { IClientConversation, IMessage } from '@/pages/chat/interface';\nimport api from '@/utils/api';\nimport { getAuthorization } from '@/utils/authorization-util';\nimport { buildMessageUuid } from '@/utils/chat';\nimport { PaginationProps, message } from 'antd';\nimport { FormInstance } from 'antd/lib';\nimport axios from 'axios';\nimport { EventSourceParserStream } from 'eventsource-parser/stream';\nimport { omit } from 'lodash';\nimport {\n  ChangeEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { v4 as uuid } from 'uuid';\nimport { useTranslate } from './common-hooks';\nimport { useSetPaginationParams } from './route-hook';\nimport { useFetchTenantInfo, useSaveSetting } from './user-setting-hooks';\n\nexport const useSetSelectedRecord = <T = IKnowledgeFile>() => {\n  const [currentRecord, setCurrentRecord] = useState<T>({} as T);\n\n  const setRecord = (record: T) => {\n    setCurrentRecord(record);\n  };\n\n  return { currentRecord, setRecord };\n};\n\nexport const useHandleSearchChange = () => {\n  const [searchString, setSearchString] = useState('');\n\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      const value = e.target.value;\n      setSearchString(value);\n    },\n    [],\n  );\n\n  return { handleInputChange, searchString };\n};\n\nexport const useChangeLanguage = () => {\n  const { i18n } = useTranslation();\n  const { saveSetting } = useSaveSetting();\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(\n      LanguageTranslationMap[lng as keyof typeof LanguageTranslationMap],\n    );\n    saveSetting({ language: lng });\n  };\n\n  return changeLanguage;\n};\n\nexport const useGetPaginationWithRouter = () => {\n  const { t } = useTranslate('common');\n  const {\n    setPaginationParams,\n    page,\n    size: pageSize,\n  } = useSetPaginationParams();\n\n  const onPageChange: PaginationProps['onChange'] = useCallback(\n    (pageNumber: number, pageSize: number) => {\n      setPaginationParams(pageNumber, pageSize);\n    },\n    [setPaginationParams],\n  );\n\n  const setCurrentPagination = useCallback(\n    (pagination: { page: number; pageSize?: number }) => {\n      setPaginationParams(pagination.page, pagination.pageSize);\n    },\n    [setPaginationParams],\n  );\n\n  const pagination: PaginationProps = useMemo(() => {\n    return {\n      showQuickJumper: true,\n      total: 0,\n      showSizeChanger: true,\n      current: page,\n      pageSize: pageSize,\n      pageSizeOptions: [1, 2, 10, 20, 50, 100],\n      onChange: onPageChange,\n      showTotal: (total) => `${t('total')} ${total}`,\n    };\n  }, [t, onPageChange, page, pageSize]);\n\n  return {\n    pagination,\n    setPagination: setCurrentPagination,\n  };\n};\n\nexport const useGetPagination = () => {\n  const [pagination, setPagination] = useState({ page: 1, pageSize: 10 });\n  const { t } = useTranslate('common');\n\n  const onPageChange: PaginationProps['onChange'] = useCallback(\n    (pageNumber: number, pageSize: number) => {\n      setPagination({ page: pageNumber, pageSize });\n    },\n    [],\n  );\n\n  const currentPagination: PaginationProps = useMemo(() => {\n    return {\n      showQuickJumper: true,\n      total: 0,\n      showSizeChanger: true,\n      current: pagination.page,\n      pageSize: pagination.pageSize,\n      pageSizeOptions: [1, 2, 10, 20, 50, 100],\n      onChange: onPageChange,\n      showTotal: (total) => `${t('total')} ${total}`,\n    };\n  }, [t, onPageChange, pagination]);\n\n  return {\n    pagination: currentPagination,\n  };\n};\n\nexport interface AppConf {\n  appName: string;\n}\n\nexport const useFetchAppConf = () => {\n  const [appConf, setAppConf] = useState<AppConf>({} as AppConf);\n  const fetchAppConf = useCallback(async () => {\n    const ret = await axios.get('/conf.json');\n\n    setAppConf(ret.data);\n  }, []);\n\n  useEffect(() => {\n    fetchAppConf();\n  }, [fetchAppConf]);\n\n  return appConf;\n};\n\nexport const useSendMessageWithSse = (\n  url: string = api.completeConversation,\n) => {\n  const [answer, setAnswer] = useState<IAnswer>({} as IAnswer);\n  const [done, setDone] = useState(true);\n  const timer = useRef<any>();\n  const sseRef = useRef<AbortController>();\n\n  const initializeSseRef = useCallback(() => {\n    sseRef.current = new AbortController();\n  }, []);\n\n  const resetAnswer = useCallback(() => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n    timer.current = setTimeout(() => {\n      setAnswer({} as IAnswer);\n      clearTimeout(timer.current);\n    }, 1000);\n  }, []);\n\n  const send = useCallback(\n    async (\n      body: any,\n      controller?: AbortController,\n    ): Promise<{ response: Response; data: ResponseType } | undefined> => {\n      initializeSseRef();\n      try {\n        setDone(false);\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            [Authorization]: getAuthorization(),\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(body),\n          signal: controller?.signal || sseRef.current?.signal,\n        });\n\n        const res = response.clone().json();\n\n        const reader = response?.body\n          ?.pipeThrough(new TextDecoderStream())\n          .pipeThrough(new EventSourceParserStream())\n          .getReader();\n\n        while (true) {\n          const x = await reader?.read();\n          if (x) {\n            const { done, value } = x;\n            if (done) {\n              console.info('done');\n              resetAnswer();\n              break;\n            }\n            try {\n              const val = JSON.parse(value?.data || '');\n              const d = val?.data;\n              if (typeof d !== 'boolean') {\n                console.info('data:', d);\n                setAnswer({\n                  ...d,\n                  conversationId: body?.conversation_id,\n                });\n              }\n            } catch (e) {\n              console.warn(e);\n            }\n          }\n        }\n        console.info('done?');\n        setDone(true);\n        resetAnswer();\n        return { data: await res, response };\n      } catch (e) {\n        setDone(true);\n        resetAnswer();\n\n        console.warn(e);\n      }\n    },\n    [initializeSseRef, url, resetAnswer],\n  );\n\n  const stopOutputMessage = useCallback(() => {\n    sseRef.current?.abort();\n  }, []);\n\n  return { send, answer, done, setDone, resetAnswer, stopOutputMessage };\n};\n\nexport const useSpeechWithSse = (url: string = api.tts) => {\n  const read = useCallback(\n    async (body: any) => {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          [Authorization]: getAuthorization(),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n      try {\n        const res = await response.clone().json();\n        if (res?.code !== 0) {\n          message.error(res?.message);\n        }\n      } catch (error) {\n        console.warn('🚀 ~ error:', error);\n      }\n      return response;\n    },\n    [url],\n  );\n\n  return { read };\n};\n\n//#region chat hooks\n\nexport const useScrollToBottom = (messages?: unknown) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = useCallback(() => {\n    if (messages) {\n      ref.current?.scrollIntoView({ behavior: 'instant' });\n    }\n  }, [messages]); // If the message changes, scroll to the bottom\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [scrollToBottom]);\n\n  return ref;\n};\n\nexport const useHandleMessageInputChange = () => {\n  const [value, setValue] = useState('');\n\n  const handleInputChange: ChangeEventHandler<HTMLTextAreaElement> = (e) => {\n    const value = e.target.value;\n    const nextValue = value.replaceAll('\\\\n', '\\n').replaceAll('\\\\t', '\\t');\n    setValue(nextValue);\n  };\n\n  return {\n    handleInputChange,\n    value,\n    setValue,\n  };\n};\n\nexport const useSelectDerivedMessages = () => {\n  const [derivedMessages, setDerivedMessages] = useState<IMessage[]>([]);\n\n  const ref = useScrollToBottom(derivedMessages);\n\n  const addNewestQuestion = useCallback(\n    (message: Message, answer: string = '') => {\n      setDerivedMessages((pre) => {\n        return [\n          ...pre,\n          {\n            ...message,\n            id: buildMessageUuid(message), // The message id is generated on the front end,\n            // and the message id returned by the back end is the same as the question id,\n            //  so that the pair of messages can be deleted together when deleting the message\n          },\n          {\n            role: MessageType.Assistant,\n            content: answer,\n            id: buildMessageUuid({ ...message, role: MessageType.Assistant }),\n          },\n        ];\n      });\n    },\n    [],\n  );\n\n  const addNewestOneQuestion = useCallback((message: Message) => {\n    setDerivedMessages((pre) => {\n      return [\n        ...pre,\n        {\n          ...message,\n          id: buildMessageUuid(message), // The message id is generated on the front end,\n          // and the message id returned by the back end is the same as the question id,\n          //  so that the pair of messages can be deleted together when deleting the message\n        },\n      ];\n    });\n  }, []);\n\n  // Add the streaming message to the last item in the message list\n  const addNewestAnswer = useCallback((answer: IAnswer) => {\n    setDerivedMessages((pre) => {\n      return [\n        ...(pre?.slice(0, -1) ?? []),\n        {\n          role: MessageType.Assistant,\n          content: answer.answer,\n          reference: answer.reference,\n          id: buildMessageUuid({\n            id: answer.id,\n            role: MessageType.Assistant,\n          }),\n          prompt: answer.prompt,\n          audio_binary: answer.audio_binary,\n          ...omit(answer, 'reference'),\n        },\n      ];\n    });\n  }, []);\n\n  // Add the streaming message to the last item in the message list\n  const addNewestOneAnswer = useCallback((answer: IAnswer) => {\n    setDerivedMessages((pre) => {\n      const idx = pre.findIndex((x) => x.id === answer.id);\n\n      if (idx !== -1) {\n        return pre.map((x) => {\n          if (x.id === answer.id) {\n            return { ...x, content: answer.answer };\n          }\n          return x;\n        });\n      }\n\n      return [\n        ...(pre ?? []),\n        {\n          role: MessageType.Assistant,\n          content: answer.answer,\n          reference: answer.reference,\n          id: buildMessageUuid({\n            id: answer.id,\n            role: MessageType.Assistant,\n          }),\n          prompt: answer.prompt,\n          audio_binary: answer.audio_binary,\n          ...omit(answer, 'reference'),\n        },\n      ];\n    });\n  }, []);\n\n  const removeLatestMessage = useCallback(() => {\n    setDerivedMessages((pre) => {\n      const nextMessages = pre?.slice(0, -2) ?? [];\n      return nextMessages;\n    });\n  }, []);\n\n  const removeMessageById = useCallback(\n    (messageId: string) => {\n      setDerivedMessages((pre) => {\n        const nextMessages = pre?.filter((x) => x.id !== messageId) ?? [];\n        return nextMessages;\n      });\n    },\n    [setDerivedMessages],\n  );\n\n  const removeMessagesAfterCurrentMessage = useCallback(\n    (messageId: string) => {\n      setDerivedMessages((pre) => {\n        const index = pre.findIndex((x) => x.id === messageId);\n        if (index !== -1) {\n          let nextMessages = pre.slice(0, index + 2) ?? [];\n          const latestMessage = nextMessages.at(-1);\n          nextMessages = latestMessage\n            ? [\n                ...nextMessages.slice(0, -1),\n                {\n                  ...latestMessage,\n                  content: '',\n                  reference: undefined,\n                  prompt: undefined,\n                },\n              ]\n            : nextMessages;\n          return nextMessages;\n        }\n        return pre;\n      });\n    },\n    [setDerivedMessages],\n  );\n\n  return {\n    ref,\n    derivedMessages,\n    setDerivedMessages,\n    addNewestQuestion,\n    addNewestAnswer,\n    removeLatestMessage,\n    removeMessageById,\n    addNewestOneQuestion,\n    addNewestOneAnswer,\n    removeMessagesAfterCurrentMessage,\n  };\n};\n\nexport interface IRemoveMessageById {\n  removeMessageById(messageId: string): void;\n}\n\nexport const useRemoveMessagesAfterCurrentMessage = (\n  setCurrentConversation: (\n    callback: (state: IClientConversation) => IClientConversation,\n  ) => void,\n) => {\n  const removeMessagesAfterCurrentMessage = useCallback(\n    (messageId: string) => {\n      setCurrentConversation((pre) => {\n        const index = pre.message?.findIndex((x) => x.id === messageId);\n        if (index !== -1) {\n          let nextMessages = pre.message?.slice(0, index + 2) ?? [];\n          const latestMessage = nextMessages.at(-1);\n          nextMessages = latestMessage\n            ? [\n                ...nextMessages.slice(0, -1),\n                {\n                  ...latestMessage,\n                  content: '',\n                  reference: undefined,\n                  prompt: undefined,\n                },\n              ]\n            : nextMessages;\n          return {\n            ...pre,\n            message: nextMessages,\n          };\n        }\n        return pre;\n      });\n    },\n    [setCurrentConversation],\n  );\n\n  return { removeMessagesAfterCurrentMessage };\n};\n\nexport interface IRegenerateMessage {\n  regenerateMessage?: (message: Message) => void;\n}\n\nexport const useRegenerateMessage = ({\n  removeMessagesAfterCurrentMessage,\n  sendMessage,\n  messages,\n}: {\n  removeMessagesAfterCurrentMessage(messageId: string): void;\n  sendMessage({\n    message,\n  }: {\n    message: Message;\n    messages?: Message[];\n  }): void | Promise<any>;\n  messages: Message[];\n}) => {\n  const regenerateMessage = useCallback(\n    async (message: Message) => {\n      if (message.id) {\n        removeMessagesAfterCurrentMessage(message.id);\n        const index = messages.findIndex((x) => x.id === message.id);\n        let nextMessages;\n        if (index !== -1) {\n          nextMessages = messages.slice(0, index);\n        }\n        sendMessage({\n          message: { ...message, id: uuid() },\n          messages: nextMessages,\n        });\n      }\n    },\n    [removeMessagesAfterCurrentMessage, sendMessage, messages],\n  );\n\n  return { regenerateMessage };\n};\n\n// #endregion\n\n/**\n *\n * @param defaultId\n * used to switch between different items, similar to radio\n * @returns\n */\nexport const useSelectItem = (defaultId?: string) => {\n  const [selectedId, setSelectedId] = useState('');\n\n  const handleItemClick = useCallback(\n    (id: string) => () => {\n      setSelectedId(id);\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (defaultId) {\n      setSelectedId(defaultId);\n    }\n  }, [defaultId]);\n\n  return { selectedId, handleItemClick };\n};\n\nexport const useFetchModelId = () => {\n  const { data: tenantInfo } = useFetchTenantInfo(true);\n\n  return tenantInfo?.llm_id ?? '';\n};\n\nconst ChunkTokenNumMap = {\n  naive: 128,\n  knowledge_graph: 8192,\n};\n\nexport const useHandleChunkMethodSelectChange = (form: FormInstance) => {\n  // const form = Form.useFormInstance();\n  const handleChange = useCallback(\n    (value: string) => {\n      if (value in ChunkTokenNumMap) {\n        form.setFieldValue(\n          ['parser_config', 'chunk_token_num'],\n          ChunkTokenNumMap[value as keyof typeof ChunkTokenNumMap],\n        );\n      }\n    },\n    [form],\n  );\n\n  return handleChange;\n};\n\n// reset form fields when modal is form, closed\nexport const useResetFormOnCloseModal = ({\n  form,\n  visible,\n}: {\n  form: FormInstance;\n  visible?: boolean;\n}) => {\n  const prevOpenRef = useRef<boolean>();\n  useEffect(() => {\n    prevOpenRef.current = visible;\n  }, [visible]);\n  const prevOpen = prevOpenRef.current;\n\n  useEffect(() => {\n    if (!visible && prevOpen) {\n      form.resetFields();\n    }\n  }, [form, prevOpen, visible]);\n};\n","import {\n  KnowledgeRouteKey,\n  KnowledgeSearchParams,\n} from '@/constants/knowledge';\nimport { useCallback } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'umi';\n\nexport enum SegmentIndex {\n  Second = '2',\n  Third = '3',\n}\n\nexport const useSegmentedPathName = (index: SegmentIndex) => {\n  const { pathname } = useLocation();\n\n  const pathArray = pathname.split('/');\n  return pathArray[index] || '';\n};\n\nexport const useSecondPathName = () => {\n  return useSegmentedPathName(SegmentIndex.Second);\n};\n\nexport const useThirdPathName = () => {\n  return useSegmentedPathName(SegmentIndex.Third);\n};\n\nexport const useGetKnowledgeSearchParams = () => {\n  const [currentQueryParameters] = useSearchParams();\n\n  return {\n    documentId:\n      currentQueryParameters.get(KnowledgeSearchParams.DocumentId) || '',\n    knowledgeId:\n      currentQueryParameters.get(KnowledgeSearchParams.KnowledgeId) || '',\n  };\n};\n\nexport const useNavigateWithFromState = () => {\n  const navigate = useNavigate();\n  return useCallback(\n    (path: string) => {\n      navigate(path, { state: { from: path } });\n    },\n    [navigate],\n  );\n};\n\nexport const useNavigateToDataset = () => {\n  const navigate = useNavigate();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  return useCallback(() => {\n    navigate(`/knowledge/${KnowledgeRouteKey.Dataset}?id=${knowledgeId}`);\n  }, [knowledgeId, navigate]);\n};\n\nexport const useGetPaginationParams = () => {\n  const [currentQueryParameters] = useSearchParams();\n\n  return {\n    page: currentQueryParameters.get('page') || 1,\n    size: currentQueryParameters.get('size') || 10,\n  };\n};\n\nexport const useSetPaginationParams = () => {\n  const [queryParameters, setSearchParams] = useSearchParams();\n  // const newQueryParameters: URLSearchParams = useMemo(\n  //   () => new URLSearchParams(queryParameters.toString()),\n  //   [queryParameters],\n  // );\n\n  const setPaginationParams = useCallback(\n    (page: number = 1, pageSize?: number) => {\n      queryParameters.set('page', page.toString());\n      if (pageSize) {\n        queryParameters.set('size', pageSize.toString());\n      }\n      setSearchParams(queryParameters);\n    },\n    [setSearchParams, queryParameters],\n  );\n\n  return {\n    setPaginationParams,\n    page: Number(queryParameters.get('page')) || 1,\n    size: Number(queryParameters.get('size')) || 10,\n  };\n};\n","import { IRenameTag } from '@/interfaces/database/knowledge';\nimport {\n  IFetchDocumentListRequestBody,\n  IFetchKnowledgeListRequestBody,\n  IFetchKnowledgeListRequestParams,\n} from '@/interfaces/request/knowledge';\nimport api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request, { post } from '@/utils/request';\n\nconst {\n  create_kb,\n  update_kb,\n  rm_kb,\n  get_kb_detail,\n  kb_list,\n  get_document_list,\n  document_change_status,\n  document_rm,\n  document_delete,\n  document_create,\n  document_change_parser,\n  document_thumbnails,\n  chunk_list,\n  create_chunk,\n  set_chunk,\n  get_chunk,\n  switch_chunk,\n  rm_chunk,\n  retrieval_test,\n  document_rename,\n  document_run,\n  document_upload,\n  web_crawl,\n  knowledge_graph,\n  document_infos,\n  upload_and_parse,\n  listTagByKnowledgeIds,\n  setMeta,\n} = api;\n\nconst methods = {\n  // 知识库管理\n  createKb: {\n    url: create_kb,\n    method: 'post',\n  },\n  updateKb: {\n    url: update_kb,\n    method: 'post',\n  },\n  rmKb: {\n    url: rm_kb,\n    method: 'post',\n  },\n  get_kb_detail: {\n    url: get_kb_detail,\n    method: 'get',\n  },\n  getList: {\n    url: kb_list,\n    method: 'post',\n  },\n  // document manager\n  get_document_list: {\n    url: get_document_list,\n    method: 'get',\n  },\n  document_change_status: {\n    url: document_change_status,\n    method: 'post',\n  },\n  document_rm: {\n    url: document_rm,\n    method: 'post',\n  },\n  document_rename: {\n    url: document_rename,\n    method: 'post',\n  },\n  document_create: {\n    url: document_create,\n    method: 'post',\n  },\n  document_run: {\n    url: document_run,\n    method: 'post',\n  },\n  document_change_parser: {\n    url: document_change_parser,\n    method: 'post',\n  },\n  document_thumbnails: {\n    url: document_thumbnails,\n    method: 'get',\n  },\n  document_upload: {\n    url: document_upload,\n    method: 'post',\n  },\n  web_crawl: {\n    url: web_crawl,\n    method: 'post',\n  },\n  document_infos: {\n    url: document_infos,\n    method: 'post',\n  },\n  setMeta: {\n    url: setMeta,\n    method: 'post',\n  },\n  // chunk管理\n  chunk_list: {\n    url: chunk_list,\n    method: 'post',\n  },\n  create_chunk: {\n    url: create_chunk,\n    method: 'post',\n  },\n  set_chunk: {\n    url: set_chunk,\n    method: 'post',\n  },\n  get_chunk: {\n    url: get_chunk,\n    method: 'get',\n  },\n  switch_chunk: {\n    url: switch_chunk,\n    method: 'post',\n  },\n  rm_chunk: {\n    url: rm_chunk,\n    method: 'post',\n  },\n  retrieval_test: {\n    url: retrieval_test,\n    method: 'post',\n  },\n  knowledge_graph: {\n    url: knowledge_graph,\n    method: 'get',\n  },\n  document_delete: {\n    url: document_delete,\n    method: 'delete',\n  },\n  upload_and_parse: {\n    url: upload_and_parse,\n    method: 'post',\n  },\n  listTagByKnowledgeIds: {\n    url: listTagByKnowledgeIds,\n    method: 'get',\n  },\n};\n\nconst kbService = registerServer<keyof typeof methods>(methods, request);\n\nexport const listTag = (knowledgeId: string) =>\n  request.get(api.listTag(knowledgeId));\n\nexport const removeTag = (knowledgeId: string, tags: string[]) =>\n  post(api.removeTag(knowledgeId), { tags });\n\nexport const renameTag = (\n  knowledgeId: string,\n  { fromTag, toTag }: IRenameTag,\n) => post(api.renameTag(knowledgeId), { fromTag, toTag });\n\nexport function getKnowledgeGraph(knowledgeId: string) {\n  return request.get(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport function deleteKnowledgeGraph(knowledgeId: string) {\n  return request.delete(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport const listDataset = (\n  params?: IFetchKnowledgeListRequestParams,\n  body?: IFetchKnowledgeListRequestBody,\n) => request.post(api.kb_list, { data: body || {}, params });\n\nexport const listDocument = (\n  params?: IFetchKnowledgeListRequestParams,\n  body?: IFetchDocumentListRequestBody,\n) => request.post(api.get_document_list, { data: body || {}, params });\n\nexport default kbService;\n","import {\n  ChatVariableEnabledField,\n  EmptyConversationId,\n} from '@/constants/chat';\nimport { Message } from '@/interfaces/database/chat';\nimport { IMessage } from '@/pages/chat/interface';\nimport { omit } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nexport const isConversationIdExist = (conversationId: string) => {\n  return conversationId !== EmptyConversationId && conversationId !== '';\n};\n\nexport const buildMessageUuid = (message: Partial<Message | IMessage>) => {\n  if ('id' in message && message.id) {\n    return message.id;\n  }\n  return uuid();\n};\n\nexport const buildMessageListWithUuid = (messages?: Message[]) => {\n  return (\n    messages?.map((x: Message | IMessage) => ({\n      ...omit(x, 'reference'),\n      id: buildMessageUuid(x),\n    })) ?? []\n  );\n};\n\nexport const getConversationId = () => {\n  return uuid().replace(/-/g, '');\n};\n\n// When rendering each message, add a prefix to the id to ensure uniqueness.\nexport const buildMessageUuidWithRole = (\n  message: Partial<Message | IMessage>,\n) => {\n  return `${message.role}_${message.id}`;\n};\n\n// Preprocess LaTeX equations to be rendered by KaTeX\n// ref: https://github.com/remarkjs/react-markdown/issues/785\n\nexport const preprocessLaTeX = (content: string) => {\n  const blockProcessedContent = content.replace(\n    /\\\\\\[([\\s\\S]*?)\\\\\\]/g,\n    (_, equation) => `$$${equation}$$`,\n  );\n  const inlineProcessedContent = blockProcessedContent.replace(\n    /\\\\\\(([\\s\\S]*?)\\\\\\)/g,\n    (_, equation) => `$${equation}$`,\n  );\n  return inlineProcessedContent;\n};\n\nexport function replaceThinkToSection(text: string = '') {\n  const pattern = /<think>([\\s\\S]*?)<\\/think>/g;\n\n  const result = text.replace(pattern, '<section class=\"think\">$1</section>');\n\n  return result;\n}\n\nexport function setInitialChatVariableEnabledFieldValue(\n  field: ChatVariableEnabledField,\n) {\n  return false;\n  return field !== ChatVariableEnabledField.MaxTokensEnabled;\n}\n\nconst ShowImageFields = ['image', 'table'];\n\nexport function showImage(filed?: string) {\n  return ShowImageFields.some((x) => x === filed);\n}\n\nexport function setChatVariableEnabledFieldValuePage() {\n  const variableCheckBoxFieldMap = Object.values(\n    ChatVariableEnabledField,\n  ).reduce<Record<string, boolean>>((pre, cur) => {\n    pre[cur] = cur !== ChatVariableEnabledField.MaxTokensEnabled;\n    return pre;\n  }, {});\n\n  return variableCheckBoxFieldMap;\n}\n","export const getLLMIconName = (fid: string, llm_name: string) => {\n  if (fid === 'FastEmbed') {\n    return llm_name.split('/').at(0) ?? '';\n  }\n\n  return fid;\n};\n\nexport const getLlmNameAndFIdByLlmId = (llmId?: string) => {\n  const [llmName, fId] = llmId?.split('@') || [];\n\n  return { fId, llmName };\n};\n\n// The names of the large models returned by the interface are similar to \"deepseek-r1___OpenAI-API\"\nexport function getRealModelName(llmName: string) {\n  return llmName.split('__').at(0) ?? '';\n}\n","var map = {\n\t\"./akshare.svg\": 26032,\n\t\"./api.svg\": 30747,\n\t\"./arxiv.svg\": 90854,\n\t\"./assistant.svg\": 4159,\n\t\"./baidu-fanyi.svg\": 83544,\n\t\"./baidu.svg\": 92892,\n\t\"./begin.svg\": 69779,\n\t\"./bing.svg\": 55914,\n\t\"./cancel.svg\": 8156,\n\t\"./chat-app-cube.svg\": 34339,\n\t\"./chat-configuration-atom.svg\": 57950,\n\t\"./chat-star.svg\": 49570,\n\t\"./chunk-method/book-01.svg\": 38726,\n\t\"./chunk-method/book-02.svg\": 21357,\n\t\"./chunk-method/book-03.svg\": 88093,\n\t\"./chunk-method/book-04.svg\": 58355,\n\t\"./chunk-method/chunk-empty.svg\": 16035,\n\t\"./chunk-method/knowledge-graph-01.svg\": 42576,\n\t\"./chunk-method/knowledge-graph-02.svg\": 46853,\n\t\"./chunk-method/law-01.svg\": 54530,\n\t\"./chunk-method/law-02.svg\": 75787,\n\t\"./chunk-method/manual-01.svg\": 64179,\n\t\"./chunk-method/manual-02.svg\": 40547,\n\t\"./chunk-method/manual-03.svg\": 1437,\n\t\"./chunk-method/manual-04.svg\": 81486,\n\t\"./chunk-method/media-01.svg\": 33952,\n\t\"./chunk-method/media-02.svg\": 93802,\n\t\"./chunk-method/naive-01.svg\": 88488,\n\t\"./chunk-method/naive-02.svg\": 74795,\n\t\"./chunk-method/one-01.svg\": 88533,\n\t\"./chunk-method/one-02.svg\": 99199,\n\t\"./chunk-method/one-03.svg\": 23192,\n\t\"./chunk-method/one-04.svg\": 72906,\n\t\"./chunk-method/paper-01.svg\": 64018,\n\t\"./chunk-method/paper-02.svg\": 77250,\n\t\"./chunk-method/presentation-01.svg\": 87162,\n\t\"./chunk-method/presentation-02.svg\": 59640,\n\t\"./chunk-method/qa-01.svg\": 39420,\n\t\"./chunk-method/qa-02.svg\": 55086,\n\t\"./chunk-method/resume-01.svg\": 76604,\n\t\"./chunk-method/resume-02.svg\": 96131,\n\t\"./chunk-method/table-01.svg\": 42743,\n\t\"./chunk-method/table-02.svg\": 84817,\n\t\"./chunk-method/tag-01.svg\": 96953,\n\t\"./chunk-method/tag-02.svg\": 82472,\n\t\"./concentrator.svg\": 86933,\n\t\"./crawler.svg\": 71090,\n\t\"./database.svg\": 38575,\n\t\"./deepl.svg\": 98301,\n\t\"./delete.svg\": 71483,\n\t\"./disable.svg\": 84377,\n\t\"./duck.svg\": 24287,\n\t\"./email.svg\": 10808,\n\t\"./enable.svg\": 8207,\n\t\"./es.svg\": 96492,\n\t\"./exesql.svg\": 43004,\n\t\"./file-icon/aep.svg\": 83889,\n\t\"./file-icon/ai.svg\": 28897,\n\t\"./file-icon/avi.svg\": 27635,\n\t\"./file-icon/css.svg\": 52229,\n\t\"./file-icon/csv.svg\": 50747,\n\t\"./file-icon/dmg.svg\": 71691,\n\t\"./file-icon/doc.svg\": 35354,\n\t\"./file-icon/docx.svg\": 69139,\n\t\"./file-icon/eps.svg\": 43279,\n\t\"./file-icon/exe.svg\": 46462,\n\t\"./file-icon/fig.svg\": 33179,\n\t\"./file-icon/folder.svg\": 54168,\n\t\"./file-icon/gif.svg\": 73845,\n\t\"./file-icon/html.svg\": 53682,\n\t\"./file-icon/indd.svg\": 26763,\n\t\"./file-icon/java.svg\": 13916,\n\t\"./file-icon/jpeg.svg\": 19525,\n\t\"./file-icon/jpg.svg\": 24674,\n\t\"./file-icon/js.svg\": 38470,\n\t\"./file-icon/json.svg\": 56373,\n\t\"./file-icon/md.svg\": 77357,\n\t\"./file-icon/mkv.svg\": 49197,\n\t\"./file-icon/mp3.svg\": 44538,\n\t\"./file-icon/mp4.svg\": 52038,\n\t\"./file-icon/mpeg.svg\": 77747,\n\t\"./file-icon/pdf.svg\": 82938,\n\t\"./file-icon/png.svg\": 71915,\n\t\"./file-icon/ppt.svg\": 85173,\n\t\"./file-icon/pptx.svg\": 62133,\n\t\"./file-icon/psd.svg\": 30182,\n\t\"./file-icon/rss.svg\": 38428,\n\t\"./file-icon/sql.svg\": 78501,\n\t\"./file-icon/svg.svg\": 72515,\n\t\"./file-icon/tiff.svg\": 4502,\n\t\"./file-icon/txt.svg\": 55773,\n\t\"./file-icon/wav.svg\": 63645,\n\t\"./file-icon/webp.svg\": 87260,\n\t\"./file-icon/xls.svg\": 5343,\n\t\"./file-icon/xlsx.svg\": 41475,\n\t\"./file-icon/xml.svg\": 38476,\n\t\"./file-management.svg\": 39121,\n\t\"./github.svg\": 69696,\n\t\"./google-scholar.svg\": 99466,\n\t\"./google.svg\": 18176,\n\t\"./graph.svg\": 57355,\n\t\"./invoke-ai.svg\": 82888,\n\t\"./jin10.svg\": 31801,\n\t\"./keyword.svg\": 30552,\n\t\"./knowledge-base.svg\": 87055,\n\t\"./knowledge-configration.svg\": 96450,\n\t\"./knowledge-dataset.svg\": 9385,\n\t\"./knowledge-testing.svg\": 65376,\n\t\"./langfuse.svg\": 6514,\n\t\"./llm/anthropic.svg\": 74768,\n\t\"./llm/azure.svg\": 99817,\n\t\"./llm/baai.svg\": 93594,\n\t\"./llm/baichuan.svg\": 6507,\n\t\"./llm/bedrock.svg\": 30818,\n\t\"./llm/chat-minimax.svg\": 69534,\n\t\"./llm/cohere.svg\": 86198,\n\t\"./llm/deepseek.svg\": 23476,\n\t\"./llm/fish-audio.svg\": 97300,\n\t\"./llm/gemini.svg\": 69156,\n\t\"./llm/github.svg\": 29034,\n\t\"./llm/google-cloud.svg\": 75383,\n\t\"./llm/google.svg\": 93926,\n\t\"./llm/gpustack.svg\": 41538,\n\t\"./llm/groq-next.svg\": 43719,\n\t\"./llm/huggingface.svg\": 20566,\n\t\"./llm/hunyuan.svg\": 10266,\n\t\"./llm/jina.svg\": 19765,\n\t\"./llm/lepton-ai.svg\": 68341,\n\t\"./llm/lm-studio.svg\": 77894,\n\t\"./llm/local-ai.svg\": 97354,\n\t\"./llm/mistral.svg\": 58247,\n\t\"./llm/modelscope.svg\": 21248,\n\t\"./llm/moonshot.svg\": 98184,\n\t\"./llm/nomic-ai.svg\": 14860,\n\t\"./llm/novita-ai.svg\": 72584,\n\t\"./llm/nvidia.svg\": 33325,\n\t\"./llm/ollama.svg\": 59488,\n\t\"./llm/open-router.svg\": 23258,\n\t\"./llm/openai-api.svg\": 63715,\n\t\"./llm/openai.svg\": 81459,\n\t\"./llm/perfx-cloud.svg\": 39886,\n\t\"./llm/ppio.svg\": 89957,\n\t\"./llm/replicate.svg\": 13492,\n\t\"./llm/sentence-transformers.svg\": 85448,\n\t\"./llm/siliconflow.svg\": 65762,\n\t\"./llm/spark.svg\": 4216,\n\t\"./llm/stepfun.svg\": 53618,\n\t\"./llm/tencent-cloud.svg\": 96734,\n\t\"./llm/together-ai.svg\": 65167,\n\t\"./llm/tongyi.svg\": 74296,\n\t\"./llm/upstage.svg\": 30464,\n\t\"./llm/vllm.svg\": 91333,\n\t\"./llm/volc_engine.svg\": 25210,\n\t\"./llm/voyage.svg\": 6385,\n\t\"./llm/wenxin.svg\": 34981,\n\t\"./llm/xinference.svg\": 76577,\n\t\"./llm/yi.svg\": 20447,\n\t\"./llm/yiyan.svg\": 55103,\n\t\"./llm/youdao.svg\": 81010,\n\t\"./llm/zhipu.svg\": 19568,\n\t\"./login-avatars.svg\": 68683,\n\t\"./login-background.svg\": 89624,\n\t\"./login-star.svg\": 31130,\n\t\"./logo-with-text-white.svg\": 49313,\n\t\"./logout.svg\": 67487,\n\t\"./minio.svg\": 32382,\n\t\"./model-providers.svg\": 70410,\n\t\"./moon.svg\": 22350,\n\t\"./more-model.svg\": 88458,\n\t\"./more.svg\": 1333,\n\t\"./move.svg\": 90076,\n\t\"./mysql.svg\": 37124,\n\t\"./navigation-pointer.svg\": 1979,\n\t\"./next-login-bg.svg\": 33391,\n\t\"./note.svg\": 28687,\n\t\"./nothing.svg\": 47138,\n\t\"./paper-clip.svg\": 2306,\n\t\"./password.svg\": 33530,\n\t\"./plus-circle-fill.svg\": 3804,\n\t\"./plus.svg\": 75350,\n\t\"./profile.svg\": 1769,\n\t\"./prompt.svg\": 49261,\n\t\"./pubmed.svg\": 78566,\n\t\"./qweather.svg\": 56077,\n\t\"./redis.svg\": 43867,\n\t\"./refresh.svg\": 96198,\n\t\"./resize.svg\": 80415,\n\t\"./run.svg\": 91449,\n\t\"./select-files-end.svg\": 14387,\n\t\"./select-files-start.svg\": 16734,\n\t\"./selected-files-collapse.svg\": 40975,\n\t\"./sso.svg\": 51653,\n\t\"./storage.svg\": 99021,\n\t\"./switch.svg\": 1311,\n\t\"./team.svg\": 52381,\n\t\"./template.svg\": 63993,\n\t\"./translation.svg\": 40724,\n\t\"./tushare.svg\": 16521,\n\t\"./wencai.svg\": 72835,\n\t\"./wikipedia.svg\": 18684,\n\t\"./yahoo-finance.svg\": 7957\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 78131;"],"names":["requireContext","routeList","require","keys","map","key","name","replace","value","error","console","warn","SvgIcon","_ref","width","height","imgClass","restProps","_objectWithoutProperties","_excluded","ListItem","find","item","_jsx","Icon","_objectSpread","component","src","alt","className","cn","LlmIcon","_ref2","_ref2$height","_ref2$width","_ref2$size","size","icon","IconMap","concat","Avatar","shape","UserOutlined","_excluded2","_excluded3","_excluded4","Form","FormProvider","FormItemContext","React","FormFieldContext","FormField","props","Object","assign","_objectDestructuringEmpty","Provider","children","Controller","useFormField","fieldContext","itemContext","_useFormContext","useFormContext","getFieldState","formState","fieldState","Error","id","formItemId","formDescriptionId","formMessageId","InnerFormItem","ref","displayName","FormItem","FormLabel","_ref3","tooltip","_useFormField","_jsxs","Label","htmlFor","FormTooltip","FormControl","_ref4","_useFormField2","Slot","FormDescription","_ref5","FormMessage","_ref6","_useFormField4","body","String","message","labelVariants","cva","LabelPrimitive","KnowledgeRouteKey","RunningStatus","ModelVariableType","settledModelVariableMap","_defineProperty","Improvise","temperature","top_p","frequency_penalty","presence_penalty","max_tokens","Precise","Balance","LlmModelType","KnowledgeSearchParams","DocumentType","DocumentParserType","useKnowledgeBaseId","_useSearchParams","useSearchParams","_slicedToArray","get","useFetchKnowledgeBaseConfiguration","_queryFn","knowledgeBaseId","_useQuery","useQuery","queryKey","initialData","gcTime","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_yield$kbService$get_","data","wrap","_context","prev","next","kbService","get_kb_detail","kb_id","sent","abrupt","stop","apply","arguments","loading","isFetching","useFetchKnowledgeList","_queryFn2","shouldFilterListWithoutDocument","length","undefined","_useQuery2","_callee2","_data$data$kbs","_data$data2","_yield$listDataset","list","_context2","listDataset","kbs","filter","x","chunk_num","useSelectKnowledgeOptions","label","useInfiniteFetchKnowledgeList","_queryFn3","_useHandleSearchChang","useHandleSearchChange","searchString","handleInputChange","debouncedSearchString","useDebounce","wait","_useInfiniteQuery","useInfiniteQuery","_callee3","_data$data3","pageParam","_yield$listDataset2","_context3","page","page_size","keywords","_x","initialPageParam","getNextPageParam","lastPage","pages","lastPageParam","total","fetchNextPage","hasNextPage","isFetchingNextPage","status","useCreateKnowledge","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","_callee4","params","_yield$kbService$crea","_yield$kbService$crea2","_context4","createKb","code","success","i18n","t","invalidateQueries","_x2","isPending","createKnowledge","mutateAsync","useDeleteKnowledge","_mutationFn2","_useMutation2","_callee5","_data$data4","_yield$kbService$rmKb","_context5","rmKb","_x3","deleteKnowledge","useUpdateKnowledge","_mutationFn3","shouldFetchList","_useMutation3","_callee6","_yield$kbService$upda","_yield$kbService$upda2","_context6","updateKb","_x4","saveKnowledgeConfiguration","useTestChunkRetrieval","_mutationFn4","_useSetPaginationPara","useSetPaginationParams","pageSize","_useMutation4","_callee7","values","_values$kb_id","_data$data5","_yield$kbService$retr","res","_context7","retrieval_test","documents","doc_aggs","chunks","_x5","testChunk","useTestChunkAllRetrieval","_mutationFn5","_useSetPaginationPara2","_useMutation5","_callee8","_values$kb_id2","_data$data6","_yield$kbService$retr2","_context8","doc_ids","_x6","testChunkAll","useChunkIsTesting","useIsMutating","useSelectTestingResult","_data$at","useMutationState","filters","select","mutation","state","at","useSelectIsTestingSuccess","useAllTestingSuccess","useAllTestingResult","_data$at2","useFetchTagList","_queryFn4","_useQuery3","_callee9","_yield$listTag","_context9","listTag","useDeleteTag","_mutationFn6","_useMutation6","_callee10","tags","_data$data7","_yield$removeTag","_context10","removeTag","_x7","deleteTag","useRenameTag","_mutationFn7","_useMutation7","_callee11","_data$data8","_yield$renameTag","_context11","renameTag","_x8","useTagIsRenaming","useFetchTagListByKnowledgeIds","_queryFn5","_useState","useState","_useState2","knowledgeIds","setKnowledgeIds","_useQuery4","enabled","_callee12","_yield$kbService$list","_context12","listTagByKnowledgeIds","kb_ids","join","useFetchKnowledgeGraph","_queryFn6","_useQuery5","graph","mind_map","_callee13","_yield$getKnowledgeGr","_context13","getKnowledgeGraph","useRemoveKnowledgeGraph","_mutationFn8","_useMutation8","_callee14","_yield$deleteKnowledg","_context14","deleteKnowledgeGraph","removeKnowledgeGraph","useFetchLlmList","modelType","_yield$userService$ll","userService","llm_list","model_type","buildLlmOptionsWithIcon","Flex","align","gap","getLLMIconName","fid","llm_name","getRealModelName","disabled","available","is_tools","useSelectLlmOptionsByModelType","llmInfo","groupImage2TextOptions","useCallback","Image2text","modelTag","toUpperCase","entries","options","includes","groupOptionsByModelType","some","_ref7","_ref8","Chat","Embedding","Speech2text","Rerank","TTS","useComposeLlmOptionsByModelTypes","modelTypes","allOptions","reduce","pre","cur","forEach","_item$options","y","push","_toConsumableArray","useSelectLlmList","_useFetchMyLlmList","_yield$userService$my","my_llm","myLlmList","myLlmListLoading","_useFetchLlmFactoryLi","_yield$userService$fa","factories_list","factoryList","factoryListLoading","useMemo","_ref10","_factoryList$find$log","_factoryList$find","_ref11","logo","llm","currentList","every","sortLLmFactoryListBySpecifiedOrder","useSaveApiKey","useTranslation","_yield$userService$se","set_api_key","saveApiKey","useSaveTenantInfo","_yield$userService$se2","set_tenant_info","saveTenantInfo","useAddLlm","_yield$userService$ad","add_llm","addLlm","useDeleteLlm","_yield$userService$de","delete_llm","deleteLlm","useDeleteFactory","_yield$userService$de2","deleteFactory","useSetSelectedRecord","currentRecord","setCurrentRecord","setRecord","record","_useState3","_useState4","setSearchString","e","target","useChangeLanguage","saveSetting","useSaveSetting","lng","changeLanguage","LanguageTranslationMap","language","useGetPaginationWithRouter","useTranslate","setPaginationParams","onPageChange","pageNumber","setCurrentPagination","pagination","showQuickJumper","showSizeChanger","current","pageSizeOptions","onChange","showTotal","setPagination","useFetchAppConf","_useState7","_useState8","appConf","setAppConf","fetchAppConf","ret","axios","useEffect","useSendMessageWithSse","url","api","completeConversation","_useState9","_useState10","answer","setAnswer","_useState11","_useState12","done","setDone","timer","useRef","sseRef","initializeSseRef","AbortController","resetAnswer","clearTimeout","setTimeout","send","controller","_sseRef$current","_response$body","response","reader","_done","val","d","fetch","method","headers","Authorization","getAuthorization","JSON","stringify","signal","clone","json","pipeThrough","TextDecoderStream","EventSourceParserStream","getReader","read","info","parse","conversationId","conversation_id","t0","t1","t2","stopOutputMessage","_sseRef$current2","abort","useSpeechWithSse","tts","useHandleMessageInputChange","_useState13","_useState14","setValue","nextValue","replaceAll","useSelectDerivedMessages","_useState15","_useState16","derivedMessages","setDerivedMessages","messages","scrollToBottom","_ref$current","scrollIntoView","behavior","useScrollToBottom","addNewestQuestion","buildMessageUuid","role","MessageType","Assistant","content","addNewestOneQuestion","addNewestAnswer","_pre$slice","slice","reference","prompt","audio_binary","omit","addNewestOneAnswer","findIndex","removeLatestMessage","_pre$slice2","removeMessageById","messageId","_pre$filter","removeMessagesAfterCurrentMessage","index","_pre$slice3","nextMessages","latestMessage","useRegenerateMessage","sendMessage","regenerateMessage","uuid","useSelectItem","defaultId","_useState17","_useState18","selectedId","setSelectedId","handleItemClick","useFetchModelId","_tenantInfo$llm_id","tenantInfo","useFetchTenantInfo","llm_id","ChunkTokenNumMap","naive","knowledge_graph","useHandleChunkMethodSelectChange","form","setFieldValue","useResetFormOnCloseModal","visible","prevOpenRef","prevOpen","resetFields","SegmentIndex","useSegmentedPathName","useLocation","pathname","split","useSecondPathName","Second","useThirdPathName","Third","useGetKnowledgeSearchParams","currentQueryParameters","documentId","DocumentId","knowledgeId","KnowledgeId","useNavigateWithFromState","navigate","useNavigate","path","from","useNavigateToDataset","Dataset","_useSearchParams5","_useSearchParams6","queryParameters","setSearchParams","set","toString","Number","create_kb","update_kb","rm_kb","kb_list","get_document_list","document_change_status","document_rm","document_delete","document_create","document_change_parser","document_thumbnails","chunk_list","create_chunk","set_chunk","get_chunk","switch_chunk","rm_chunk","document_rename","document_run","document_upload","web_crawl","document_infos","upload_and_parse","methods","getList","setMeta","registerServer","request","post","fromTag","toTag","listDocument","isConversationIdExist","EmptyConversationId","buildMessageListWithUuid","_messages$map","getConversationId","buildMessageUuidWithRole","preprocessLaTeX","_","equation","replaceThinkToSection","setInitialChatVariableEnabledFieldValue","field","ShowImageFields","showImage","filed","setChatVariableEnabledFieldValuePage","ChatVariableEnabledField","MaxTokensEnabled","_llm_name$split$at","getLlmNameAndFIdByLlmId","llmId","llmName","fId","_llmName$split$at","webpackContext","req","webpackContextResolve","__webpack_require__","o","resolve","module","exports"],"sourceRoot":""}