{"version":3,"file":"4599.03ea14b1.async.js","mappings":"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","sources":["webpack:///./src/components/api-service/embed-modal/index.less?e4ca","webpack:///./src/components/api-service/embed-modal/index.tsx","webpack:///./src/components/api-service/hooks.ts","webpack:///./src/components/llm-setting-items/index.less?f964","webpack:///./src/components/llm-setting-items/index.tsx","webpack:///./src/components/message-item/feedback-modal.tsx","webpack:///./src/components/message-item/prompt-modal.tsx","webpack:///./src/components/message-item/group-button.tsx","webpack:///./src/components/message-item/hooks.ts","webpack:///./src/components/message-item/index.less?7287","webpack:///./src/components/message-item/index.tsx","webpack:///./src/components/similarity-slider/index.tsx","webpack:///./src/components/slider-input-form-field.tsx","webpack:///./src/components/switch-fom-field.tsx","webpack:///./src/components/tavily-item.tsx","webpack:///./src/components/ui/avatar.tsx","webpack:///./src/components/ui/dialog.tsx","webpack:///./src/components/ui/dual-range-slider.tsx","webpack:///./src/components/use-knowledge-graph-item.tsx","webpack:///./src/hooks/llm-hooks.tsx","webpack:///./src/utils/llm-util.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"codeCard\":\"codeCard___TMIpT\",\"codeText\":\"codeText___pRkMI\",\"id\":\"id___EtPCm\",\"darkBg\":\"darkBg___aK5gz\",\"darkId\":\"darkId___ASEvo\"};","import CopyToClipboard from '@/components/copy-to-clipboard';\nimport HightLightMarkdown from '@/components/highlight-markdown';\nimport { SharedFrom } from '@/constants/chat';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport {\n  Card,\n  Checkbox,\n  Form,\n  Modal,\n  Select,\n  Tabs,\n  TabsProps,\n  Typography,\n} from 'antd';\nimport { useMemo, useState } from 'react';\n\nimport { useIsDarkTheme } from '@/components/theme-provider';\nimport {\n  LanguageAbbreviation,\n  LanguageAbbreviationMap,\n} from '@/constants/common';\nimport { cn } from '@/lib/utils';\nimport styles from './index.less';\n\nconst { Paragraph, Link } = Typography;\n\nconst EmbedModal = ({\n  visible,\n  hideModal,\n  token = '',\n  form,\n  beta = '',\n  isAgent,\n}: IModalProps<any> & {\n  token: string;\n  form: SharedFrom;\n  beta: string;\n  isAgent: boolean;\n}) => {\n  const { t } = useTranslate('chat');\n  const isDarkTheme = useIsDarkTheme();\n\n  const [visibleAvatar, setVisibleAvatar] = useState(false);\n  const [locale, setLocale] = useState('');\n\n  const languageOptions = useMemo(() => {\n    return Object.values(LanguageAbbreviation).map((x) => ({\n      label: LanguageAbbreviationMap[x],\n      value: x,\n    }));\n  }, []);\n\n  const generateIframeSrc = () => {\n    let src = `${location.origin}/chat/share?shared_id=${token}&from=${form}&auth=${beta}`;\n    if (visibleAvatar) {\n      src += '&visible_avatar=1';\n    }\n    if (locale) {\n      src += `&locale=${locale}`;\n    }\n    return src;\n  };\n\n  const iframeSrc = generateIframeSrc();\n\n  const text = `\n  ~~~ html\n  <iframe\n  src=\"${iframeSrc}\"\n  style=\"width: 100%; height: 100%; min-height: 600px\"\n  frameborder=\"0\"\n>\n</iframe>\n~~~\n  `;\n\n  const items: TabsProps['items'] = [\n    {\n      key: '1',\n      label: t('fullScreenTitle'),\n      children: (\n        <Card\n          title={t('fullScreenDescription')}\n          extra={<CopyToClipboard text={text}></CopyToClipboard>}\n          className={styles.codeCard}\n        >\n          <div className=\"p-2\">\n            <h2 className=\"mb-3\">Option:</h2>\n\n            <Form.Item\n              label={t('avatarHidden')}\n              labelCol={{ span: 6 }}\n              wrapperCol={{ span: 18 }}\n            >\n              <Checkbox\n                checked={visibleAvatar}\n                onChange={(e) => setVisibleAvatar(e.target.checked)}\n              ></Checkbox>\n            </Form.Item>\n            <Form.Item\n              label={t('locale')}\n              labelCol={{ span: 6 }}\n              wrapperCol={{ span: 18 }}\n            >\n              <Select\n                placeholder=\"Select a locale\"\n                onChange={(value) => setLocale(value)}\n                options={languageOptions}\n                style={{ width: '100%' }}\n              />\n            </Form.Item>\n          </div>\n          <HightLightMarkdown>{text}</HightLightMarkdown>\n        </Card>\n      ),\n    },\n    {\n      key: '2',\n      label: t('partialTitle'),\n      children: t('comingSoon'),\n    },\n    {\n      key: '3',\n      label: t('extensionTitle'),\n      children: t('comingSoon'),\n    },\n  ];\n\n  const onChange = (key: string) => {\n    console.log(key);\n  };\n\n  return (\n    <Modal\n      title={t('embedIntoSite', { keyPrefix: 'common' })}\n      open={visible}\n      style={{ top: 300 }}\n      width={'50vw'}\n      onOk={hideModal}\n      onCancel={hideModal}\n    >\n      <Tabs defaultActiveKey=\"1\" items={items} onChange={onChange} />\n      <div className=\"text-base font-medium mt-4 mb-1\">\n        {t(isAgent ? 'flow' : 'chat', { keyPrefix: 'header' })}\n        <span className=\"ml-1 inline-block\">ID</span>\n      </div>\n      <Paragraph\n        copyable={{ text: token }}\n        className={cn(styles.id, {\n          [styles.darkId]: isDarkTheme,\n        })}\n      >\n        {token}\n      </Paragraph>\n      <Link\n        href={\n          isAgent\n            ? 'https://ragflow.io/docs/dev/http_api_reference#create-session-with-agent'\n            : 'https://ragflow.io/docs/dev/http_api_reference#create-session-with-chat-assistant'\n        }\n        target=\"_blank\"\n      >\n        {t('howUseId', { keyPrefix: isAgent ? 'flow' : 'chat' })}\n      </Link>\n    </Modal>\n  );\n};\n\nexport default EmbedModal;\n","import { SharedFrom } from '@/constants/chat';\nimport {\n  useSetModalState,\n  useShowDeleteConfirm,\n  useTranslate,\n} from '@/hooks/common-hooks';\nimport {\n  useCreateSystemToken,\n  useFetchManualSystemTokenList,\n  useFetchSystemTokenList,\n  useRemoveSystemToken,\n} from '@/hooks/user-setting-hooks';\nimport { IStats } from '@/interfaces/database/chat';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { message } from 'antd';\nimport { useCallback } from 'react';\n\nexport const useOperateApiKey = (idKey: string, dialogId?: string) => {\n  const { removeToken } = useRemoveSystemToken();\n  const { createToken, loading: creatingLoading } = useCreateSystemToken();\n  const { data: tokenList, loading: listLoading } = useFetchSystemTokenList();\n\n  const showDeleteConfirm = useShowDeleteConfirm();\n\n  const onRemoveToken = (token: string) => {\n    showDeleteConfirm({\n      onOk: () => removeToken(token),\n    });\n  };\n\n  const onCreateToken = useCallback(() => {\n    createToken({ [idKey]: dialogId });\n  }, [createToken, idKey, dialogId]);\n\n  return {\n    removeToken: onRemoveToken,\n    createToken: onCreateToken,\n    tokenList,\n    creatingLoading,\n    listLoading,\n  };\n};\n\ntype ChartStatsType = {\n  [k in keyof IStats]: Array<{ xAxis: string; yAxis: number }>;\n};\n\nexport const useSelectChartStatsList = (): ChartStatsType => {\n  const queryClient = useQueryClient();\n  const data = queryClient.getQueriesData({ queryKey: ['fetchStats'] });\n  const stats: IStats = (data.length > 0 ? data[0][1] : {}) as IStats;\n\n  return Object.keys(stats).reduce((pre, cur) => {\n    const item = stats[cur as keyof IStats];\n    if (item.length > 0) {\n      pre[cur as keyof IStats] = item.map((x) => ({\n        xAxis: x[0] as string,\n        yAxis: x[1] as number,\n      }));\n    }\n    return pre;\n  }, {} as ChartStatsType);\n};\n\nexport const useShowTokenEmptyError = () => {\n  const { t } = useTranslate('chat');\n\n  const showTokenEmptyError = useCallback(() => {\n    message.error(t('tokenError'));\n  }, [t]);\n  return { showTokenEmptyError };\n};\n\nexport const useShowBetaEmptyError = () => {\n  const { t } = useTranslate('chat');\n\n  const showBetaEmptyError = useCallback(() => {\n    message.error(t('betaError'));\n  }, [t]);\n  return { showBetaEmptyError };\n};\n\nconst getUrlWithToken = (token: string, from: string = 'chat') => {\n  const { protocol, host } = window.location;\n  return `${protocol}//${host}/chat/share?shared_id=${token}&from=${from}`;\n};\n\nconst useFetchTokenListBeforeOtherStep = () => {\n  const { showTokenEmptyError } = useShowTokenEmptyError();\n  const { showBetaEmptyError } = useShowBetaEmptyError();\n\n  const { data: tokenList, fetchSystemTokenList } =\n    useFetchManualSystemTokenList();\n\n  let token = '',\n    beta = '';\n\n  if (Array.isArray(tokenList) && tokenList.length > 0) {\n    token = tokenList[0].token;\n    beta = tokenList[0].beta;\n  }\n\n  token =\n    Array.isArray(tokenList) && tokenList.length > 0 ? tokenList[0].token : '';\n\n  const handleOperate = useCallback(async () => {\n    const ret = await fetchSystemTokenList();\n    const list = ret;\n    if (Array.isArray(list) && list.length > 0) {\n      if (!list[0].beta) {\n        showBetaEmptyError();\n        return false;\n      }\n      return list[0]?.token;\n    } else {\n      showTokenEmptyError();\n      return false;\n    }\n  }, [fetchSystemTokenList, showBetaEmptyError, showTokenEmptyError]);\n\n  return {\n    token,\n    beta,\n    handleOperate,\n  };\n};\n\nexport const useShowEmbedModal = () => {\n  const {\n    visible: embedVisible,\n    hideModal: hideEmbedModal,\n    showModal: showEmbedModal,\n  } = useSetModalState();\n\n  const { handleOperate, token, beta } = useFetchTokenListBeforeOtherStep();\n\n  const handleShowEmbedModal = useCallback(async () => {\n    const succeed = await handleOperate();\n    if (succeed) {\n      showEmbedModal();\n    }\n  }, [handleOperate, showEmbedModal]);\n\n  return {\n    showEmbedModal: handleShowEmbedModal,\n    hideEmbedModal,\n    embedVisible,\n    embedToken: token,\n    beta,\n  };\n};\n\nexport const usePreviewChat = (idKey: string) => {\n  const { handleOperate } = useFetchTokenListBeforeOtherStep();\n\n  const open = useCallback(\n    (t: string) => {\n      window.open(\n        getUrlWithToken(\n          t,\n          idKey === 'canvasId' ? SharedFrom.Agent : SharedFrom.Chat,\n        ),\n        '_blank',\n      );\n    },\n    [idKey],\n  );\n\n  const handlePreview = useCallback(async () => {\n    const token = await handleOperate();\n    if (token) {\n      open(token);\n    }\n  }, [handleOperate, open]);\n\n  return {\n    handlePreview,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sliderInputNumber\":\"sliderInputNumber___ZMqQO\",\"variableSlider\":\"variableSlider___MglII\"};","import {\n  LlmModelType,\n  ModelVariableType,\n  settledModelVariableMap,\n} from '@/constants/knowledge';\nimport { Flex, Form, InputNumber, Select, Slider, Switch, Tooltip } from 'antd';\nimport camelCase from 'lodash/camelCase';\n\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useComposeLlmOptionsByModelTypes } from '@/hooks/llm-hooks';\nimport { setChatVariableEnabledFieldValuePage } from '@/utils/chat';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { useCallback, useMemo } from 'react';\nimport styles from './index.less';\n\ninterface IProps {\n  prefix?: string;\n  formItemLayout?: any;\n  handleParametersChange?(value: ModelVariableType): void;\n  onChange?(value: string, option: any): void;\n}\n\nconst LlmSettingItems = ({ prefix, formItemLayout = {}, onChange }: IProps) => {\n  const form = Form.useFormInstance();\n  const { t } = useTranslate('chat');\n  const parameterOptions = Object.values(ModelVariableType).map((x) => ({\n    label: t(camelCase(x)),\n    value: x,\n  }));\n\n  const handleParametersChange = useCallback(\n    (value: ModelVariableType) => {\n      const variable = settledModelVariableMap[value];\n      let nextVariable: Record<string, any> = variable;\n      if (prefix) {\n        nextVariable = { [prefix]: variable };\n      }\n      const variableCheckBoxFieldMap = setChatVariableEnabledFieldValuePage();\n      form.setFieldsValue({ ...nextVariable, ...variableCheckBoxFieldMap });\n    },\n    [form, prefix],\n  );\n\n  const memorizedPrefix = useMemo(() => (prefix ? [prefix] : []), [prefix]);\n\n  const modelOptions = useComposeLlmOptionsByModelTypes([\n    LlmModelType.Chat,\n    LlmModelType.Image2text,\n  ]);\n\n  return (\n    <>\n      <Form.Item\n        label={t('model')}\n        name=\"llm_id\"\n        tooltip={t('modelTip')}\n        {...formItemLayout}\n        rules={[{ required: true, message: t('modelMessage') }]}\n      >\n        <Select\n          options={modelOptions}\n          showSearch\n          popupMatchSelectWidth={false}\n          onChange={onChange}\n        />\n      </Form.Item>\n      <div className=\"border rounded-md\">\n        <div className=\"flex justify-between bg-slate-100 p-2 mb-2\">\n          <div className=\"space-x-1 items-center\">\n            <span className=\"text-lg font-semibold\">{t('freedom')}</span>\n            <Tooltip title={t('freedomTip')}>\n              <QuestionCircleOutlined></QuestionCircleOutlined>\n            </Tooltip>\n          </div>\n          <div className=\"w-1/4 min-w-32\">\n            <Form.Item\n              label={t('freedom')}\n              name=\"parameter\"\n              tooltip={t('freedomTip')}\n              initialValue={ModelVariableType.Precise}\n              labelCol={{ span: 0 }}\n              wrapperCol={{ span: 24 }}\n              className=\"m-0\"\n            >\n              <Select<ModelVariableType>\n                options={parameterOptions}\n                onChange={handleParametersChange}\n              />\n            </Form.Item>\n          </div>\n        </div>\n\n        <div className=\"pr-2\">\n          <Form.Item\n            label={t('temperature')}\n            tooltip={t('temperatureTip')}\n            {...formItemLayout}\n          >\n            <Flex gap={20} align=\"center\">\n              <Form.Item\n                name={'temperatureEnabled'}\n                valuePropName=\"checked\"\n                noStyle\n              >\n                <Switch size=\"small\" />\n              </Form.Item>\n              <Form.Item\n                noStyle\n                dependencies={['temperatureEnabled']}\n                shouldUpdate\n              >\n                {({ getFieldValue }) => {\n                  const disabled = !getFieldValue('temperatureEnabled');\n                  return (\n                    <>\n                      <Flex flex={1}>\n                        <Form.Item\n                          name={[...memorizedPrefix, 'temperature']}\n                          noStyle\n                        >\n                          <Slider\n                            className={styles.variableSlider}\n                            max={1}\n                            step={0.01}\n                            disabled={disabled}\n                          />\n                        </Form.Item>\n                      </Flex>\n                      <Form.Item\n                        name={[...memorizedPrefix, 'temperature']}\n                        noStyle\n                      >\n                        <InputNumber\n                          className={styles.sliderInputNumber}\n                          max={1}\n                          min={0}\n                          step={0.01}\n                          disabled={disabled}\n                        />\n                      </Form.Item>\n                    </>\n                  );\n                }}\n              </Form.Item>\n            </Flex>\n          </Form.Item>\n          <Form.Item\n            label={t('topP')}\n            tooltip={t('topPTip')}\n            {...formItemLayout}\n          >\n            <Flex gap={20} align=\"center\">\n              <Form.Item name={'topPEnabled'} valuePropName=\"checked\" noStyle>\n                <Switch size=\"small\" />\n              </Form.Item>\n              <Form.Item noStyle dependencies={['topPEnabled']} shouldUpdate>\n                {({ getFieldValue }) => {\n                  const disabled = !getFieldValue('topPEnabled');\n                  return (\n                    <>\n                      <Flex flex={1}>\n                        <Form.Item name={[...memorizedPrefix, 'top_p']} noStyle>\n                          <Slider\n                            className={styles.variableSlider}\n                            max={1}\n                            step={0.01}\n                            disabled={disabled}\n                          />\n                        </Form.Item>\n                      </Flex>\n                      <Form.Item name={[...memorizedPrefix, 'top_p']} noStyle>\n                        <InputNumber\n                          className={styles.sliderInputNumber}\n                          max={1}\n                          min={0}\n                          step={0.01}\n                          disabled={disabled}\n                        />\n                      </Form.Item>\n                    </>\n                  );\n                }}\n              </Form.Item>\n            </Flex>\n          </Form.Item>\n          <Form.Item\n            label={t('presencePenalty')}\n            tooltip={t('presencePenaltyTip')}\n            {...formItemLayout}\n          >\n            <Flex gap={20} align=\"center\">\n              <Form.Item\n                name={'presencePenaltyEnabled'}\n                valuePropName=\"checked\"\n                noStyle\n              >\n                <Switch size=\"small\" />\n              </Form.Item>\n              <Form.Item\n                noStyle\n                dependencies={['presencePenaltyEnabled']}\n                shouldUpdate\n              >\n                {({ getFieldValue }) => {\n                  const disabled = !getFieldValue('presencePenaltyEnabled');\n                  return (\n                    <>\n                      <Flex flex={1}>\n                        <Form.Item\n                          name={[...memorizedPrefix, 'presence_penalty']}\n                          noStyle\n                        >\n                          <Slider\n                            className={styles.variableSlider}\n                            max={1}\n                            step={0.01}\n                            disabled={disabled}\n                          />\n                        </Form.Item>\n                      </Flex>\n                      <Form.Item\n                        name={[...memorizedPrefix, 'presence_penalty']}\n                        noStyle\n                      >\n                        <InputNumber\n                          className={styles.sliderInputNumber}\n                          max={1}\n                          min={0}\n                          step={0.01}\n                          disabled={disabled}\n                        />\n                      </Form.Item>\n                    </>\n                  );\n                }}\n              </Form.Item>\n            </Flex>\n          </Form.Item>\n          <Form.Item\n            label={t('frequencyPenalty')}\n            tooltip={t('frequencyPenaltyTip')}\n            {...formItemLayout}\n          >\n            <Flex gap={20} align=\"center\">\n              <Form.Item\n                name={'frequencyPenaltyEnabled'}\n                valuePropName=\"checked\"\n                noStyle\n              >\n                <Switch size=\"small\" />\n              </Form.Item>\n              <Form.Item\n                noStyle\n                dependencies={['frequencyPenaltyEnabled']}\n                shouldUpdate\n              >\n                {({ getFieldValue }) => {\n                  const disabled = !getFieldValue('frequencyPenaltyEnabled');\n                  return (\n                    <>\n                      <Flex flex={1}>\n                        <Form.Item\n                          name={[...memorizedPrefix, 'frequency_penalty']}\n                          noStyle\n                        >\n                          <Slider\n                            className={styles.variableSlider}\n                            max={1}\n                            step={0.01}\n                            disabled={disabled}\n                          />\n                        </Form.Item>\n                      </Flex>\n                      <Form.Item\n                        name={[...memorizedPrefix, 'frequency_penalty']}\n                        noStyle\n                      >\n                        <InputNumber\n                          className={styles.sliderInputNumber}\n                          max={1}\n                          min={0}\n                          step={0.01}\n                          disabled={disabled}\n                        />\n                      </Form.Item>\n                    </>\n                  );\n                }}\n              </Form.Item>\n            </Flex>\n          </Form.Item>\n          <Form.Item\n            label={t('maxTokens')}\n            tooltip={t('maxTokensTip')}\n            {...formItemLayout}\n          >\n            <Flex gap={20} align=\"center\">\n              <Form.Item\n                name={'maxTokensEnabled'}\n                valuePropName=\"checked\"\n                noStyle\n              >\n                <Switch size=\"small\" />\n              </Form.Item>\n              <Form.Item\n                noStyle\n                dependencies={['maxTokensEnabled']}\n                shouldUpdate\n              >\n                {({ getFieldValue }) => {\n                  const disabled = !getFieldValue('maxTokensEnabled');\n\n                  return (\n                    <>\n                      <Flex flex={1}>\n                        <Form.Item\n                          name={[...memorizedPrefix, 'max_tokens']}\n                          noStyle\n                        >\n                          <Slider\n                            className={styles.variableSlider}\n                            max={128000}\n                            disabled={disabled}\n                          />\n                        </Form.Item>\n                      </Flex>\n                      <Form.Item\n                        name={[...memorizedPrefix, 'max_tokens']}\n                        noStyle\n                      >\n                        <InputNumber\n                          disabled={disabled}\n                          className={styles.sliderInputNumber}\n                          max={128000}\n                          min={0}\n                        />\n                      </Form.Item>\n                    </>\n                  );\n                }}\n              </Form.Item>\n            </Flex>\n          </Form.Item>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LlmSettingItems;\n","import { Form, Input, Modal } from 'antd';\n\nimport { IModalProps } from '@/interfaces/common';\nimport { IFeedbackRequestBody } from '@/interfaces/request/chat';\nimport { useCallback } from 'react';\n\ntype FieldType = {\n  feedback?: string;\n};\n\nconst FeedbackModal = ({\n  visible,\n  hideModal,\n  onOk,\n  loading,\n}: IModalProps<IFeedbackRequestBody>) => {\n  const [form] = Form.useForm();\n\n  const handleOk = useCallback(async () => {\n    const ret = await form.validateFields();\n    return onOk?.({ thumbup: false, feedback: ret.feedback });\n  }, [onOk, form]);\n\n  return (\n    <Modal\n      title=\"Feedback\"\n      open={visible}\n      onOk={handleOk}\n      onCancel={hideModal}\n      confirmLoading={loading}\n    >\n      <Form\n        name=\"basic\"\n        labelCol={{ span: 0 }}\n        wrapperCol={{ span: 24 }}\n        style={{ maxWidth: 600 }}\n        autoComplete=\"off\"\n        form={form}\n      >\n        <Form.Item<FieldType>\n          name=\"feedback\"\n          rules={[{ required: true, message: 'Please input your feedback!' }]}\n        >\n          <Input.TextArea rows={8} placeholder=\"Please input your feedback!\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default FeedbackModal;\n","import { IModalProps } from '@/interfaces/common';\nimport { IFeedbackRequestBody } from '@/interfaces/request/chat';\nimport { Modal, Space } from 'antd';\nimport HightLightMarkdown from '../highlight-markdown';\nimport SvgIcon from '../svg-icon';\n\nconst PromptModal = ({\n  visible,\n  hideModal,\n  prompt,\n}: IModalProps<IFeedbackRequestBody> & { prompt?: string }) => {\n  return (\n    <Modal\n      title={\n        <Space>\n          <SvgIcon name={`prompt`} width={18}></SvgIcon>\n          Prompt\n        </Space>\n      }\n      width={'80%'}\n      open={visible}\n      onCancel={hideModal}\n      footer={null}\n    >\n      <HightLightMarkdown>{prompt}</HightLightMarkdown>\n    </Modal>\n  );\n};\n\nexport default PromptModal;\n","import { PromptIcon } from '@/assets/icon/Icon';\nimport CopyToClipboard from '@/components/copy-to-clipboard';\nimport { useSetModalState } from '@/hooks/common-hooks';\nimport { IRemoveMessageById } from '@/hooks/logic-hooks';\nimport {\n  DeleteOutlined,\n  DislikeOutlined,\n  LikeOutlined,\n  PauseCircleOutlined,\n  SoundOutlined,\n  SyncOutlined,\n} from '@ant-design/icons';\nimport { Radio, Tooltip } from 'antd';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport FeedbackModal from './feedback-modal';\nimport { useRemoveMessage, useSendFeedback, useSpeech } from './hooks';\nimport PromptModal from './prompt-modal';\n\ninterface IProps {\n  messageId: string;\n  content: string;\n  prompt?: string;\n  showLikeButton: boolean;\n  audioBinary?: string;\n  showLoudspeaker?: boolean;\n}\n\nexport const AssistantGroupButton = ({\n  messageId,\n  content,\n  prompt,\n  audioBinary,\n  showLikeButton,\n  showLoudspeaker = true,\n}: IProps) => {\n  const { visible, hideModal, showModal, onFeedbackOk, loading } =\n    useSendFeedback(messageId);\n  const {\n    visible: promptVisible,\n    hideModal: hidePromptModal,\n    showModal: showPromptModal,\n  } = useSetModalState();\n  const { t } = useTranslation();\n  const { handleRead, ref, isPlaying } = useSpeech(content, audioBinary);\n\n  const handleLike = useCallback(() => {\n    onFeedbackOk({ thumbup: true });\n  }, [onFeedbackOk]);\n\n  return (\n    <>\n      <Radio.Group size=\"small\">\n        <Radio.Button value=\"a\">\n          <CopyToClipboard text={content}></CopyToClipboard>\n        </Radio.Button>\n        {showLoudspeaker && (\n          <Radio.Button value=\"b\" onClick={handleRead}>\n            <Tooltip title={t('chat.read')}>\n              {isPlaying ? <PauseCircleOutlined /> : <SoundOutlined />}\n            </Tooltip>\n            <audio src=\"\" ref={ref}></audio>\n          </Radio.Button>\n        )}\n        {showLikeButton && (\n          <>\n            <Radio.Button value=\"c\" onClick={handleLike}>\n              <LikeOutlined />\n            </Radio.Button>\n            <Radio.Button value=\"d\" onClick={showModal}>\n              <DislikeOutlined />\n            </Radio.Button>\n          </>\n        )}\n        {prompt && (\n          <Radio.Button value=\"e\" onClick={showPromptModal}>\n            <PromptIcon style={{ fontSize: '16px' }} />\n          </Radio.Button>\n        )}\n      </Radio.Group>\n      {visible && (\n        <FeedbackModal\n          visible={visible}\n          hideModal={hideModal}\n          onOk={onFeedbackOk}\n          loading={loading}\n        ></FeedbackModal>\n      )}\n      {promptVisible && (\n        <PromptModal\n          visible={promptVisible}\n          hideModal={hidePromptModal}\n          prompt={prompt}\n        ></PromptModal>\n      )}\n    </>\n  );\n};\n\ninterface UserGroupButtonProps extends Partial<IRemoveMessageById> {\n  messageId: string;\n  content: string;\n  regenerateMessage?: () => void;\n  sendLoading: boolean;\n}\n\nexport const UserGroupButton = ({\n  content,\n  messageId,\n  sendLoading,\n  removeMessageById,\n  regenerateMessage,\n}: UserGroupButtonProps) => {\n  const { onRemoveMessage, loading } = useRemoveMessage(\n    messageId,\n    removeMessageById,\n  );\n  const { t } = useTranslation();\n\n  return (\n    <Radio.Group size=\"small\">\n      <Radio.Button value=\"a\">\n        <CopyToClipboard text={content}></CopyToClipboard>\n      </Radio.Button>\n      {regenerateMessage && (\n        <Radio.Button\n          value=\"b\"\n          onClick={regenerateMessage}\n          disabled={sendLoading}\n        >\n          <Tooltip title={t('chat.regenerate')}>\n            <SyncOutlined spin={sendLoading} />\n          </Tooltip>\n        </Radio.Button>\n      )}\n      {removeMessageById && (\n        <Radio.Button value=\"c\" onClick={onRemoveMessage} disabled={loading}>\n          <Tooltip title={t('common.delete')}>\n            <DeleteOutlined spin={loading} />\n          </Tooltip>\n        </Radio.Button>\n      )}\n    </Radio.Group>\n  );\n};\n","import { useDeleteMessage, useFeedback } from '@/hooks/chat-hooks';\nimport { useSetModalState } from '@/hooks/common-hooks';\nimport { IRemoveMessageById, useSpeechWithSse } from '@/hooks/logic-hooks';\nimport { IFeedbackRequestBody } from '@/interfaces/request/chat';\nimport { hexStringToUint8Array } from '@/utils/common-util';\nimport { SpeechPlayer } from 'openai-speech-stream-player';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nexport const useSendFeedback = (messageId: string) => {\n  const { visible, hideModal, showModal } = useSetModalState();\n  const { feedback, loading } = useFeedback();\n\n  const onFeedbackOk = useCallback(\n    async (params: IFeedbackRequestBody) => {\n      const ret = await feedback({\n        ...params,\n        messageId: messageId,\n      });\n\n      if (ret === 0) {\n        hideModal();\n      }\n    },\n    [feedback, hideModal, messageId],\n  );\n\n  return {\n    loading,\n    onFeedbackOk,\n    visible,\n    hideModal,\n    showModal,\n  };\n};\n\nexport const useRemoveMessage = (\n  messageId: string,\n  removeMessageById?: IRemoveMessageById['removeMessageById'],\n) => {\n  const { deleteMessage, loading } = useDeleteMessage();\n\n  const onRemoveMessage = useCallback(async () => {\n    if (messageId) {\n      const code = await deleteMessage(messageId);\n      if (code === 0) {\n        removeMessageById?.(messageId);\n      }\n    }\n  }, [deleteMessage, messageId, removeMessageById]);\n\n  return { onRemoveMessage, loading };\n};\n\nexport const useSpeech = (content: string, audioBinary?: string) => {\n  const ref = useRef<HTMLAudioElement>(null);\n  const { read } = useSpeechWithSse();\n  const player = useRef<SpeechPlayer>();\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\n\n  const initialize = useCallback(async () => {\n    player.current = new SpeechPlayer({\n      audio: ref.current!,\n      onPlaying: () => {\n        setIsPlaying(true);\n      },\n      onPause: () => {\n        setIsPlaying(false);\n      },\n      onChunkEnd: () => {},\n      mimeType: MediaSource.isTypeSupported('audio/mpeg')\n        ? 'audio/mpeg'\n        : 'audio/mp4; codecs=\"mp4a.40.2\"', // https://stackoverflow.com/questions/64079424/cannot-replay-mp3-in-firefox-using-mediasource-even-though-it-works-in-chrome\n    });\n    await player.current.init();\n  }, []);\n\n  const pause = useCallback(() => {\n    player.current?.pause();\n  }, []);\n\n  const speech = useCallback(async () => {\n    const response = await read({ text: content });\n    if (response) {\n      player?.current?.feedWithResponse(response);\n    }\n  }, [read, content]);\n\n  const handleRead = useCallback(async () => {\n    if (isPlaying) {\n      setIsPlaying(false);\n      pause();\n    } else {\n      setIsPlaying(true);\n      speech();\n    }\n  }, [setIsPlaying, speech, isPlaying, pause]);\n\n  useEffect(() => {\n    if (audioBinary) {\n      const units = hexStringToUint8Array(audioBinary);\n      if (units) {\n        try {\n          player.current?.feed(units);\n        } catch (error) {\n          console.warn(error);\n        }\n      }\n    }\n  }, [audioBinary]);\n\n  useEffect(() => {\n    initialize();\n  }, [initialize]);\n\n  return { ref, handleRead, isPlaying };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"messageItem\":\"messageItem___OK1Zd\",\"messageItemSection\":\"messageItemSection___a_W_M\",\"messageItemSectionLeft\":\"messageItemSectionLeft___nCfnq\",\"messageItemContent\":\"messageItemContent___j99sG\",\"messageItemContentReverse\":\"messageItemContentReverse___EgYgc\",\"messageText\":\"messageText___vuU2B\",\"messageTextDark\":\"messageTextDark___mYdLd\",\"messageUserText\":\"messageUserText___yCJ20\",\"messageEmpty\":\"messageEmpty___oF9mg\",\"thumbnailImg\":\"thumbnailImg___ObcCZ\",\"messageItemLeft\":\"messageItemLeft___L270A\",\"messageItemRight\":\"messageItemRight___icDzT\"};","import { ReactComponent as AssistantIcon } from '@/assets/svg/assistant.svg';\nimport { MessageType } from '@/constants/chat';\nimport { useSetModalState } from '@/hooks/common-hooks';\nimport { IReference, IReferenceChunk } from '@/interfaces/database/chat';\nimport classNames from 'classnames';\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react';\n\nimport {\n  useFetchDocumentInfosByIds,\n  useFetchDocumentThumbnailsByIds,\n} from '@/hooks/document-hooks';\nimport { IRegenerateMessage, IRemoveMessageById } from '@/hooks/logic-hooks';\nimport { IMessage } from '@/pages/chat/interface';\nimport MarkdownContent from '@/pages/chat/markdown-content';\nimport { getExtension, isImage } from '@/utils/document-util';\nimport { Avatar, Button, Flex, List, Space, Typography } from 'antd';\nimport FileIcon from '../file-icon';\nimport IndentedTreeModal from '../indented-tree/modal';\nimport NewDocumentLink from '../new-document-link';\nimport { useTheme } from '../theme-provider';\nimport { AssistantGroupButton, UserGroupButton } from './group-button';\nimport styles from './index.less';\n\nconst { Text } = Typography;\n\ninterface IProps extends Partial<IRemoveMessageById>, IRegenerateMessage {\n  item: IMessage;\n  reference: IReference;\n  loading?: boolean;\n  sendLoading?: boolean;\n  visibleAvatar?: boolean;\n  nickname?: string;\n  avatar?: string;\n  avatarDialog?: string | null;\n  clickDocumentButton?: (documentId: string, chunk: IReferenceChunk) => void;\n  index: number;\n  showLikeButton?: boolean;\n  showLoudspeaker?: boolean;\n}\n\nconst MessageItem = ({\n  item,\n  reference,\n  loading = false,\n  avatar,\n  avatarDialog,\n  sendLoading = false,\n  clickDocumentButton,\n  index,\n  removeMessageById,\n  regenerateMessage,\n  showLikeButton = true,\n  showLoudspeaker = true,\n  visibleAvatar = true,\n}: IProps) => {\n  const { theme } = useTheme();\n  const isAssistant = item.role === MessageType.Assistant;\n  const isUser = item.role === MessageType.User;\n  const { data: documentList, setDocumentIds } = useFetchDocumentInfosByIds();\n  const { data: documentThumbnails, setDocumentIds: setIds } =\n    useFetchDocumentThumbnailsByIds();\n  const { visible, hideModal, showModal } = useSetModalState();\n  const [clickedDocumentId, setClickedDocumentId] = useState('');\n\n  const referenceDocumentList = useMemo(() => {\n    return reference?.doc_aggs ?? [];\n  }, [reference?.doc_aggs]);\n\n  const handleUserDocumentClick = useCallback(\n    (id: string) => () => {\n      setClickedDocumentId(id);\n      showModal();\n    },\n    [showModal],\n  );\n\n  const handleRegenerateMessage = useCallback(() => {\n    regenerateMessage?.(item);\n  }, [regenerateMessage, item]);\n\n  useEffect(() => {\n    const ids = item?.doc_ids ?? [];\n    if (ids.length) {\n      setDocumentIds(ids);\n      const documentIds = ids.filter((x) => !(x in documentThumbnails));\n      if (documentIds.length) {\n        setIds(documentIds);\n      }\n    }\n  }, [item.doc_ids, setDocumentIds, setIds, documentThumbnails]);\n\n  return (\n    <div\n      className={classNames(styles.messageItem, {\n        [styles.messageItemLeft]: item.role === MessageType.Assistant,\n        [styles.messageItemRight]: item.role === MessageType.User,\n      })}\n    >\n      <section\n        className={classNames(styles.messageItemSection, {\n          [styles.messageItemSectionLeft]: item.role === MessageType.Assistant,\n          [styles.messageItemSectionRight]: item.role === MessageType.User,\n        })}\n      >\n        <div\n          className={classNames(styles.messageItemContent, {\n            [styles.messageItemContentReverse]: item.role === MessageType.User,\n          })}\n        >\n          {visibleAvatar &&\n            (item.role === MessageType.User ? (\n              <Avatar size={40} src={avatar ?? '/logo.svg'} />\n            ) : avatarDialog ? (\n              <Avatar size={40} src={avatarDialog} />\n            ) : (\n              <AssistantIcon />\n            ))}\n\n          <Flex vertical gap={8} flex={1}>\n            <Space>\n              {isAssistant ? (\n                index !== 0 && (\n                  <AssistantGroupButton\n                    messageId={item.id}\n                    content={item.content}\n                    prompt={item.prompt}\n                    showLikeButton={showLikeButton}\n                    audioBinary={item.audio_binary}\n                    showLoudspeaker={showLoudspeaker}\n                  ></AssistantGroupButton>\n                )\n              ) : (\n                <UserGroupButton\n                  content={item.content}\n                  messageId={item.id}\n                  removeMessageById={removeMessageById}\n                  regenerateMessage={\n                    regenerateMessage && handleRegenerateMessage\n                  }\n                  sendLoading={sendLoading}\n                ></UserGroupButton>\n              )}\n\n              {/* <b>{isAssistant ? '' : nickname}</b> */}\n            </Space>\n            <div\n              className={\n                isAssistant\n                  ? theme === 'dark'\n                    ? styles.messageTextDark\n                    : styles.messageText\n                  : styles.messageUserText\n              }\n            >\n              <MarkdownContent\n                loading={loading}\n                content={item.content}\n                reference={reference}\n                clickDocumentButton={clickDocumentButton}\n              ></MarkdownContent>\n            </div>\n            {isAssistant && referenceDocumentList.length > 0 && (\n              <List\n                bordered\n                dataSource={referenceDocumentList}\n                renderItem={(item) => {\n                  return (\n                    <List.Item>\n                      <Flex gap={'small'} align=\"center\">\n                        <FileIcon\n                          id={item.doc_id}\n                          name={item.doc_name}\n                        ></FileIcon>\n\n                        <NewDocumentLink\n                          documentId={item.doc_id}\n                          documentName={item.doc_name}\n                          prefix=\"document\"\n                          link={item.url}\n                        >\n                          {item.doc_name}\n                        </NewDocumentLink>\n                      </Flex>\n                    </List.Item>\n                  );\n                }}\n              />\n            )}\n            {isUser && documentList.length > 0 && (\n              <List\n                bordered\n                dataSource={documentList}\n                renderItem={(item) => {\n                  // TODO:\n                  // const fileThumbnail =\n                  //   documentThumbnails[item.id] || documentThumbnails[item.id];\n                  const fileExtension = getExtension(item.name);\n                  return (\n                    <List.Item>\n                      <Flex gap={'small'} align=\"center\">\n                        <FileIcon id={item.id} name={item.name}></FileIcon>\n\n                        {isImage(fileExtension) ? (\n                          <NewDocumentLink\n                            documentId={item.id}\n                            documentName={item.name}\n                            prefix=\"document\"\n                          >\n                            {item.name}\n                          </NewDocumentLink>\n                        ) : (\n                          <Button\n                            type={'text'}\n                            onClick={handleUserDocumentClick(item.id)}\n                          >\n                            <Text\n                              style={{ maxWidth: '40vw' }}\n                              ellipsis={{ tooltip: item.name }}\n                            >\n                              {item.name}\n                            </Text>\n                          </Button>\n                        )}\n                      </Flex>\n                    </List.Item>\n                  );\n                }}\n              />\n            )}\n          </Flex>\n        </div>\n      </section>\n      {visible && (\n        <IndentedTreeModal\n          visible={visible}\n          hideModal={hideModal}\n          documentId={clickedDocumentId}\n        ></IndentedTreeModal>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MessageItem);\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Slider } from 'antd';\nimport { z } from 'zod';\nimport { SliderInputFormField } from '../slider-input-form-field';\n\ntype FieldType = {\n  similarity_threshold?: number;\n  // vector_similarity_weight?: number;\n};\n\ninterface IProps {\n  isTooltipShown?: boolean;\n  vectorSimilarityWeightName?: string;\n}\n\nconst SimilaritySlider = ({\n  isTooltipShown = false,\n  vectorSimilarityWeightName = 'vector_similarity_weight',\n}: IProps) => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <Form.Item<FieldType>\n        label={t('similarityThreshold')}\n        name={'similarity_threshold'}\n        tooltip={isTooltipShown && t('similarityThresholdTip')}\n        initialValue={0.2}\n      >\n        <Slider max={1} step={0.01} />\n      </Form.Item>\n      <Form.Item\n        label={t('vectorSimilarityWeight')}\n        name={vectorSimilarityWeightName}\n        initialValue={1 - 0.3}\n        tooltip={isTooltipShown && t('vectorSimilarityWeightTip')}\n      >\n        <Slider max={1} step={0.01} />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default SimilaritySlider;\n\ninterface SimilaritySliderFormFieldProps {\n  vectorSimilarityWeightName?: string;\n  isTooltipShown?: boolean;\n}\n\nexport const initialSimilarityThresholdValue = {\n  similarity_threshold: 0.2,\n};\nexport const initialKeywordsSimilarityWeightValue = {\n  keywords_similarity_weight: 0.7,\n};\n\nexport const similarityThresholdSchema = { similarity_threshold: z.number() };\n\nexport const keywordsSimilarityWeightSchema = {\n  keywords_similarity_weight: z.number(),\n};\n\nexport function SimilaritySliderFormField({\n  vectorSimilarityWeightName = 'vector_similarity_weight',\n  isTooltipShown,\n}: SimilaritySliderFormFieldProps) {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <SliderInputFormField\n        name={'similarity_threshold'}\n        label={t('similarityThreshold')}\n        max={1}\n        step={0.01}\n        tooltip={isTooltipShown && t('similarityThresholdTip')}\n      ></SliderInputFormField>\n      <SliderInputFormField\n        name={vectorSimilarityWeightName}\n        label={t('vectorSimilarityWeight')}\n        max={1}\n        step={0.01}\n        tooltip={isTooltipShown && t('vectorSimilarityWeightTip')}\n      ></SliderInputFormField>\n    </>\n  );\n}\n","import { cn } from '@/lib/utils';\nimport { ReactNode } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { SingleFormSlider } from './ui/dual-range-slider';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\nimport { Input } from './ui/input';\n\ntype SliderInputFormFieldProps = {\n  max?: number;\n  min?: number;\n  step?: number;\n  name: string;\n  label: string;\n  tooltip?: ReactNode;\n  defaultValue?: number;\n  className?: string;\n};\n\nexport function SliderInputFormField({\n  max,\n  min,\n  step,\n  label,\n  name,\n  tooltip,\n  defaultValue,\n  className,\n}: SliderInputFormFieldProps) {\n  const form = useFormContext();\n\n  return (\n    <FormField\n      control={form.control}\n      name={name}\n      defaultValue={defaultValue || 0}\n      render={({ field }) => (\n        <FormItem className=\" items-center space-y-0 \">\n          <div className=\"flex items-center\">\n            <FormLabel\n              tooltip={tooltip}\n              className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n            >\n              {label}\n            </FormLabel>\n            <div\n              className={cn(\n                'flex items-center gap-14 justify-between',\n                'w-3/4',\n                className,\n              )}\n            >\n              <FormControl>\n                <SingleFormSlider\n                  {...field}\n                  max={max}\n                  min={min}\n                  step={step}\n                  // defaultValue={\n                  //   typeof defaultValue === 'number' ? [defaultValue] : undefined\n                  // }\n                ></SingleFormSlider>\n              </FormControl>\n              <FormControl>\n                <Input\n                  type={'number'}\n                  className=\"h-7 w-20\"\n                  max={max}\n                  min={min}\n                  step={step}\n                  {...field}\n                  onChange={(ev) => {\n                    const value = ev.target.value;\n                    field.onChange(value === '' ? 0 : Number(value)); // convert to number\n                  }}\n                  // defaultValue={defaultValue}\n                ></Input>\n              </FormControl>\n            </div>\n          </div>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n","import {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n} from '@/components/ui/form';\nimport { Switch } from '@/components/ui/switch';\nimport { cn } from '@/lib/utils';\nimport { ReactNode } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\ninterface SwitchFormItemProps {\n  name: string;\n  label: ReactNode;\n  vertical?: boolean;\n  tooltip?: ReactNode;\n}\n\nexport function SwitchFormField({\n  label,\n  name,\n  vertical = true,\n  tooltip,\n}: SwitchFormItemProps) {\n  const form = useFormContext();\n\n  return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem\n          className={cn('flex', {\n            'gap-2': vertical,\n            'flex-col': vertical,\n            'justify-between': !vertical,\n          })}\n        >\n          <FormLabel tooltip={tooltip}>{label}</FormLabel>\n          <FormControl>\n            <Switch\n              checked={field.value}\n              onCheckedChange={field.onChange}\n              aria-readonly\n              className=\"!m-0\"\n            />\n          </FormControl>\n        </FormItem>\n      )}\n    />\n  );\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Input, Typography } from 'antd';\n\ninterface IProps {\n  name?: string | string[];\n}\n\nexport function TavilyItem({\n  name = ['prompt_config', 'tavily_api_key'],\n}: IProps) {\n  const { t } = useTranslate('chat');\n\n  return (\n    <Form.Item label={'Tavily API Key'} tooltip={t('tavilyApiKeyTip')}>\n      <div className=\"flex flex-col gap-1\">\n        <Form.Item name={name} noStyle>\n          <Input.Password\n            placeholder={t('tavilyApiKeyMessage')}\n            autoComplete=\"new-password\"\n          />\n        </Form.Item>\n        <Typography.Link href=\"https://app.tavily.com/home\" target={'_blank'}>\n          {t('tavilyApiKeyHelp')}\n        </Typography.Link>\n      </div>\n    </Form.Item>\n  );\n}\n","'use client';\n\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      'relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatar.displayName = AvatarPrimitive.Root.displayName;\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn('aspect-square h-full w-full', className)}\n    {...props}\n  />\n));\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      'flex h-full w-full items-center justify-center rounded-full bg-muted',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\n\nexport { Avatar, AvatarFallback, AvatarImage };\n\ntype AvatarProps = React.ComponentProps<typeof Avatar>;\n\ninterface AvatarGroupProps extends React.ComponentProps<'div'> {\n  children: React.ReactElement<AvatarProps>[];\n  max?: number;\n}\n\nexport const AvatarGroup = ({\n  children,\n  max,\n  className,\n  ...props\n}: AvatarGroupProps) => {\n  const totalAvatars = React.Children.count(children);\n  const displayedAvatars = React.Children.toArray(children)\n    .slice(0, max)\n    .reverse();\n  const remainingAvatars = max ? Math.max(totalAvatars - max, 1) : 0;\n\n  return (\n    <div\n      className={cn('flex items-center flex-row-reverse', className)}\n      {...props}\n    >\n      {remainingAvatars > 0 && (\n        <Avatar className=\"-ml-2 hover:z-10 relative ring-2 ring-background\">\n          <AvatarFallback className=\"bg-muted-foreground text-white\">\n            +{remainingAvatars}\n          </AvatarFallback>\n        </Avatar>\n      )}\n      {displayedAvatars.map((avatar, index) => {\n        if (!React.isValidElement(avatar)) return null;\n\n        return (\n          <div key={index} className=\"-ml-2 hover:z-10 relative\">\n            {React.cloneElement(avatar as React.ReactElement<AvatarProps>, {\n              className: 'ring-2 ring-background',\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","'use client';\n\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-colors-background-neutral-standard p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col space-y-1.5 text-center sm:text-left',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      'text-lg font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n","'use client';\n\nimport * as SliderPrimitive from '@radix-ui/react-slider';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\ninterface DualRangeSliderProps\n  extends React.ComponentProps<typeof SliderPrimitive.Root> {\n  labelPosition?: 'top' | 'bottom';\n  label?: (value: number | undefined) => React.ReactNode;\n}\n\nconst DualRangeSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  DualRangeSliderProps\n>(({ className, label, labelPosition = 'top', ...props }, ref) => {\n  const initialValue = Array.isArray(props.value)\n    ? props.value\n    : [props.min, props.max];\n\n  return (\n    <SliderPrimitive.Root\n      ref={ref}\n      className={cn(\n        'relative flex w-full touch-none select-none items-center',\n        className,\n      )}\n      {...props}\n    >\n      <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n        <SliderPrimitive.Range className=\"absolute h-full bg-background-checked\" />\n      </SliderPrimitive.Track>\n      {initialValue.map((value, index) => (\n        <React.Fragment key={index}>\n          <SliderPrimitive.Thumb className=\"relative block h-4 w-4 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 cursor-pointer\">\n            {label && (\n              <span\n                className={cn(\n                  'absolute flex w-full justify-center',\n                  labelPosition === 'top' && '-top-7',\n                  labelPosition === 'bottom' && 'top-4',\n                )}\n              >\n                {label(value)}\n              </span>\n            )}\n          </SliderPrimitive.Thumb>\n        </React.Fragment>\n      ))}\n    </SliderPrimitive.Root>\n  );\n});\nDualRangeSlider.displayName = 'DualRangeSlider';\n\ntype SingleSliderProps = Omit<\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>,\n  'onChange' | 'value'\n> & { onChange: (value: number) => void; value: number };\n\nconst SingleFormSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  SingleSliderProps\n>(({ value, onChange, ...props }, ref) => {\n  return (\n    <DualRangeSlider\n      ref={ref}\n      value={[value]}\n      onValueChange={(vals) => {\n        onChange(vals[0]);\n      }}\n      {...props}\n    />\n  );\n});\n\nexport { DualRangeSlider, SingleFormSlider };\n","import { Form, Switch } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { SwitchFormField } from './switch-fom-field';\n\ntype IProps = {\n  filedName: string[] | string;\n};\n\nexport function UseKnowledgeGraphItem({ filedName }: IProps) {\n  const { t } = useTranslation();\n\n  return (\n    <Form.Item\n      label={t('chat.useKnowledgeGraph')}\n      tooltip={t('chat.useKnowledgeGraphTip')}\n      name={filedName}\n      initialValue={false}\n    >\n      <Switch></Switch>\n    </Form.Item>\n  );\n}\n\ninterface UseKnowledgeGraphFormFieldProps {\n  name: string;\n}\n\nexport function UseKnowledgeGraphFormField({\n  name,\n}: UseKnowledgeGraphFormFieldProps) {\n  const { t } = useTranslation();\n\n  return (\n    <SwitchFormField\n      name={name}\n      label={t('chat.useKnowledgeGraph')}\n      tooltip={t('chat.useKnowledgeGraphTip')}\n    ></SwitchFormField>\n  );\n}\n","import { LlmIcon } from '@/components/svg-icon';\nimport { LlmModelType } from '@/constants/knowledge';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport {\n  IFactory,\n  IMyLlmValue,\n  IThirdOAIModelCollection as IThirdAiModelCollection,\n  IThirdOAIModel,\n  IThirdOAIModelCollection,\n} from '@/interfaces/database/llm';\nimport {\n  IAddLlmRequestBody,\n  IDeleteLlmRequestBody,\n} from '@/interfaces/request/llm';\nimport userService from '@/services/user-service';\nimport { sortLLmFactoryListBySpecifiedOrder } from '@/utils/common-util';\nimport { getLLMIconName, getRealModelName } from '@/utils/llm-util';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Flex, message } from 'antd';\nimport { DefaultOptionType } from 'antd/es/select';\nimport { useCallback, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useFetchLlmList = (\n  modelType?: LlmModelType,\n): IThirdAiModelCollection => {\n  const { data } = useQuery({\n    queryKey: ['llmList'],\n    initialData: {},\n    queryFn: async () => {\n      const { data } = await userService.llm_list({ model_type: modelType });\n\n      return data?.data ?? {};\n    },\n  });\n\n  return data;\n};\n\nexport const useSelectLlmOptions = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const embeddingModelOptions = useMemo(() => {\n    return Object.entries(llmInfo).map(([key, value]) => {\n      return {\n        label: key,\n        options: value.map((x) => ({\n          label: getRealModelName(x.llm_name),\n          value: `${x.llm_name}@${x.fid}`,\n          disabled: !x.available,\n        })),\n      };\n    });\n  }, [llmInfo]);\n\n  return embeddingModelOptions;\n};\n\nfunction buildLlmOptionsWithIcon(x: IThirdOAIModel) {\n  return {\n    label: (\n      <Flex align=\"center\" gap={6}>\n        <LlmIcon\n          name={getLLMIconName(x.fid, x.llm_name)}\n          width={26}\n          height={26}\n          size={'small'}\n        />\n        <span>{getRealModelName(x.llm_name)}</span>\n      </Flex>\n    ),\n    value: `${x.llm_name}@${x.fid}`,\n    disabled: !x.available,\n    is_tools: x.is_tools,\n  };\n}\n\nexport const useSelectLlmOptionsByModelType = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const groupImage2TextOptions = useCallback(() => {\n    const modelType = LlmModelType.Image2text;\n    const modelTag = modelType.toUpperCase();\n\n    return Object.entries(llmInfo)\n      .map(([key, value]) => {\n        return {\n          label: key,\n          options: value\n            .filter(\n              (x) =>\n                (x.model_type.includes(modelType) ||\n                  (x.tags && x.tags.includes(modelTag))) &&\n                x.available,\n            )\n            .map(buildLlmOptionsWithIcon),\n        };\n      })\n      .filter((x) => x.options.length > 0);\n  }, [llmInfo]);\n\n  const groupOptionsByModelType = useCallback(\n    (modelType: LlmModelType) => {\n      return Object.entries(llmInfo)\n        .filter(([, value]) =>\n          modelType\n            ? value.some((x) => x.model_type.includes(modelType))\n            : true,\n        )\n        .map(([key, value]) => {\n          return {\n            label: key,\n            options: value\n              .filter(\n                (x) =>\n                  (modelType ? x.model_type.includes(modelType) : true) &&\n                  x.available,\n              )\n              .map(buildLlmOptionsWithIcon),\n          };\n        })\n        .filter((x) => x.options.length > 0);\n    },\n    [llmInfo],\n  );\n\n  return {\n    [LlmModelType.Chat]: groupOptionsByModelType(LlmModelType.Chat),\n    [LlmModelType.Embedding]: groupOptionsByModelType(LlmModelType.Embedding),\n    [LlmModelType.Image2text]: groupImage2TextOptions(),\n    [LlmModelType.Speech2text]: groupOptionsByModelType(\n      LlmModelType.Speech2text,\n    ),\n    [LlmModelType.Rerank]: groupOptionsByModelType(LlmModelType.Rerank),\n    [LlmModelType.TTS]: groupOptionsByModelType(LlmModelType.TTS),\n  };\n};\n\nexport const useComposeLlmOptionsByModelTypes = (\n  modelTypes: LlmModelType[],\n) => {\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  return modelTypes.reduce<\n    (DefaultOptionType & {\n      options: { label: JSX.Element; value: string; disabled: boolean; is_tools: boolean }[];\n    })[]\n  >((pre, cur) => {\n    const options = allOptions[cur];\n    options.forEach((x) => {\n      const item = pre.find((y) => y.label === x.label);\n      if (item) {\n        item.options.push(...x.options);\n      } else {\n        pre.push(x);\n      }\n    });\n\n    return pre;\n  }, []);\n};\n\nexport const useFetchLlmFactoryList = (): ResponseGetType<IFactory[]> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['factoryList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.factories_list();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading };\n};\n\nexport type LlmItem = { name: string; logo: string } & IMyLlmValue;\n\nexport const useFetchMyLlmList = (): ResponseGetType<\n  Record<string, IMyLlmValue>\n> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['myLlmList'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.my_llm();\n\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectLlmList = () => {\n  const { data: myLlmList, loading: myLlmListLoading } = useFetchMyLlmList();\n  const { data: factoryList, loading: factoryListLoading } =\n    useFetchLlmFactoryList();\n\n  const nextMyLlmList: Array<LlmItem> = useMemo(() => {\n    return Object.entries(myLlmList).map(([key, value]) => ({\n      name: key,\n      logo: factoryList.find((x) => x.name === key)?.logo ?? '',\n      ...value,\n      llm: value.llm.map((x) => ({ ...x, name: x.name })),\n    }));\n  }, [myLlmList, factoryList]);\n\n  const nextFactoryList = useMemo(() => {\n    const currentList = factoryList.filter((x) =>\n      Object.keys(myLlmList).every((y) => y !== x.name),\n    );\n    return sortLLmFactoryListBySpecifiedOrder(currentList);\n  }, [factoryList, myLlmList]);\n\n  return {\n    myLlmList: nextMyLlmList,\n    factoryList: nextFactoryList,\n    loading: myLlmListLoading || factoryListLoading,\n  };\n};\n\nexport interface IApiKeySavingParams {\n  llm_factory: string;\n  api_key: string;\n  llm_name?: string;\n  model_type?: string;\n  base_url?: string;\n}\n\nexport const useSaveApiKey = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveApiKey'],\n    mutationFn: async (params: IApiKeySavingParams) => {\n      const { data } = await userService.set_api_key(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveApiKey: mutateAsync };\n};\n\nexport interface ISystemModelSettingSavingParams {\n  tenant_id: string;\n  name?: string;\n  asr_id: string;\n  embd_id: string;\n  img2txt_id: string;\n  llm_id: string;\n}\n\nexport const useSaveTenantInfo = () => {\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveTenantInfo'],\n    mutationFn: async (params: ISystemModelSettingSavingParams) => {\n      const { data } = await userService.set_tenant_info(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveTenantInfo: mutateAsync };\n};\n\nexport const useAddLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addLlm'],\n    mutationFn: async (params: IAddLlmRequestBody) => {\n      const { data } = await userService.add_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, addLlm: mutateAsync };\n};\n\nexport const useDeleteLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteLlm'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.delete_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteLlm: mutateAsync };\n};\n\nexport const useDeleteFactory = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteFactory'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.deleteFactory(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteFactory: mutateAsync };\n};\n","export const getLLMIconName = (fid: string, llm_name: string) => {\n  if (fid === 'FastEmbed') {\n    return llm_name.split('/').at(0) ?? '';\n  }\n\n  return fid;\n};\n\nexport const getLlmNameAndFIdByLlmId = (llmId?: string) => {\n  const [llmName, fId] = llmId?.split('@') || [];\n\n  return { fId, llmName };\n};\n\n// The names of the large models returned by the interface are similar to \"deepseek-r1___OpenAI-API\"\nexport function getRealModelName(llmName: string) {\n  return llmName.split('__').at(0) ?? '';\n}\n"],"names":["Paragraph","Typography","Link","_ref","src","visible","hideModal","_ref$token","token","form","_ref$beta","beta","isAgent","t","useTranslate","isDarkTheme","useIsDarkTheme","_useState","useState","_useState2","_slicedToArray","visibleAvatar","setVisibleAvatar","_useState3","_useState4","locale","setLocale","languageOptions","useMemo","Object","values","LanguageAbbreviation","map","x","label","LanguageAbbreviationMap","value","iframeSrc","concat","location","origin","text","items","key","children","_jsxs","Card","title","extra","_jsx","CopyToClipboard","className","styles","Form","Item","labelCol","span","wrapperCol","Checkbox","checked","onChange","e","target","Select","placeholder","options","style","width","HightLightMarkdown","Modal","keyPrefix","open","top","onOk","onCancel","Tabs","defaultActiveKey","console","log","copyable","cn","_defineProperty","href","useOperateApiKey","idKey","dialogId","removeToken","useRemoveSystemToken","_useCreateSystemToken","useCreateSystemToken","createToken","creatingLoading","loading","_useFetchSystemTokenL","useFetchSystemTokenList","tokenList","data","listLoading","showDeleteConfirm","useShowDeleteConfirm","useCallback","useFetchTokenListBeforeOtherStep","showTokenEmptyError","message","error","_useShowBetaEmptyErro","showBetaEmptyError","useShowBetaEmptyError","_useFetchManualSystem","useFetchManualSystemTokenList","fetchSystemTokenList","Array","isArray","length","handleOperate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ret","list","_list$","wrap","_context","prev","next","sent","abrupt","stop","useShowEmbedModal","_useSetModalState","useSetModalState","embedVisible","hideEmbedModal","showEmbedModal","showModal","_useFetchTokenListBef","_callee2","_context2","embedToken","usePreviewChat","window","from","arguments","undefined","_window$location","protocol","host","getUrlWithToken","SharedFrom","Agent","Chat","handlePreview","_callee3","_context3","prefix","_ref$formItemLayout","formItemLayout","useFormInstance","parameterOptions","ModelVariableType","camelCase","handleParametersChange","variable","settledModelVariableMap","nextVariable","variableCheckBoxFieldMap","setChatVariableEnabledFieldValuePage","setFieldsValue","_objectSpread","memorizedPrefix","modelOptions","useComposeLlmOptionsByModelTypes","LlmModelType","Image2text","_Fragment","name","tooltip","rules","required","showSearch","popupMatchSelectWidth","Tooltip","QuestionCircleOutlined","initialValue","Precise","Flex","gap","align","valuePropName","noStyle","Switch","size","dependencies","shouldUpdate","_ref2","disabled","getFieldValue","flex","_toConsumableArray","Slider","max","step","InputNumber","min","_ref3","_ref4","_ref5","_ref6","_Form$useForm","useForm","handleOk","validateFields","thumbup","feedback","confirmLoading","maxWidth","autoComplete","Input","TextArea","rows","prompt","Space","SvgIcon","footer","AssistantGroupButton","messageId","content","audioBinary","showLikeButton","_ref$showLoudspeaker","showLoudspeaker","_useSendFeedback","_useFeedback","useFeedback","onFeedbackOk","params","_x","apply","useSendFeedback","promptVisible","hidePromptModal","showPromptModal","useTranslation","_useSpeech","ref","useRef","read","useSpeechWithSse","player","isPlaying","setIsPlaying","initialize","current","SpeechPlayer","audio","onPlaying","onPause","onChunkEnd","mimeType","MediaSource","isTypeSupported","init","pause","_player$current","speech","_callee4","response","_player$current2","_context4","feedWithResponse","handleRead","_callee5","_context5","useEffect","units","hexStringToUint8Array","_player$current3","feed","warn","useSpeech","handleLike","Radio","onClick","PauseCircleOutlined","SoundOutlined","LikeOutlined","DislikeOutlined","PromptIcon","fontSize","FeedbackModal","PromptModal","UserGroupButton","sendLoading","removeMessageById","regenerateMessage","_useRemoveMessage","_useDeleteMessage","useDeleteMessage","deleteMessage","onRemoveMessage","useRemoveMessage","SyncOutlined","spin","DeleteOutlined","Text","MessageItem","item","reference","_ref$loading","avatar","avatarDialog","_ref$sendLoading","clickDocumentButton","index","_ref$showLikeButton","_ref$visibleAvatar","theme","useTheme","isAssistant","role","MessageType","Assistant","isUser","User","_useFetchDocumentInfo","useFetchDocumentInfosByIds","documentList","setDocumentIds","_useFetchDocumentThum","useFetchDocumentThumbnailsByIds","documentThumbnails","setIds","clickedDocumentId","setClickedDocumentId","referenceDocumentList","_reference$doc_aggs","doc_aggs","handleUserDocumentClick","id","handleRegenerateMessage","_item$doc_ids","ids","doc_ids","documentIds","filter","classNames","messageItem","messageItemLeft","messageItemRight","messageItemSection","messageItemSectionLeft","messageItemSectionRight","messageItemContent","messageItemContentReverse","Avatar","AssistantIcon","vertical","audio_binary","messageTextDark","messageText","messageUserText","MarkdownContent","List","bordered","dataSource","renderItem","FileIcon","doc_id","doc_name","NewDocumentLink","documentId","documentName","link","url","fileExtension","getExtension","isImage","Button","type","ellipsis","IndentedTreeModal","memo","_ref$isTooltipShown","isTooltipShown","_ref$vectorSimilarity","vectorSimilarityWeightName","initialSimilarityThresholdValue","similarity_threshold","initialKeywordsSimilarityWeightValue","keywords_similarity_weight","similarityThresholdSchema","z","number","keywordsSimilarityWeightSchema","SimilaritySliderFormField","_ref2$vectorSimilarit","SliderInputFormField","defaultValue","useFormContext","FormField","control","render","field","FormItem","FormLabel","FormControl","SingleFormSlider","ev","Number","FormMessage","SwitchFormField","_ref$vertical","onCheckedChange","TavilyItem","_ref$name","Password","_excluded","_excluded2","_excluded3","React","props","_objectWithoutProperties","AvatarPrimitive","displayName","AvatarImage","AvatarFallback","_excluded4","_excluded5","_excluded6","Dialog","DialogPrimitive","DialogTrigger","DialogPortal","DialogOverlay","DialogContent","X","DialogHeader","DialogFooter","DialogTitle","DualRangeSlider","_ref$labelPosition","labelPosition","SliderPrimitive","onValueChange","vals","UseKnowledgeGraphItem","filedName","UseKnowledgeGraphFormField","useFetchLlmList","modelType","_queryFn","_useQuery","useQuery","queryKey","initialData","queryFn","_data$data","_yield$userService$ll","userService","llm_list","model_type","buildLlmOptionsWithIcon","LlmIcon","getLLMIconName","fid","llm_name","height","getRealModelName","available","is_tools","useSelectLlmOptionsByModelType","llmInfo","groupImage2TextOptions","modelTag","toUpperCase","entries","includes","tags","groupOptionsByModelType","some","_ref7","_ref8","Embedding","Speech2text","Rerank","TTS","modelTypes","allOptions","reduce","pre","cur","forEach","_item$options","find","y","push","useSelectLlmList","_queryFn3","_useQuery3","_queryFn2","_useQuery2","_useFetchMyLlmList","gcTime","_data$data3","_yield$userService$my","my_llm","isFetching","myLlmList","myLlmListLoading","_useFetchLlmFactoryLi","_data$data2","_yield$userService$fa","factories_list","factoryList","factoryListLoading","_ref10","_factoryList$find$log","_factoryList$find","_ref11","logo","llm","currentList","keys","every","sortLLmFactoryListBySpecifiedOrder","useSaveApiKey","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","_yield$userService$se","set_api_key","code","success","invalidateQueries","isPending","saveApiKey","mutateAsync","useSaveTenantInfo","_mutationFn2","_useMutation2","_yield$userService$se2","set_tenant_info","_x2","saveTenantInfo","useAddLlm","_mutationFn3","_useMutation3","_callee6","_yield$userService$ad","_context6","add_llm","_x3","addLlm","useDeleteLlm","_mutationFn4","_useMutation4","_callee7","_yield$userService$de","_context7","delete_llm","_x4","deleteLlm","useDeleteFactory","_mutationFn5","_useMutation5","_callee8","_yield$userService$de2","_context8","deleteFactory","_x5","_llm_name$split$at","split","at","getLlmNameAndFIdByLlmId","llmId","llmName","fId","_llmName$split$at"],"sourceRoot":""}