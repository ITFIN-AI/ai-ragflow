{"version":3,"file":"p__dataset__setting__index.413fa5c3.async.js","mappings":"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","sources":["webpack:///./src/components/ui/alert-dialog.tsx","webpack:///./src/components/confirm-delete-dialog.tsx","webpack:///./src/components/ui/avatar.tsx","webpack:///./src/components/ui/badge.tsx","webpack:///./src/components/ui/checkbox.tsx","webpack:///./src/components/ui/command.tsx","webpack:///./src/components/ui/loading-button.tsx","webpack:///./src/components/ui/multi-select.tsx","webpack:///./src/components/ui/popover.tsx","webpack:///./src/components/ui/select.tsx","webpack:///./src/pages/add-knowledge/constant.ts","webpack:///./src/pages/dataset/dataset-title.tsx","webpack:///./src/components/ui/tabs-underlined.tsx","webpack:///./src/components/page-rank-form-field.tsx","webpack:///./src/pages/dataset/setting/configuration-form-container.tsx","webpack:///./src/pages/dataset/setting/tag-item.tsx","webpack:///./src/pages/dataset/setting/hooks.ts","webpack:///./src/pages/dataset/setting/configuration/common-item.tsx","webpack:///./src/pages/dataset/setting/chunk-method-form.tsx","webpack:///./src/pages/dataset/setting/configuration/naive.tsx","webpack:///./src/pages/dataset/setting/configuration/qa.tsx","webpack:///./src/pages/dataset/setting/configuration/resume.tsx","webpack:///./src/pages/dataset/setting/configuration/manual.tsx","webpack:///./src/pages/dataset/setting/configuration/table.tsx","webpack:///./src/pages/dataset/setting/configuration/paper.tsx","webpack:///./src/pages/dataset/setting/configuration/book.tsx","webpack:///./src/pages/dataset/setting/configuration/laws.tsx","webpack:///./src/pages/dataset/setting/configuration/presentation.tsx","webpack:///./src/pages/dataset/setting/configuration/picture.tsx","webpack:///./src/pages/dataset/setting/configuration/one.tsx","webpack:///./src/pages/dataset/setting/configuration/audio.tsx","webpack:///./src/pages/dataset/setting/configuration/email.tsx","webpack:///./src/pages/dataset/setting/configuration/tag.tsx","webpack:///./src/pages/dataset/setting/configuration/knowledge-graph.tsx","webpack:///./src/pages/dataset/setting/index.less?a3fc","webpack:///./src/pages/dataset/setting/tag-table/rename-dialog/rename-form.tsx","webpack:///./src/pages/dataset/setting/tag-table/rename-dialog/index.tsx","webpack:///./src/pages/dataset/setting/tag-table/index.tsx","webpack:///./src/pages/dataset/setting/tag-word-cloud.tsx","webpack:///./src/pages/dataset/setting/tag-tabs.tsx","webpack:///./src/pages/dataset/setting/utils.ts","webpack:///./src/pages/dataset/setting/category-panel.tsx","webpack:///./src/pages/dataset/setting/chunk-method-learn-more.tsx","webpack:///./src/pages/dataset/setting/form-schema.ts","webpack:///./src/components/ui/radio-group.tsx","webpack:///./src/pages/dataset/setting/general-form.tsx","webpack:///./src/pages/dataset/setting/index.tsx"],"sourcesContent":["'use client';\n\nimport * as AlertDialogPrimitive from '@radix-ui/react-alert-dialog';\nimport * as React from 'react';\n\nimport { buttonVariants } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\nconst AlertDialog = AlertDialogPrimitive.Root;\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger;\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal;\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className,\n    )}\n    {...props}\n    ref={ref}\n  />\n));\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-colors-background-neutral-standard p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n        className,\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n));\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col space-y-2 text-center sm:text-left',\n      className,\n    )}\n    {...props}\n  />\n);\nAlertDialogHeader.displayName = 'AlertDialogHeader';\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n      className,\n    )}\n    {...props}\n  />\n);\nAlertDialogFooter.displayName = 'AlertDialogFooter';\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn('text-lg font-semibold', className)}\n    {...props}\n  />\n));\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName;\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n));\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: 'outline' }),\n      'mt-2 sm:mt-0',\n      className,\n    )}\n    {...props}\n  />\n));\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName;\n\nexport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogOverlay,\n  AlertDialogPortal,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n};\n","import {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { PropsWithChildren } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface IProps {\n  title?: string;\n  onOk?: (...args: any[]) => any;\n  onCancel?: (...args: any[]) => any;\n  hidden?: boolean;\n}\n\nexport function ConfirmDeleteDialog({\n  children,\n  title,\n  onOk,\n  onCancel,\n  hidden = false,\n}: IProps & PropsWithChildren) {\n  const { t } = useTranslation();\n\n  if (hidden) {\n    return children;\n  }\n\n  return (\n    <AlertDialog>\n      <AlertDialogTrigger asChild>{children}</AlertDialogTrigger>\n      <AlertDialogContent\n        onSelect={(e) => e.preventDefault()}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <AlertDialogHeader>\n          <AlertDialogTitle>\n            {title ?? t('common.deleteModalTitle')}\n          </AlertDialogTitle>\n          {/* <AlertDialogDescription>\n            This action cannot be undone. This will permanently delete your\n            account and remove your data from our servers.\n          </AlertDialogDescription> */}\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n          <AlertDialogCancel onClick={onCancel}>\n            {t('common.cancel')}\n          </AlertDialogCancel>\n          <AlertDialogAction\n            className=\"bg-text-delete-red text-text-title\"\n            onClick={onOk}\n          >\n            {t('common.ok')}\n          </AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n","'use client';\n\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      'relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatar.displayName = AvatarPrimitive.Root.displayName;\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn('aspect-square h-full w-full', className)}\n    {...props}\n  />\n));\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      'flex h-full w-full items-center justify-center rounded-full bg-muted',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\n\nexport { Avatar, AvatarFallback, AvatarImage };\n\ntype AvatarProps = React.ComponentProps<typeof Avatar>;\n\ninterface AvatarGroupProps extends React.ComponentProps<'div'> {\n  children: React.ReactElement<AvatarProps>[];\n  max?: number;\n}\n\nexport const AvatarGroup = ({\n  children,\n  max,\n  className,\n  ...props\n}: AvatarGroupProps) => {\n  const totalAvatars = React.Children.count(children);\n  const displayedAvatars = React.Children.toArray(children)\n    .slice(0, max)\n    .reverse();\n  const remainingAvatars = max ? Math.max(totalAvatars - max, 1) : 0;\n\n  return (\n    <div\n      className={cn('flex items-center flex-row-reverse', className)}\n      {...props}\n    >\n      {remainingAvatars > 0 && (\n        <Avatar className=\"-ml-2 hover:z-10 relative ring-2 ring-background\">\n          <AvatarFallback className=\"bg-muted-foreground text-white\">\n            +{remainingAvatars}\n          </AvatarFallback>\n        </Avatar>\n      )}\n      {displayedAvatars.map((avatar, index) => {\n        if (!React.isValidElement(avatar)) return null;\n\n        return (\n          <div key={index} className=\"-ml-2 hover:z-10 relative\">\n            {React.cloneElement(avatar as React.ReactElement<AvatarProps>, {\n              className: 'ring-2 ring-background',\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary:\n          'border-transparent bg-background-card text-text-sub-title-invert hover:bg-secondary/80 rounded-md',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n        tertiary:\n          'border-transparent bg-colors-background-core-strong text-colors-text-persist-light hover:bg-colors-background-core-strong/80',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n","'use client';\n\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport { Check } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      'peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',\n      className,\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn('flex items-center justify-center text-current')}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","'use client';\n\nimport { type DialogProps } from '@radix-ui/react-dialog';\nimport { Command as CommandPrimitive } from 'cmdk';\nimport { Search } from 'lucide-react';\nimport * as React from 'react';\n\nimport { Dialog, DialogContent } from '@/components/ui/dialog';\nimport { cn } from '@/lib/utils';\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      'flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground',\n      className,\n    )}\n    {...props}\n  />\n));\nCommand.displayName = CommandPrimitive.displayName;\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        'flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50',\n        className,\n      )}\n      {...props}\n    />\n  </div>\n));\n\nCommandInput.displayName = CommandPrimitive.Input.displayName;\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn('max-h-[300px] overflow-y-auto overflow-x-hidden', className)}\n    {...props}\n  />\n));\n\nCommandList.displayName = CommandPrimitive.List.displayName;\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n));\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName;\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      'overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground',\n      className,\n    )}\n    {...props}\n  />\n));\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName;\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 h-px bg-border', className)}\n    {...props}\n  />\n));\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName;\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className,\n    )}\n    {...props}\n  />\n));\n\nCommandItem.displayName = CommandPrimitive.Item.displayName;\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        'ml-auto text-xs tracking-widest text-muted-foreground',\n        className,\n      )}\n      {...props}\n    />\n  );\n};\nCommandShortcut.displayName = 'CommandShortcut';\n\nexport {\n  Command,\n  CommandDialog,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n  CommandShortcut,\n};\n","// https://github.com/hsuanyi-chou/shadcn-ui-expansions/blob/main/components/ui/loading-button.tsx\n\nimport { cn } from '@/lib/utils';\nimport { Slot, Slottable } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { Loader2 } from 'lucide-react';\nimport * as React from 'react';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n        tertiary:\n          'bg-colors-background-sentiment-solid-primary text-colors-text-persist-light hover:bg-colors-background-sentiment-solid-primary/80',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n  loading?: boolean;\n}\n\nconst LoadingButton = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      loading = false,\n      children,\n      disabled,\n      variant,\n      size,\n      asChild = false,\n      ...props\n    },\n    ref,\n  ) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        disabled={loading || disabled}\n        {...props}\n      >\n        {loading && <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />}\n        <Slottable>{children}</Slottable>\n      </Comp>\n    );\n  },\n);\nLoadingButton.displayName = 'LoadingButton';\n\nexport { LoadingButton, buttonVariants };\n","// src/components/multi-select.tsx\n\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport {\n  CheckIcon,\n  ChevronDown,\n  WandSparkles,\n  XCircle,\n  XIcon,\n} from 'lucide-react';\nimport * as React from 'react';\n\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n} from '@/components/ui/command';\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\nimport { Separator } from '@/components/ui/separator';\nimport { cn } from '@/lib/utils';\n\n/**\n * Variants for the multi-select component to handle different styles.\n * Uses class-variance-authority (cva) to define different styles based on \"variant\" prop.\n */\nconst multiSelectVariants = cva(\n  'm-1 transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110 duration-300',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-foreground/10 text-foreground bg-card hover:bg-card/80',\n        secondary:\n          'border-foreground/10 bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        inverted: 'inverted',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\n/**\n * Props for MultiSelect component\n */\ninterface MultiSelectProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof multiSelectVariants> {\n  /**\n   * An array of option objects to be displayed in the multi-select component.\n   * Each option object has a label, value, and an optional icon.\n   */\n  options: {\n    /** The text to display for the option. */\n    label: string;\n    /** The unique value associated with the option. */\n    value: string;\n    /** Optional icon component to display alongside the option. */\n    icon?: React.ComponentType<{ className?: string }>;\n  }[];\n\n  /**\n   * Callback function triggered when the selected values change.\n   * Receives an array of the new selected values.\n   */\n  onValueChange: (value: string[]) => void;\n\n  /** The default selected values when the component mounts. */\n  defaultValue?: string[];\n\n  /**\n   * Placeholder text to be displayed when no values are selected.\n   * Optional, defaults to \"Select options\".\n   */\n  placeholder?: string;\n\n  /**\n   * Animation duration in seconds for the visual effects (e.g., bouncing badges).\n   * Optional, defaults to 0 (no animation).\n   */\n  animation?: number;\n\n  /**\n   * Maximum number of items to display. Extra selected items will be summarized.\n   * Optional, defaults to 3.\n   */\n  maxCount?: number;\n\n  /**\n   * The modality of the popover. When set to true, interaction with outside elements\n   * will be disabled and only popover content will be visible to screen readers.\n   * Optional, defaults to false.\n   */\n  modalPopover?: boolean;\n\n  /**\n   * If true, renders the multi-select component as a child of another component.\n   * Optional, defaults to false.\n   */\n  asChild?: boolean;\n\n  /**\n   * Additional class names to apply custom styles to the multi-select component.\n   * Optional, can be used to add custom styles.\n   */\n  className?: string;\n}\n\nexport const MultiSelect = React.forwardRef<\n  HTMLButtonElement,\n  MultiSelectProps\n>(\n  (\n    {\n      options,\n      onValueChange,\n      variant,\n      defaultValue = [],\n      placeholder = 'Select options',\n      animation = 0,\n      maxCount = 3,\n      modalPopover = false,\n      asChild = false,\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    const [selectedValues, setSelectedValues] =\n      React.useState<string[]>(defaultValue);\n    const [isPopoverOpen, setIsPopoverOpen] = React.useState(false);\n    const [isAnimating, setIsAnimating] = React.useState(false);\n\n    const handleInputKeyDown = (\n      event: React.KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key === 'Enter') {\n        setIsPopoverOpen(true);\n      } else if (event.key === 'Backspace' && !event.currentTarget.value) {\n        const newSelectedValues = [...selectedValues];\n        newSelectedValues.pop();\n        setSelectedValues(newSelectedValues);\n        onValueChange(newSelectedValues);\n      }\n    };\n\n    const toggleOption = (option: string) => {\n      const newSelectedValues = selectedValues.includes(option)\n        ? selectedValues.filter((value) => value !== option)\n        : [...selectedValues, option];\n      setSelectedValues(newSelectedValues);\n      onValueChange(newSelectedValues);\n    };\n\n    const handleClear = () => {\n      setSelectedValues([]);\n      onValueChange([]);\n    };\n\n    const handleTogglePopover = () => {\n      setIsPopoverOpen((prev) => !prev);\n    };\n\n    const clearExtraOptions = () => {\n      const newSelectedValues = selectedValues.slice(0, maxCount);\n      setSelectedValues(newSelectedValues);\n      onValueChange(newSelectedValues);\n    };\n\n    const toggleAll = () => {\n      if (selectedValues.length === options.length) {\n        handleClear();\n      } else {\n        const allValues = options.map((option) => option.value);\n        setSelectedValues(allValues);\n        onValueChange(allValues);\n      }\n    };\n\n    return (\n      <Popover\n        open={isPopoverOpen}\n        onOpenChange={setIsPopoverOpen}\n        modal={modalPopover}\n      >\n        <PopoverTrigger asChild>\n          <Button\n            ref={ref}\n            {...props}\n            onClick={handleTogglePopover}\n            className={cn(\n              'flex w-full p-1 rounded-md border min-h-10 h-auto items-center justify-between bg-inherit hover:bg-inherit [&_svg]:pointer-events-auto',\n              className,\n            )}\n          >\n            {selectedValues.length > 0 ? (\n              <div className=\"flex justify-between items-center w-full\">\n                <div className=\"flex flex-wrap items-center\">\n                  {selectedValues.slice(0, maxCount).map((value) => {\n                    const option = options.find((o) => o.value === value);\n                    const IconComponent = option?.icon;\n                    return (\n                      <Badge\n                        key={value}\n                        className={cn(\n                          isAnimating ? 'animate-bounce' : '',\n                          multiSelectVariants({ variant }),\n                        )}\n                        style={{ animationDuration: `${animation}s` }}\n                      >\n                        {IconComponent && (\n                          <IconComponent className=\"h-4 w-4 mr-2\" />\n                        )}\n                        {option?.label}\n                        <XCircle\n                          className=\"ml-2 h-4 w-4 cursor-pointer\"\n                          onClick={(event) => {\n                            event.stopPropagation();\n                            toggleOption(value);\n                          }}\n                        />\n                      </Badge>\n                    );\n                  })}\n                  {selectedValues.length > maxCount && (\n                    <Badge\n                      className={cn(\n                        'bg-transparent text-foreground border-foreground/1 hover:bg-transparent',\n                        isAnimating ? 'animate-bounce' : '',\n                        multiSelectVariants({ variant }),\n                      )}\n                      style={{ animationDuration: `${animation}s` }}\n                    >\n                      {`+ ${selectedValues.length - maxCount} more`}\n                      <XCircle\n                        className=\"ml-2 h-4 w-4 cursor-pointer\"\n                        onClick={(event) => {\n                          event.stopPropagation();\n                          clearExtraOptions();\n                        }}\n                      />\n                    </Badge>\n                  )}\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <XIcon\n                    className=\"h-4 mx-2 cursor-pointer text-muted-foreground\"\n                    onClick={(event) => {\n                      event.stopPropagation();\n                      handleClear();\n                    }}\n                  />\n                  <Separator\n                    orientation=\"vertical\"\n                    className=\"flex min-h-6 h-full\"\n                  />\n                  <ChevronDown className=\"h-4 mx-2 cursor-pointer text-muted-foreground\" />\n                </div>\n              </div>\n            ) : (\n              <div className=\"flex items-center justify-between w-full mx-auto\">\n                <span className=\"text-sm text-muted-foreground mx-3\">\n                  {placeholder}\n                </span>\n                <ChevronDown className=\"h-4 cursor-pointer text-muted-foreground mx-2\" />\n              </div>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent\n          className=\"w-auto p-0\"\n          align=\"start\"\n          onEscapeKeyDown={() => setIsPopoverOpen(false)}\n        >\n          <Command>\n            <CommandInput\n              placeholder=\"Search...\"\n              onKeyDown={handleInputKeyDown}\n            />\n            <CommandList>\n              <CommandEmpty>No results found.</CommandEmpty>\n              <CommandGroup>\n                <CommandItem\n                  key=\"all\"\n                  onSelect={toggleAll}\n                  className=\"cursor-pointer\"\n                >\n                  <div\n                    className={cn(\n                      'mr-2 flex h-4 w-4 items-center justify-center rounded-sm border border-primary',\n                      selectedValues.length === options.length\n                        ? 'bg-primary text-primary-foreground'\n                        : 'opacity-50 [&_svg]:invisible',\n                    )}\n                  >\n                    <CheckIcon className=\"h-4 w-4\" />\n                  </div>\n                  <span>(Select All)</span>\n                </CommandItem>\n                {options.map((option) => {\n                  const isSelected = selectedValues.includes(option.value);\n                  return (\n                    <CommandItem\n                      key={option.value}\n                      onSelect={() => toggleOption(option.value)}\n                      className=\"cursor-pointer\"\n                    >\n                      <div\n                        className={cn(\n                          'mr-2 flex h-4 w-4 items-center justify-center rounded-sm border border-primary',\n                          isSelected\n                            ? 'bg-primary text-primary-foreground'\n                            : 'opacity-50 [&_svg]:invisible',\n                        )}\n                      >\n                        <CheckIcon className=\"h-4 w-4\" />\n                      </div>\n                      {option.icon && (\n                        <option.icon className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                      )}\n                      <span>{option.label}</span>\n                    </CommandItem>\n                  );\n                })}\n              </CommandGroup>\n              <CommandSeparator />\n              <CommandGroup>\n                <div className=\"flex items-center justify-between\">\n                  {selectedValues.length > 0 && (\n                    <>\n                      <CommandItem\n                        onSelect={handleClear}\n                        className=\"flex-1 justify-center cursor-pointer\"\n                      >\n                        Clear\n                      </CommandItem>\n                      <Separator\n                        orientation=\"vertical\"\n                        className=\"flex min-h-6 h-full\"\n                      />\n                    </>\n                  )}\n                  <CommandItem\n                    onSelect={() => setIsPopoverOpen(false)}\n                    className=\"flex-1 justify-center cursor-pointer max-w-full\"\n                  >\n                    Close\n                  </CommandItem>\n                </div>\n              </CommandGroup>\n            </CommandList>\n          </Command>\n        </PopoverContent>\n        {animation > 0 && selectedValues.length > 0 && (\n          <WandSparkles\n            className={cn(\n              'cursor-pointer my-2 text-foreground bg-background w-3 h-3',\n              isAnimating ? '' : 'text-muted-foreground',\n            )}\n            onClick={() => setIsAnimating(!isAnimating)}\n          />\n        )}\n      </Popover>\n    );\n  },\n);\n\nMultiSelect.displayName = 'MultiSelect';\n","'use client';\n\nimport * as PopoverPrimitive from '@radix-ui/react-popover';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Popover = PopoverPrimitive.Root;\n\nconst PopoverTrigger = PopoverPrimitive.Trigger;\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        'z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        className,\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n));\nPopoverContent.displayName = PopoverPrimitive.Content.displayName;\n\nexport { Popover, PopoverContent, PopoverTrigger };\n","'use client';\n\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { Check, ChevronDown, ChevronUp, X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\nimport { ControllerRenderProps } from 'react-hook-form';\n\nimport { FormControl } from '@/components/ui/form';\nimport { forwardRef, useCallback, useEffect } from 'react';\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger> & {\n    onReset?: () => void;\n    allowClear?: boolean;\n  }\n>(({ className, children, value, onReset, allowClear, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'flex h-8 w-full items-center justify-between rounded-md border border-input bg-colors-background-inverse-weak px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1',\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon\n      asChild\n      onPointerDown={(event) => {\n        event.stopPropagation();\n      }}\n    >\n      {value && allowClear ? (\n        <X className=\"h-4 w-4 opacity-50 cursor-pointer\" onClick={onReset} />\n      ) : (\n        <ChevronDown className=\"h-4 w-4 opacity-50\" />\n      )}\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className,\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className,\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        'relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        position === 'popper' &&\n          'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          'p-1',\n          position === 'popper' &&\n            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]',\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n};\n\nexport type RAGFlowSelectOptionType = {\n  label: React.ReactNode;\n  value: string;\n  disabled?: boolean;\n  icon?: React.ReactNode;\n};\n\nexport type RAGFlowSelectGroupOptionType = {\n  label: React.ReactNode;\n  options: RAGFlowSelectOptionType[];\n};\n\nexport type RAGFlowSelectProps = Partial<ControllerRenderProps> & {\n  FormControlComponent?: typeof FormControl;\n  options?: (RAGFlowSelectOptionType | RAGFlowSelectGroupOptionType)[];\n  allowClear?: boolean;\n  placeholder?: React.ReactNode;\n  contentProps?: React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>;\n  triggerClassName?: string;\n  onlyShowSelectedIcon?: boolean;\n} & SelectPrimitive.SelectProps;\n\n/**\n *\n * Reference:\n * https://github.com/shadcn-ui/ui/discussions/638\n * https://github.com/radix-ui/primitives/discussions/2645#discussioncomment-8343397\n *\n * @export\n * @param {(Partial<ControllerRenderProps> & {\n *   FormControlComponent?: typeof FormControl;\n * })} {\n *   value: initialValue,\n *   onChange,\n *   FormControlComponent,\n * }\n * @return {*}\n */\nexport const RAGFlowSelect = forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  RAGFlowSelectProps\n>(function (\n  {\n    value: initialValue,\n    onChange,\n    FormControlComponent,\n    options = [],\n    allowClear,\n    placeholder,\n    contentProps = {},\n    // defaultValue,\n    triggerClassName,\n    onlyShowSelectedIcon = false,\n  },\n  ref,\n) {\n  const [key, setKey] = React.useState(+new Date());\n  const [value, setValue] = React.useState<string | undefined>(initialValue);\n\n  const FormControlWidget = FormControlComponent\n    ? FormControlComponent\n    : ({ children }: React.PropsWithChildren) => <div>{children}</div>;\n\n  const handleChange = useCallback(\n    (val?: string) => {\n      setValue(val);\n      onChange?.(val);\n    },\n    [onChange],\n  );\n\n  const handleReset = useCallback(() => {\n    handleChange(undefined);\n    setKey(+new Date());\n  }, [handleChange]);\n\n  useEffect(() => {\n    setValue((preValue) => {\n      if (preValue !== initialValue) {\n        return initialValue;\n      }\n      return preValue;\n    });\n  }, [initialValue]);\n\n  // The value selected in the drop-down box only displays the icon\n  const label = React.useMemo(() => {\n    let nextOptions = options;\n    if (options.some((x) => !('value' in x))) {\n      nextOptions = (options as RAGFlowSelectGroupOptionType[]).reduce<\n        RAGFlowSelectOptionType[]\n      >((pre, cur) => {\n        return pre.concat(cur?.options ?? []);\n      }, []);\n    }\n\n    const option = (nextOptions as RAGFlowSelectOptionType[]).find(\n      (x) => x.value === value,\n    );\n\n    return onlyShowSelectedIcon ? option?.icon : option?.label;\n  }, [onlyShowSelectedIcon, options, value]);\n\n  return (\n    <Select onValueChange={handleChange} value={value} key={key}>\n      <FormControlWidget>\n        <SelectTrigger\n          value={value}\n          onReset={handleReset}\n          allowClear={allowClear}\n          ref={ref}\n          className={triggerClassName}\n        >\n          <SelectValue placeholder={placeholder}>{label}</SelectValue>\n        </SelectTrigger>\n      </FormControlWidget>\n      <SelectContent {...contentProps}>\n        {options.map((o, idx) => {\n          if ('value' in o) {\n            return (\n              <SelectItem\n                value={o.value as RAGFlowSelectOptionType['value']}\n                key={o.value}\n                disabled={o.disabled}\n              >\n                <div className=\"flex items-center gap-1\">\n                  {o.icon}\n                  {o.label}\n                </div>\n              </SelectItem>\n            );\n          }\n\n          return (\n            <SelectGroup key={idx}>\n              <SelectLabel className=\"pl-2\">{o.label}</SelectLabel>\n              {o.options.map((x) => (\n                <SelectItem value={x.value} key={x.value} disabled={x.disabled}>\n                  {x.label}\n                </SelectItem>\n              ))}\n            </SelectGroup>\n          );\n        })}\n      </SelectContent>\n    </Select>\n  );\n});\n\nRAGFlowSelect.displayName = 'RAGFlowSelect';\n","import { KnowledgeRouteKey } from '@/constants/knowledge';\n\nexport const routeMap = {\n  [KnowledgeRouteKey.Dataset]: 'Dataset',\n  [KnowledgeRouteKey.Testing]: 'Retrieval testing',\n  [KnowledgeRouteKey.Configuration]: 'Configuration',\n};\n\nexport enum KnowledgeDatasetRouteKey {\n  Chunk = 'chunk',\n  File = 'file',\n}\n\nexport const datasetRouteMap = {\n  [KnowledgeDatasetRouteKey.Chunk]: 'Chunk',\n  [KnowledgeDatasetRouteKey.File]: 'File Upload',\n};\n\nexport * from '@/constants/knowledge';\n\nexport const TagRenameId = 'tagRename';\n","import { ReactNode } from 'react';\n\ntype TopTitleProps = {\n  title: ReactNode;\n  description: ReactNode;\n};\n\nexport function TopTitle({ title, description }: TopTitleProps) {\n  return (\n    <div className=\"pb-5\">\n      <div className=\"text-2xl font-semibold\">{title}</div>\n      <p className=\"text-text-sub-title pt-2\">{description}</p>\n    </div>\n  );\n}\n","import * as TabsPrimitive from '@radix-ui/react-tabs';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn('flex flex-col gap-2', className)}\n      {...props}\n    />\n  );\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        'bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn('flex-1 outline-none', className)}\n      {...props}\n    />\n  );\n}\n\nexport { Tabs, TabsContent, TabsList, TabsTrigger };\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { SliderInputFormField } from './slider-input-form-field';\n\nexport function PageRankFormField() {\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  return (\n    <SliderInputFormField\n      name={'pagerank'}\n      label={t('pageRank')}\n      tooltip={t('pageRankTip')}\n      defaultValue={0}\n      max={100}\n      min={0}\n    ></SliderInputFormField>\n  );\n}\n\nexport default PageRankFormField;\n","import { FormContainer, FormContainerProps } from '@/components/form-container';\nimport { cn } from '@/lib/utils';\nimport { PropsWithChildren } from 'react';\n\nexport function ConfigurationFormContainer({\n  children,\n  className,\n}: FormContainerProps) {\n  return (\n    <FormContainer className={cn('p-10', className)}>{children}</FormContainer>\n  );\n}\n\nexport function MainContainer({ children }: PropsWithChildren) {\n  return <section className=\"space-y-5\">{children}</section>;\n}\n","import { SliderInputFormField } from '@/components/slider-input-form-field';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { MultiSelect } from '@/components/ui/multi-select';\nimport { useFetchKnowledgeList } from '@/hooks/knowledge-hooks';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Avatar, Flex, Form, InputNumber, Select, Slider, Space } from 'antd';\nimport DOMPurify from 'dompurify';\nimport { useFormContext, useWatch } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\n\nexport const TagSetItem = () => {\n  const { t } = useTranslation();\n  const form = useFormContext();\n\n  const { list: knowledgeList } = useFetchKnowledgeList(true);\n\n  const knowledgeOptions = knowledgeList\n    .filter((x) => x.parser_id === 'tag')\n    .map((x) => ({\n      label: x.name,\n      value: x.id,\n      icon: () => (\n        <Space>\n          <Avatar size={20} icon={<UserOutlined />} src={x.avatar} />\n          {x.name}\n        </Space>\n      ),\n    }));\n\n  return (\n    <FormField\n      control={form.control}\n      name=\"parser_config.tag_kb_ids\"\n      render={({ field }) => (\n        <FormItem className=\" items-center space-y-0 \">\n          <div className=\"flex items-center\">\n            <FormLabel\n              className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n              tooltip={\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: DOMPurify.sanitize(\n                      t('knowledgeConfiguration.tagSetTip'),\n                    ),\n                  }}\n                ></div>\n              }\n            >\n              {t('knowledgeConfiguration.tagSet')}\n            </FormLabel>\n            <div className=\"w-3/4\">\n              <FormControl>\n                <MultiSelect\n                  options={knowledgeOptions}\n                  onValueChange={field.onChange}\n                  placeholder={t('chat.knowledgeBasesMessage')}\n                  variant=\"inverted\"\n                  maxCount={0}\n                  {...field}\n                />\n              </FormControl>\n            </div>\n          </div>\n          <div className=\"flex pt-1\">\n            <div className=\"w-1/4\"></div>\n            <FormMessage />\n          </div>\n        </FormItem>\n      )}\n    />\n  );\n\n  return (\n    <Form.Item\n      label={t('knowledgeConfiguration.tagSet')}\n      name={['parser_config', 'tag_kb_ids']}\n      tooltip={\n        <div\n          dangerouslySetInnerHTML={{\n            __html: DOMPurify.sanitize(t('knowledgeConfiguration.tagSetTip')),\n          }}\n        ></div>\n      }\n      rules={[\n        {\n          message: t('chat.knowledgeBasesMessage'),\n          type: 'array',\n        },\n      ]}\n    >\n      <Select\n        mode=\"multiple\"\n        options={knowledgeOptions}\n        placeholder={t('chat.knowledgeBasesMessage')}\n      ></Select>\n    </Form.Item>\n  );\n};\n\nexport const TopNTagsItem = () => {\n  const { t } = useTranslation();\n\n  return (\n    <SliderInputFormField\n      name={'parser_config.topn_tags'}\n      label={t('knowledgeConfiguration.topnTags')}\n      max={10}\n      min={1}\n      defaultValue={3}\n    ></SliderInputFormField>\n  );\n\n  return (\n    <Form.Item label={t('knowledgeConfiguration.topnTags')}>\n      <Flex gap={20} align=\"center\">\n        <Flex flex={1}>\n          <Form.Item\n            name={['parser_config', 'topn_tags']}\n            noStyle\n            initialValue={3}\n          >\n            <Slider max={10} min={1} style={{ width: '100%' }} />\n          </Form.Item>\n        </Flex>\n        <Form.Item name={['parser_config', 'topn_tags']} noStyle>\n          <InputNumber max={10} min={1} />\n        </Form.Item>\n      </Flex>\n    </Form.Item>\n  );\n};\n\nexport function TagItems() {\n  const form = useFormContext();\n  const ids: string[] = useWatch({\n    control: form.control,\n    name: 'parser_config.tag_kb_ids',\n  });\n\n  return (\n    <>\n      <TagSetItem></TagSetItem>\n      {Array.isArray(ids) && ids.length > 0 && <TopNTagsItem></TopNTagsItem>}\n    </>\n  );\n}\n","import { LlmModelType } from '@/constants/knowledge';\nimport { useSetModalState } from '@/hooks/common-hooks';\n\nimport { useSelectLlmOptionsByModelType } from '@/hooks/llm-hooks';\nimport { useNavigateToDataset } from '@/hooks/route-hook';\nimport {\n  useFetchKnowledgeBaseConfiguration,\n  useUpdateKnowledge,\n} from '@/hooks/use-knowledge-request';\nimport { useSelectParserList } from '@/hooks/user-setting-hooks';\nimport {\n  getBase64FromUploadFileList,\n  getUploadFileListFromBase64,\n} from '@/utils/file-util';\nimport { useIsFetching } from '@tanstack/react-query';\nimport { Form, UploadFile } from 'antd';\nimport { FormInstance } from 'antd/lib';\nimport { pick } from 'lodash';\nimport { useCallback, useEffect, useState } from 'react';\nimport { UseFormReturn } from 'react-hook-form';\nimport { z } from 'zod';\nimport { formSchema } from './form-schema';\n\nexport const useSubmitKnowledgeConfiguration = (form: FormInstance) => {\n  const { saveKnowledgeConfiguration, loading } = useUpdateKnowledge();\n  const navigateToDataset = useNavigateToDataset();\n\n  const submitKnowledgeConfiguration = useCallback(async () => {\n    const values = await form.validateFields();\n    const avatar = await getBase64FromUploadFileList(values.avatar);\n    saveKnowledgeConfiguration({\n      ...values,\n      avatar,\n    });\n    navigateToDataset();\n  }, [saveKnowledgeConfiguration, form, navigateToDataset]);\n\n  return {\n    submitKnowledgeConfiguration,\n    submitLoading: loading,\n    navigateToDataset,\n  };\n};\n\n// The value that does not need to be displayed in the analysis method Select\nconst HiddenFields = ['email', 'picture', 'audio'];\n\nexport function useSelectChunkMethodList() {\n  const parserList = useSelectParserList();\n\n  return parserList.filter((x) => !HiddenFields.some((y) => y === x.value));\n}\n\nexport function useSelectEmbeddingModelOptions() {\n  const allOptions = useSelectLlmOptionsByModelType();\n  return allOptions[LlmModelType.Embedding];\n}\n\nexport function useHasParsedDocument() {\n  const { data: knowledgeDetails } = useFetchKnowledgeBaseConfiguration();\n  return knowledgeDetails.chunk_num > 0;\n}\n\nexport const useFetchKnowledgeConfigurationOnMount = (\n  form: UseFormReturn<z.infer<typeof formSchema>, any, undefined>,\n) => {\n  const { data: knowledgeDetails } = useFetchKnowledgeBaseConfiguration();\n\n  useEffect(() => {\n    const fileList: UploadFile[] = getUploadFileListFromBase64(\n      knowledgeDetails.avatar,\n    );\n\n    console.log('🚀 ~ useEffect ~ fileList:', fileList);\n    form.reset({\n      ...pick(knowledgeDetails, [\n        'description',\n        'name',\n        'permission',\n        'embd_id',\n        'parser_id',\n        'language',\n        'parser_config',\n        'pagerank',\n      ]),\n      avatar: fileList,\n    });\n  }, [form, knowledgeDetails]);\n\n  return knowledgeDetails;\n};\n\nexport const useSelectKnowledgeDetailsLoading = () =>\n  useIsFetching({ queryKey: ['fetchKnowledgeDetail'] }) > 0;\n\nexport const useHandleChunkMethodChange = () => {\n  const [form] = Form.useForm();\n  const chunkMethod = Form.useWatch('parser_id', form);\n\n  useEffect(() => {\n    console.log('🚀 ~ useHandleChunkMethodChange ~ chunkMethod:', chunkMethod);\n  }, [chunkMethod]);\n\n  return { form, chunkMethod };\n};\n\nexport const useRenameKnowledgeTag = () => {\n  const [tag, setTag] = useState<string>('');\n  const {\n    visible: tagRenameVisible,\n    hideModal: hideTagRenameModal,\n    showModal: showFileRenameModal,\n  } = useSetModalState();\n\n  const handleShowTagRenameModal = useCallback(\n    (record: string) => {\n      setTag(record);\n      showFileRenameModal();\n    },\n    [showFileRenameModal],\n  );\n\n  return {\n    initialName: tag,\n    tagRenameVisible,\n    hideTagRenameModal,\n    showTagRenameModal: handleShowTagRenameModal,\n  };\n};\n","import {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { RAGFlowSelect } from '@/components/ui/select';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useFormContext } from 'react-hook-form';\nimport {\n  useHasParsedDocument,\n  useSelectChunkMethodList,\n  useSelectEmbeddingModelOptions,\n} from '../hooks';\n\nexport function ChunkMethodItem() {\n  const { t } = useTranslate('knowledgeConfiguration');\n  const form = useFormContext();\n  // const handleChunkMethodSelectChange = useHandleChunkMethodSelectChange(form);\n  const parserList = useSelectChunkMethodList();\n\n  return (\n    <FormField\n      control={form.control}\n      name={'parser_id'}\n      render={({ field }) => (\n        <FormItem className=\" items-center space-y-0 \">\n          <div className=\"flex items-center\">\n            <FormLabel\n              tooltip={t('chunkMethodTip')}\n              className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n            >\n              {t('chunkMethod')}\n            </FormLabel>\n            <div className=\"w-3/4 \">\n              <FormControl>\n                <RAGFlowSelect\n                  {...field}\n                  options={parserList}\n                  placeholder={t('chunkMethodPlaceholder')}\n                  // onChange={handleChunkMethodSelectChange}\n                />\n              </FormControl>\n            </div>\n          </div>\n          <div className=\"flex pt-1\">\n            <div className=\"w-1/4\"></div>\n            <FormMessage />\n          </div>\n        </FormItem>\n      )}\n    />\n  );\n}\n\nexport function EmbeddingModelItem() {\n  const { t } = useTranslate('knowledgeConfiguration');\n  const form = useFormContext();\n  const embeddingModelOptions = useSelectEmbeddingModelOptions();\n  const disabled = useHasParsedDocument();\n\n  return (\n    <FormField\n      control={form.control}\n      name={'embd_id'}\n      render={({ field }) => (\n        <FormItem className=\" items-center space-y-0 \">\n          <div className=\"flex items-center\">\n            <FormLabel\n              tooltip={t('embeddingModelTip')}\n              className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n            >\n              {t('embeddingModel')}\n            </FormLabel>\n            <div className=\"w-3/4\">\n              <FormControl>\n                <RAGFlowSelect\n                  {...field}\n                  options={embeddingModelOptions}\n                  disabled={disabled}\n                  placeholder={t('embeddingModelPlaceholder')}\n                />\n              </FormControl>\n            </div>\n          </div>\n          <div className=\"flex pt-1\">\n            <div className=\"w-1/4\"></div>\n            <FormMessage />\n          </div>\n        </FormItem>\n      )}\n    />\n  );\n}\n","import { Button } from '@/components/ui/button';\nimport { Loader2Icon } from 'lucide-react';\nimport { useFormContext, useWatch } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\n\nimport { DocumentParserType } from '@/constants/knowledge';\nimport { useUpdateKnowledge } from '@/hooks/knowledge-hooks';\nimport { useMemo } from 'react';\nimport { useParams } from 'umi';\nimport { AudioConfiguration } from './configuration/audio';\nimport { BookConfiguration } from './configuration/book';\nimport { EmailConfiguration } from './configuration/email';\nimport { KnowledgeGraphConfiguration } from './configuration/knowledge-graph';\nimport { LawsConfiguration } from './configuration/laws';\nimport { ManualConfiguration } from './configuration/manual';\nimport { NaiveConfiguration } from './configuration/naive';\nimport { OneConfiguration } from './configuration/one';\nimport { PaperConfiguration } from './configuration/paper';\nimport { PictureConfiguration } from './configuration/picture';\nimport { PresentationConfiguration } from './configuration/presentation';\nimport { QAConfiguration } from './configuration/qa';\nimport { ResumeConfiguration } from './configuration/resume';\nimport { TableConfiguration } from './configuration/table';\nimport { TagConfiguration } from './configuration/tag';\n\nconst ConfigurationComponentMap = {\n  [DocumentParserType.Naive]: NaiveConfiguration,\n  [DocumentParserType.Qa]: QAConfiguration,\n  [DocumentParserType.Resume]: ResumeConfiguration,\n  [DocumentParserType.Manual]: ManualConfiguration,\n  [DocumentParserType.Table]: TableConfiguration,\n  [DocumentParserType.Paper]: PaperConfiguration,\n  [DocumentParserType.Book]: BookConfiguration,\n  [DocumentParserType.Laws]: LawsConfiguration,\n  [DocumentParserType.Presentation]: PresentationConfiguration,\n  [DocumentParserType.Picture]: PictureConfiguration,\n  [DocumentParserType.One]: OneConfiguration,\n  [DocumentParserType.Audio]: AudioConfiguration,\n  [DocumentParserType.Email]: EmailConfiguration,\n  [DocumentParserType.Tag]: TagConfiguration,\n  [DocumentParserType.KnowledgeGraph]: KnowledgeGraphConfiguration,\n};\n\nfunction EmptyComponent() {\n  return <div></div>;\n}\n\nexport function ChunkMethodForm() {\n  const form = useFormContext();\n  const { t } = useTranslation();\n  // const [submitLoading, setSubmitLoading] = useState(false); // submit button loading\n  const { id: kb_id } = useParams();\n\n  const { saveKnowledgeConfiguration, loading: submitLoading } =\n    useUpdateKnowledge();\n\n  const finalParserId: DocumentParserType = useWatch({\n    control: form.control,\n    name: 'parser_id',\n  });\n\n  const ConfigurationComponent = useMemo(() => {\n    return finalParserId\n      ? ConfigurationComponentMap[finalParserId]\n      : EmptyComponent;\n  }, [finalParserId]);\n\n  return (\n    <>\n      <section className=\"overflow-auto max-h-[76vh]\">\n        <ConfigurationComponent></ConfigurationComponent>\n      </section>\n      <div className=\"text-right pt-4\">\n        <Button\n          disabled={submitLoading}\n          onClick={() => {\n            (async () => {\n              try {\n                let beValid = await form.formControl.trigger();\n                console.log('user chunk form: ', form);\n\n                if (beValid) {\n                  // setSubmitLoading(true);\n                  let postData = form.formState.values;\n                  delete postData['avatar']; // has submitted in first form general\n\n                  saveKnowledgeConfiguration({\n                    ...postData,\n                    kb_id,\n                  });\n                }\n              } catch (e) {\n                console.log(e);\n              } finally {\n                // setSubmitLoading(false);\n              }\n            })();\n          }}\n        >\n          {submitLoading && <Loader2Icon className=\"animate-spin\" />}\n          {t('common.submit')}\n        </Button>\n      </div>\n    </>\n  );\n}\n","import {\n  AutoKeywordsFormField,\n  AutoQuestionsFormField,\n} from '@/components/auto-keywords-form-field';\nimport { DelimiterFormField } from '@/components/delimiter-form-field';\nimport { ExcelToHtmlFormField } from '@/components/excel-to-html-form-field';\nimport { LayoutRecognizeFormField } from '@/components/layout-recognize-form-field';\nimport { MaxTokenNumberFormField } from '@/components/max-token-number-from-field';\nimport PageRankFormField from '@/components/page-rank-form-field';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-form-fields';\nimport RaptorFormFields from '@/components/parse-configuration/raptor-form-fields';\nimport {\n  ConfigurationFormContainer,\n  MainContainer,\n} from '../configuration-form-container';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function NaiveConfiguration() {\n  return (\n    <MainContainer>\n      <ConfigurationFormContainer>\n        <ChunkMethodItem></ChunkMethodItem>\n        <LayoutRecognizeFormField></LayoutRecognizeFormField>\n        <EmbeddingModelItem></EmbeddingModelItem>\n        <MaxTokenNumberFormField></MaxTokenNumberFormField>\n        <DelimiterFormField></DelimiterFormField>\n      </ConfigurationFormContainer>\n      <ConfigurationFormContainer>\n        <PageRankFormField></PageRankFormField>\n        <AutoKeywordsFormField></AutoKeywordsFormField>\n        <AutoQuestionsFormField></AutoQuestionsFormField>\n        <ExcelToHtmlFormField></ExcelToHtmlFormField>\n        <TagItems></TagItems>\n      </ConfigurationFormContainer>\n      <ConfigurationFormContainer>\n        <RaptorFormFields></RaptorFormFields>\n      </ConfigurationFormContainer>\n      <GraphRagItems></GraphRagItems>\n    </MainContainer>\n  );\n}\n","import PageRankFormField from '@/components/page-rank-form-field';\nimport { ConfigurationFormContainer } from '../configuration-form-container';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function QAConfiguration() {\n  return (\n    <ConfigurationFormContainer>\n      <ChunkMethodItem></ChunkMethodItem>\n      <EmbeddingModelItem></EmbeddingModelItem>\n\n      <PageRankFormField></PageRankFormField>\n\n      <TagItems></TagItems>\n    </ConfigurationFormContainer>\n  );\n}\n","import PageRankFormField from '@/components/page-rank-form-field';\nimport { ConfigurationFormContainer } from '../configuration-form-container';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function ResumeConfiguration() {\n  return (\n    <ConfigurationFormContainer>\n      <ChunkMethodItem></ChunkMethodItem>\n      <EmbeddingModelItem></EmbeddingModelItem>\n\n      <PageRankFormField></PageRankFormField>\n\n      <TagItems></TagItems>\n    </ConfigurationFormContainer>\n  );\n}\n","import {\n  AutoKeywordsFormField,\n  AutoQuestionsFormField,\n} from '@/components/auto-keywords-form-field';\nimport { LayoutRecognizeFormField } from '@/components/layout-recognize-form-field';\nimport PageRankFormField from '@/components/page-rank-form-field';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-form-fields';\nimport RaptorFormFields from '@/components/parse-configuration/raptor-form-fields';\nimport {\n  ConfigurationFormContainer,\n  MainContainer,\n} from '../configuration-form-container';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function ManualConfiguration() {\n  return (\n    <MainContainer>\n      <ConfigurationFormContainer>\n        <ChunkMethodItem></ChunkMethodItem>\n        <LayoutRecognizeFormField></LayoutRecognizeFormField>\n        <EmbeddingModelItem></EmbeddingModelItem>\n\n        <PageRankFormField></PageRankFormField>\n      </ConfigurationFormContainer>\n\n      <ConfigurationFormContainer>\n        <AutoKeywordsFormField></AutoKeywordsFormField>\n        <AutoQuestionsFormField></AutoQuestionsFormField>\n      </ConfigurationFormContainer>\n      <ConfigurationFormContainer>\n        <RaptorFormFields></RaptorFormFields>\n      </ConfigurationFormContainer>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <TagItems></TagItems>\n    </MainContainer>\n  );\n}\n","import PageRankFormField from '@/components/page-rank-form-field';\nimport { ConfigurationFormContainer } from '../configuration-form-container';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function TableConfiguration() {\n  return (\n    <ConfigurationFormContainer>\n      <ChunkMethodItem></ChunkMethodItem>\n      <EmbeddingModelItem></EmbeddingModelItem>\n\n      <PageRankFormField></PageRankFormField>\n    </ConfigurationFormContainer>\n  );\n}\n","import {\n  AutoKeywordsFormField,\n  AutoQuestionsFormField,\n} from '@/components/auto-keywords-form-field';\nimport { LayoutRecognizeFormField } from '@/components/layout-recognize-form-field';\nimport PageRankFormField from '@/components/page-rank-form-field';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-form-fields';\nimport RaptorFormFields from '@/components/parse-configuration/raptor-form-fields';\nimport {\n  ConfigurationFormContainer,\n  MainContainer,\n} from '../configuration-form-container';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function PaperConfiguration() {\n  return (\n    <MainContainer>\n      <ConfigurationFormContainer>\n        <ChunkMethodItem></ChunkMethodItem>\n        <LayoutRecognizeFormField></LayoutRecognizeFormField>\n        <EmbeddingModelItem></EmbeddingModelItem>\n\n        <PageRankFormField></PageRankFormField>\n      </ConfigurationFormContainer>\n\n      <ConfigurationFormContainer>\n        <AutoKeywordsFormField></AutoKeywordsFormField>\n        <AutoQuestionsFormField></AutoQuestionsFormField>\n      </ConfigurationFormContainer>\n\n      <ConfigurationFormContainer>\n        <RaptorFormFields></RaptorFormFields>\n      </ConfigurationFormContainer>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <ConfigurationFormContainer>\n        <TagItems></TagItems>\n      </ConfigurationFormContainer>\n    </MainContainer>\n  );\n}\n","import {\n  AutoKeywordsFormField,\n  AutoQuestionsFormField,\n} from '@/components/auto-keywords-form-field';\nimport { LayoutRecognizeFormField } from '@/components/layout-recognize-form-field';\nimport PageRankFormField from '@/components/page-rank-form-field';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-form-fields';\nimport RaptorFormFields from '@/components/parse-configuration/raptor-form-fields';\nimport {\n  ConfigurationFormContainer,\n  MainContainer,\n} from '../configuration-form-container';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function BookConfiguration() {\n  return (\n    <MainContainer>\n      <ConfigurationFormContainer>\n        <ChunkMethodItem></ChunkMethodItem>\n        <LayoutRecognizeFormField></LayoutRecognizeFormField>\n        <EmbeddingModelItem></EmbeddingModelItem>\n\n        <PageRankFormField></PageRankFormField>\n      </ConfigurationFormContainer>\n\n      <ConfigurationFormContainer>\n        <AutoKeywordsFormField></AutoKeywordsFormField>\n        <AutoQuestionsFormField></AutoQuestionsFormField>\n      </ConfigurationFormContainer>\n\n      <ConfigurationFormContainer>\n        <RaptorFormFields></RaptorFormFields>\n      </ConfigurationFormContainer>\n\n      <GraphRagItems marginBottom className=\"p-10\"></GraphRagItems>\n\n      <ConfigurationFormContainer>\n        <TagItems></TagItems>\n      </ConfigurationFormContainer>\n    </MainContainer>\n  );\n}\n","import {\n  AutoKeywordsFormField,\n  AutoQuestionsFormField,\n} from '@/components/auto-keywords-form-field';\nimport { LayoutRecognizeFormField } from '@/components/layout-recognize-form-field';\nimport PageRankFormField from '@/components/page-rank-form-field';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-form-fields';\nimport RaptorFormFields from '@/components/parse-configuration/raptor-form-fields';\nimport {\n  ConfigurationFormContainer,\n  MainContainer,\n} from '../configuration-form-container';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function LawsConfiguration() {\n  return (\n    <MainContainer>\n      <ConfigurationFormContainer>\n        <ChunkMethodItem></ChunkMethodItem>\n        <LayoutRecognizeFormField></LayoutRecognizeFormField>\n        <EmbeddingModelItem></EmbeddingModelItem>\n\n        <PageRankFormField></PageRankFormField>\n      </ConfigurationFormContainer>\n\n      <ConfigurationFormContainer>\n        <AutoKeywordsFormField></AutoKeywordsFormField>\n        <AutoQuestionsFormField></AutoQuestionsFormField>\n      </ConfigurationFormContainer>\n\n      <ConfigurationFormContainer>\n        <RaptorFormFields></RaptorFormFields>\n      </ConfigurationFormContainer>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <ConfigurationFormContainer>\n        <TagItems></TagItems>\n      </ConfigurationFormContainer>\n    </MainContainer>\n  );\n}\n","import {\n  AutoKeywordsFormField,\n  AutoQuestionsFormField,\n} from '@/components/auto-keywords-form-field';\nimport { LayoutRecognizeFormField } from '@/components/layout-recognize-form-field';\nimport PageRankFormField from '@/components/page-rank-form-field';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-form-fields';\nimport RaptorFormFields from '@/components/parse-configuration/raptor-form-fields';\nimport {\n  ConfigurationFormContainer,\n  MainContainer,\n} from '../configuration-form-container';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function PresentationConfiguration() {\n  return (\n    <MainContainer>\n      <ConfigurationFormContainer>\n        <ChunkMethodItem></ChunkMethodItem>\n        <LayoutRecognizeFormField></LayoutRecognizeFormField>\n        <EmbeddingModelItem></EmbeddingModelItem>\n\n        <PageRankFormField></PageRankFormField>\n      </ConfigurationFormContainer>\n\n      <ConfigurationFormContainer>\n        <AutoKeywordsFormField></AutoKeywordsFormField>\n        <AutoQuestionsFormField></AutoQuestionsFormField>\n      </ConfigurationFormContainer>\n\n      <ConfigurationFormContainer>\n        <RaptorFormFields></RaptorFormFields>\n      </ConfigurationFormContainer>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n      <ConfigurationFormContainer>\n        <TagItems></TagItems>\n      </ConfigurationFormContainer>\n    </MainContainer>\n  );\n}\n","import {\n  AutoKeywordsFormField,\n  AutoQuestionsFormField,\n} from '@/components/auto-keywords-form-field';\nimport PageRankFormField from '@/components/page-rank-form-field';\nimport { ConfigurationFormContainer } from '../configuration-form-container';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function PictureConfiguration() {\n  return (\n    <ConfigurationFormContainer>\n      <ChunkMethodItem></ChunkMethodItem>\n      <EmbeddingModelItem></EmbeddingModelItem>\n\n      <PageRankFormField></PageRankFormField>\n\n      <>\n        <AutoKeywordsFormField></AutoKeywordsFormField>\n        <AutoQuestionsFormField></AutoQuestionsFormField>\n      </>\n      <TagItems></TagItems>\n    </ConfigurationFormContainer>\n  );\n}\n","import {\n  AutoKeywordsFormField,\n  AutoQuestionsFormField,\n} from '@/components/auto-keywords-form-field';\nimport { LayoutRecognizeFormField } from '@/components/layout-recognize-form-field';\nimport PageRankFormField from '@/components/page-rank-form-field';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-form-fields';\nimport { ConfigurationFormContainer } from '../configuration-form-container';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function OneConfiguration() {\n  return (\n    <ConfigurationFormContainer>\n      <ChunkMethodItem></ChunkMethodItem>\n      <LayoutRecognizeFormField></LayoutRecognizeFormField>\n      <EmbeddingModelItem></EmbeddingModelItem>\n\n      <PageRankFormField></PageRankFormField>\n\n      <>\n        <AutoKeywordsFormField></AutoKeywordsFormField>\n        <AutoQuestionsFormField></AutoQuestionsFormField>\n      </>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <TagItems></TagItems>\n    </ConfigurationFormContainer>\n  );\n}\n","import {\n  AutoKeywordsFormField,\n  AutoQuestionsFormField,\n} from '@/components/auto-keywords-form-field';\nimport PageRankFormField from '@/components/page-rank-form-field';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-form-fields';\nimport RaptorFormFields from '@/components/parse-configuration/raptor-form-fields';\nimport { ConfigurationFormContainer } from '../configuration-form-container';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function AudioConfiguration() {\n  return (\n    <ConfigurationFormContainer>\n      <ChunkMethodItem></ChunkMethodItem>\n      <EmbeddingModelItem></EmbeddingModelItem>\n\n      <PageRankFormField></PageRankFormField>\n\n      <>\n        <AutoKeywordsFormField></AutoKeywordsFormField>\n        <AutoQuestionsFormField></AutoQuestionsFormField>\n      </>\n\n      <RaptorFormFields></RaptorFormFields>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <TagItems></TagItems>\n    </ConfigurationFormContainer>\n  );\n}\n","import {\n  AutoKeywordsFormField,\n  AutoQuestionsFormField,\n} from '@/components/auto-keywords-form-field';\nimport PageRankFormField from '@/components/page-rank-form-field';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-form-fields';\nimport RaptorFormFields from '@/components/parse-configuration/raptor-form-fields';\nimport { ConfigurationFormContainer } from '../configuration-form-container';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function EmailConfiguration() {\n  return (\n    <ConfigurationFormContainer>\n      <ChunkMethodItem></ChunkMethodItem>\n      <EmbeddingModelItem></EmbeddingModelItem>\n\n      <PageRankFormField></PageRankFormField>\n\n      <>\n        <AutoKeywordsFormField></AutoKeywordsFormField>\n        <AutoQuestionsFormField></AutoQuestionsFormField>\n      </>\n\n      <RaptorFormFields></RaptorFormFields>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <TagItems></TagItems>\n    </ConfigurationFormContainer>\n  );\n}\n","import PageRankFormField from '@/components/page-rank-form-field';\nimport { ConfigurationFormContainer } from '../configuration-form-container';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function TagConfiguration() {\n  return (\n    <ConfigurationFormContainer>\n      <ChunkMethodItem></ChunkMethodItem>\n      <EmbeddingModelItem></EmbeddingModelItem>\n\n      <PageRankFormField></PageRankFormField>\n    </ConfigurationFormContainer>\n  );\n}\n","import { DelimiterFormField } from '@/components/delimiter-form-field';\nimport { EntityTypesFormField } from '@/components/entity-types-form-field';\nimport { MaxTokenNumberFormField } from '@/components/max-token-number-from-field';\nimport PageRankFormField from '@/components/page-rank-form-field';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function KnowledgeGraphConfiguration() {\n  return (\n    <>\n      <ChunkMethodItem></ChunkMethodItem>\n      <EmbeddingModelItem></EmbeddingModelItem>\n\n      <PageRankFormField></PageRankFormField>\n\n      <>\n        <EntityTypesFormField></EntityTypesFormField>\n        <MaxTokenNumberFormField max={8192 * 2}></MaxTokenNumberFormField>\n        <DelimiterFormField></DelimiterFormField>\n      </>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tags\":\"tags___I2DgG\",\"preset\":\"preset___EB4Eo\",\"left\":\"left___cE3J7\",\"right\":\"right___Gq2Ve\",\"configurationWrapper\":\"configurationWrapper___WIdWO\",\"buttonWrapper\":\"buttonWrapper___vwd59\",\"variableSlider\":\"variableSlider___fBAqp\",\"categoryPanelWrapper\":\"categoryPanelWrapper___p126B\",\"topTitle\":\"topTitle___Jesqr\",\"imageRow\":\"imageRow___Km77j\",\"image\":\"image___vIgxT\"};","'use client';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport { z } from 'zod';\n\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { useRenameTag } from '@/hooks/knowledge-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { TagRenameId } from '@/pages/add-knowledge/constant';\nimport { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport function RenameForm({\n  initialName,\n  hideModal,\n}: IModalProps<any> & { initialName: string }) {\n  const { t } = useTranslation();\n  const FormSchema = z.object({\n    name: z\n      .string()\n      .min(1, {\n        message: t('common.namePlaceholder'),\n      })\n      .trim(),\n  });\n\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      name: '',\n    },\n  });\n\n  const { renameTag } = useRenameTag();\n\n  async function onSubmit(data: z.infer<typeof FormSchema>) {\n    const ret = await renameTag({ fromTag: initialName, toTag: data.name });\n    if (ret) {\n      hideModal?.();\n    }\n  }\n\n  useEffect(() => {\n    form.setValue('name', initialName);\n  }, [form, initialName]);\n\n  return (\n    <Form {...form}>\n      <form\n        onSubmit={form.handleSubmit(onSubmit)}\n        className=\"space-y-6\"\n        id={TagRenameId}\n      >\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('common.name')}</FormLabel>\n              <FormControl>\n                <Input\n                  placeholder={t('common.namePlaceholder')}\n                  {...field}\n                  autoComplete=\"off\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n      </form>\n    </Form>\n  );\n}\n","import {\n  Dialog,\n  DialogContent,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { LoadingButton } from '@/components/ui/loading-button';\nimport { useTagIsRenaming } from '@/hooks/knowledge-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { TagRenameId } from '@/pages/add-knowledge/constant';\nimport { useTranslation } from 'react-i18next';\nimport { RenameForm } from './rename-form';\n\nexport function RenameDialog({\n  hideModal,\n  initialName,\n}: IModalProps<any> & { initialName: string }) {\n  const { t } = useTranslation();\n  const loading = useTagIsRenaming();\n\n  return (\n    <Dialog open onOpenChange={hideModal}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>{t('common.rename')}</DialogTitle>\n        </DialogHeader>\n        <RenameForm\n          initialName={initialName}\n          hideModal={hideModal}\n        ></RenameForm>\n        <DialogFooter>\n          <LoadingButton type=\"submit\" form={TagRenameId} loading={loading}>\n            {t('common.save')}\n          </LoadingButton>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","'use client';\n\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport { ArrowUpDown, Pencil, Trash2 } from 'lucide-react';\nimport * as React from 'react';\n\nimport { ConfirmDeleteDialog } from '@/components/confirm-delete-dialog';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Input } from '@/components/ui/input';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from '@/components/ui/tooltip';\nimport { useDeleteTag, useFetchTagList } from '@/hooks/knowledge-hooks';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useRenameKnowledgeTag } from '../hooks';\nimport { RenameDialog } from './rename-dialog';\n\nexport type ITag = {\n  tag: string;\n  frequency: number;\n};\n\nexport function TagTable() {\n  const { t } = useTranslation();\n  const { list } = useFetchTagList();\n  const [tagList, setTagList] = useState<ITag[]>([]);\n\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    [],\n  );\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = useState({});\n\n  const { deleteTag } = useDeleteTag();\n\n  useEffect(() => {\n    setTagList(list.map((x) => ({ tag: x[0], frequency: x[1] })));\n  }, [list]);\n\n  const handleDeleteTag = useCallback(\n    (tags: string[]) => () => {\n      deleteTag(tags);\n    },\n    [deleteTag],\n  );\n\n  const {\n    showTagRenameModal,\n    hideTagRenameModal,\n    tagRenameVisible,\n    initialName,\n  } = useRenameKnowledgeTag();\n\n  const columns: ColumnDef<ITag>[] = [\n    {\n      id: 'select',\n      header: ({ table }) => (\n        <Checkbox\n          checked={\n            table.getIsAllPageRowsSelected() ||\n            (table.getIsSomePageRowsSelected() && 'indeterminate')\n          }\n          onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n          aria-label=\"Select all\"\n        />\n      ),\n      cell: ({ row }) => (\n        <Checkbox\n          checked={row.getIsSelected()}\n          onCheckedChange={(value) => row.toggleSelected(!!value)}\n          aria-label=\"Select row\"\n        />\n      ),\n      enableSorting: false,\n      enableHiding: false,\n    },\n    {\n      accessorKey: 'tag',\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n          >\n            {t('knowledgeConfiguration.tagName')}\n            <ArrowUpDown />\n          </Button>\n        );\n      },\n      cell: ({ row }) => {\n        const value: string = row.getValue('tag');\n        return <div>{value}</div>;\n      },\n    },\n    {\n      accessorKey: 'frequency',\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n          >\n            {t('knowledgeConfiguration.frequency')}\n            <ArrowUpDown />\n          </Button>\n        );\n      },\n      cell: ({ row }) => (\n        <div className=\"capitalize \">{row.getValue('frequency')}</div>\n      ),\n    },\n    {\n      id: 'actions',\n      enableHiding: false,\n      header: t('common.action'),\n      cell: ({ row }) => {\n        return (\n          <div className=\"flex gap-1\">\n            <Tooltip>\n              <ConfirmDeleteDialog onOk={handleDeleteTag([row.original.tag])}>\n                <TooltipTrigger asChild>\n                  <Button variant=\"ghost\" size=\"icon\">\n                    <Trash2 />\n                  </Button>\n                </TooltipTrigger>\n              </ConfirmDeleteDialog>\n              <TooltipContent>\n                <p>{t('common.delete')}</p>\n              </TooltipContent>\n            </Tooltip>\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  onClick={() => showTagRenameModal(row.original.tag)}\n                >\n                  <Pencil />\n                </Button>\n              </TooltipTrigger>\n              <TooltipContent>\n                <p>{t('common.rename')}</p>\n              </TooltipContent>\n            </Tooltip>\n          </div>\n        );\n      },\n    },\n  ];\n\n  const table = useReactTable({\n    data: tagList,\n    columns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  const selectedRowLength = table.getFilteredSelectedRowModel().rows.length;\n\n  return (\n    <TooltipProvider>\n      <div className=\"w-full\">\n        <div className=\"flex items-center justify-between py-4 \">\n          <Input\n            placeholder={t('knowledgeConfiguration.searchTags')}\n            value={(table.getColumn('tag')?.getFilterValue() as string) ?? ''}\n            onChange={(event) =>\n              table.getColumn('tag')?.setFilterValue(event.target.value)\n            }\n            className=\"w-1/2\"\n          />\n          {selectedRowLength > 0 && (\n            <ConfirmDeleteDialog\n              onOk={handleDeleteTag(\n                table\n                  .getFilteredSelectedRowModel()\n                  .rows.map((x) => x.original.tag),\n              )}\n            >\n              <Button variant=\"outline\" size=\"icon\">\n                <Trash2 />\n              </Button>\n            </ConfirmDeleteDialog>\n          )}\n        </div>\n        <div className=\"rounded-md border\">\n          <Table>\n            <TableHeader>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <TableRow key={headerGroup.id}>\n                  {headerGroup.headers.map((header) => {\n                    return (\n                      <TableHead key={header.id}>\n                        {header.isPlaceholder\n                          ? null\n                          : flexRender(\n                              header.column.columnDef.header,\n                              header.getContext(),\n                            )}\n                      </TableHead>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableHeader>\n            <TableBody>\n              {table.getRowModel().rows?.length ? (\n                table.getRowModel().rows.map((row) => (\n                  <TableRow\n                    key={row.id}\n                    data-state={row.getIsSelected() && 'selected'}\n                  >\n                    {row.getVisibleCells().map((cell) => (\n                      <TableCell key={cell.id}>\n                        {flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext(),\n                        )}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell\n                    colSpan={columns.length}\n                    className=\"h-24 text-center\"\n                  >\n                    No results.\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <div className=\"flex items-center justify-end space-x-2 py-4\">\n          <div className=\"flex-1 text-sm text-muted-foreground\">\n            {selectedRowLength} of {table.getFilteredRowModel().rows.length}{' '}\n            row(s) selected.\n          </div>\n          <div className=\"space-x-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => table.previousPage()}\n              disabled={!table.getCanPreviousPage()}\n            >\n              {t('common.previousPage')}\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => table.nextPage()}\n              disabled={!table.getCanNextPage()}\n            >\n              {t('common.nextPage')}\n            </Button>\n          </div>\n        </div>\n      </div>\n      {tagRenameVisible && (\n        <RenameDialog\n          hideModal={hideTagRenameModal}\n          initialName={initialName}\n        ></RenameDialog>\n      )}\n    </TooltipProvider>\n  );\n}\n","import { useFetchTagList } from '@/hooks/knowledge-hooks';\nimport { Chart } from '@antv/g2';\nimport { sumBy } from 'lodash';\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\n\nexport function TagWordCloud() {\n  const domRef = useRef<HTMLDivElement>(null);\n  let chartRef = useRef<Chart>();\n  const { list } = useFetchTagList();\n\n  const { list: tagList } = useMemo(() => {\n    const nextList = list.sort((a, b) => b[1] - a[1]).slice(0, 256);\n\n    return {\n      list: nextList.map((x) => ({ text: x[0], value: x[1], name: x[0] })),\n      sumValue: sumBy(nextList, (x: [string, number]) => x[1]),\n      length: nextList.length,\n    };\n  }, [list]);\n\n  const renderWordCloud = useCallback(() => {\n    if (domRef.current) {\n      chartRef.current = new Chart({ container: domRef.current });\n\n      chartRef.current.options({\n        type: 'wordCloud',\n        autoFit: true,\n        layout: {\n          fontSize: [10, 50],\n          // fontSize: (d: any) => {\n          //   if (d.value) {\n          //     return (d.value / sumValue) * 100 * (length / 10);\n          //   }\n          //   return 0;\n          // },\n        },\n        data: {\n          type: 'inline',\n          value: tagList,\n        },\n        encode: { color: 'text' },\n        legend: false,\n        tooltip: {\n          title: 'name', // title\n          items: ['value'], // data item\n        },\n      });\n\n      chartRef.current.render();\n    }\n  }, [tagList]);\n\n  useEffect(() => {\n    renderWordCloud();\n\n    return () => {\n      chartRef.current?.destroy();\n    };\n  }, [renderWordCloud]);\n\n  return <div ref={domRef} className=\"w-full h-[38vh]\"></div>;\n}\n","import { Segmented } from 'antd';\nimport { SegmentedLabeledOption } from 'antd/es/segmented';\nimport { upperFirst } from 'lodash';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TagTable } from './tag-table';\nimport { TagWordCloud } from './tag-word-cloud';\n\nenum TagType {\n  Cloud = 'cloud',\n  Table = 'table',\n}\n\nconst TagContentMap = {\n  [TagType.Cloud]: <TagWordCloud></TagWordCloud>,\n  [TagType.Table]: <TagTable></TagTable>,\n};\n\nexport function TagTabs() {\n  const [value, setValue] = useState<TagType>(TagType.Cloud);\n  const { t } = useTranslation();\n\n  const options: SegmentedLabeledOption[] = [TagType.Cloud, TagType.Table].map(\n    (x) => ({\n      label: t(`knowledgeConfiguration.tag${upperFirst(x)}`),\n      value: x,\n    }),\n  );\n\n  return (\n    <section className=\"mt-4\">\n      <Segmented\n        value={value}\n        options={options}\n        onChange={(val) => setValue(val as TagType)}\n      />\n      {TagContentMap[value]}\n    </section>\n  );\n}\n","const getImageName = (prefix: string, length: number) =>\n  new Array(length)\n    .fill(0)\n    .map((x, idx) => `chunk-method/${prefix}-0${idx + 1}`);\n\nexport const ImageMap = {\n  book: getImageName('book', 4),\n  laws: getImageName('law', 2),\n  manual: getImageName('manual', 4),\n  picture: getImageName('media', 2),\n  naive: getImageName('naive', 2),\n  paper: getImageName('paper', 2),\n  presentation: getImageName('presentation', 2),\n  qa: getImageName('qa', 2),\n  resume: getImageName('resume', 2),\n  table: getImageName('table', 2),\n  one: getImageName('one', 2),\n  knowledge_graph: getImageName('knowledge-graph', 2),\n};\n","import SvgIcon from '@/components/svg-icon';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useSelectParserList } from '@/hooks/user-setting-hooks';\nimport { Col, Divider, Empty, Row, Typography } from 'antd';\nimport DOMPurify from 'dompurify';\nimport camelCase from 'lodash/camelCase';\nimport { useMemo } from 'react';\nimport styles from './index.less';\nimport { TagTabs } from './tag-tabs';\nimport { ImageMap } from './utils';\n\nconst { Text } = Typography;\n\nconst CategoryPanel = ({ chunkMethod }: { chunkMethod: string }) => {\n  const parserList = useSelectParserList();\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  const item = useMemo(() => {\n    const item = parserList.find((x) => x.value === chunkMethod);\n    if (item) {\n      return {\n        title: item.label,\n        description: t(camelCase(item.value)),\n      };\n    }\n    return { title: '', description: '' };\n  }, [parserList, chunkMethod, t]);\n\n  const imageList = useMemo(() => {\n    if (chunkMethod in ImageMap) {\n      return ImageMap[chunkMethod as keyof typeof ImageMap];\n    }\n    return [];\n  }, [chunkMethod]);\n\n  return (\n    <section className={styles.categoryPanelWrapper}>\n      {imageList.length > 0 ? (\n        <>\n          <h5 className=\"font-semibold text-base mt-0 mb-1\">\n            {`\"${item.title}\" ${t('methodTitle')}`}\n          </h5>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: DOMPurify.sanitize(item.description),\n            }}\n          ></p>\n          <h5 className=\"font-semibold text-base mt-4 mb-1\">{`\"${item.title}\" ${t('methodExamples')}`}</h5>\n          <Text>{t('methodExamplesDescription')}</Text>\n          <Row gutter={[10, 10]} className={styles.imageRow}>\n            {imageList.map((x) => (\n              <Col span={12} key={x}>\n                <SvgIcon\n                  name={x}\n                  width={'100%'}\n                  className={styles.image}\n                ></SvgIcon>\n              </Col>\n            ))}\n          </Row>\n          <h5 className=\"font-semibold text-base mt-4 mb-1\">\n            {item.title} {t('dialogueExamplesTitle')}\n          </h5>\n          <Divider></Divider>\n        </>\n      ) : (\n        <Empty description={''} image={null}>\n          <p>{t('methodEmpty')}</p>\n          <SvgIcon name={'chunk-method/chunk-empty'} width={'100%'}></SvgIcon>\n        </Empty>\n      )}\n      {chunkMethod === 'tag' && <TagTabs></TagTabs>}\n    </section>\n  );\n};\n\nexport default CategoryPanel;\n","import { Button } from '@/components/ui/button';\nimport { X } from 'lucide-react';\nimport { useState } from 'react';\nimport CategoryPanel from './category-panel';\n\nexport default ({\n  tab = 'generalForm',\n  parserId,\n}: {\n  tab: 'generalForm' | 'chunkMethodForm';\n  parserId: string;\n}) => {\n  const [visible, setVisible] = useState(true);\n\n  return (\n    <div\n      style={{\n        display: tab === 'chunkMethodForm' ? 'block' : 'none',\n      }}\n    >\n      <Button\n        variant=\"outline\"\n        onClick={() => {\n          setVisible(!visible);\n        }}\n      >\n        Learn More\n      </Button>\n      <div\n        className=\"bg-[#FFF]/10 p-[20px] rounded-[12px] mt-[10px] relative\"\n        style={{ display: visible ? 'block' : 'none' }}\n      >\n        <CategoryPanel chunkMethod={parserId}></CategoryPanel>\n        <div\n          className=\"absolute right-1 top-1 cursor-pointer hover:text-[#FFF]/30\"\n          onClick={() => {\n            setVisible(false);\n          }}\n        >\n          <X />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { z } from 'zod';\n\nexport const formSchema = z.object({\n  name: z.string().min(1, {\n    message: 'Username must be at least 2 characters.',\n  }),\n  description: z.string().min(2, {\n    message: 'Username must be at least 2 characters.',\n  }),\n  // avatar: z.instanceof(File),\n  avatar: z.any().nullish(),\n  permission: z.string(),\n  parser_id: z.string(),\n  embd_id: z.string(),\n  parser_config: z\n    .object({\n      layout_recognize: z.string(),\n      chunk_token_num: z.number(),\n      delimiter: z.string(),\n      auto_keywords: z.number().optional(),\n      auto_questions: z.number().optional(),\n      html4excel: z.boolean(),\n      tag_kb_ids: z.array(z.string()).nullish(),\n      topn_tags: z.number().optional(),\n      raptor: z\n        .object({\n          use_raptor: z.boolean().optional(),\n          prompt: z.string().optional(),\n          max_token: z.number().optional(),\n          threshold: z.number().optional(),\n          max_cluster: z.number().optional(),\n          random_seed: z.number().optional(),\n        })\n        .refine(\n          (data) => {\n            if (data.use_raptor && !data.prompt) {\n              return false;\n            }\n            return true;\n          },\n          {\n            message: 'Prompt is required',\n            path: ['prompt'],\n          },\n        ),\n      graphrag: z\n        .object({\n          use_graphrag: z.boolean().optional(),\n          entity_types: z.array(z.string()).optional(),\n          method: z.string().optional(),\n          resolution: z.boolean().optional(),\n          community: z.boolean().optional(),\n        })\n        .refine(\n          (data) => {\n            if (\n              data.use_graphrag &&\n              (!data.entity_types || data.entity_types.length === 0)\n            ) {\n              return false;\n            }\n            return true;\n          },\n          {\n            message: 'Please enter Entity types',\n            path: ['entity_types'],\n          },\n        ),\n    })\n    .optional(),\n  pagerank: z.number(),\n  // icon: z.array(z.instanceof(File)),\n});\n","'use client';\n\nimport * as RadioGroupPrimitive from '@radix-ui/react-radio-group';\nimport { Circle } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn('grid gap-2', className)}\n      {...props}\n      ref={ref}\n    />\n  );\n});\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName;\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        'aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n        className,\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  );\n});\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName;\n\nexport { RadioGroup, RadioGroupItem };\n","import { FormContainer } from '@/components/form-container';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Button } from '@/components/ui/button';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { useUpdateKnowledge } from '@/hooks/knowledge-hooks';\nimport { transformFile2Base64 } from '@/utils/file-util';\nimport { Loader2Icon, Pencil, Upload } from 'lucide-react';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'umi';\n\nexport function GeneralForm() {\n  const form = useFormContext();\n  const { t } = useTranslation();\n  const [avatarFile, setAvatarFile] = useState<File | null>(null);\n  const [avatarBase64Str, setAvatarBase64Str] = useState(''); // Avatar Image base64\n  // const [submitLoading, setSubmitLoading] = useState(false); // submit button loading\n\n  const { saveKnowledgeConfiguration, loading: submitLoading } =\n    useUpdateKnowledge();\n\n  const defaultValues = useMemo(\n    () => form.formState.defaultValues ?? {},\n    [form.formState.defaultValues],\n  );\n  const parser_id = defaultValues['parser_id'];\n  const { id: kb_id } = useParams();\n\n  // init avatar file if it exists in defaultValues\n  useEffect(() => {\n    if (!avatarFile) {\n      let avatarList = defaultValues['avatar'];\n      if (avatarList && avatarList.length > 0) {\n        setAvatarBase64Str(avatarList[0].thumbUrl);\n      }\n    }\n  }, [avatarFile, defaultValues]);\n\n  // input[type=file] on change event, get img base64\n  useEffect(() => {\n    if (avatarFile) {\n      (async () => {\n        // make use of img compression transformFile2Base64\n        setAvatarBase64Str(await transformFile2Base64(avatarFile));\n      })();\n    }\n  }, [avatarFile]);\n\n  return (\n    <>\n      <FormContainer className=\"space-y-10 p-10\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem className=\"items-center space-y-0\">\n              <div className=\"flex\">\n                <FormLabel className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\">\n                  <span className=\"text-red-600\">*</span>\n                  {t('common.name')}\n                </FormLabel>\n                <FormControl className=\"w-3/4\">\n                  <Input {...field}></Input>\n                </FormControl>\n              </div>\n              <div className=\"flex pt-1\">\n                <div className=\"w-1/4\"></div>\n                <FormMessage />\n              </div>\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => {\n            // null initialize empty string\n            if (typeof field.value === 'object' && !field.value) {\n              form.setValue('description', '  ');\n            }\n            return (\n              <FormItem className=\"items-center space-y-0\">\n                <div className=\"flex\">\n                  <FormLabel className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\">\n                    {t('flow.description')}\n                  </FormLabel>\n                  <FormControl className=\"w-3/4\">\n                    <Input {...field}></Input>\n                  </FormControl>\n                </div>\n                <div className=\"flex pt-1\">\n                  <div className=\"w-1/4\"></div>\n                  <FormMessage />\n                </div>\n              </FormItem>\n            );\n          }}\n        />\n        <FormField\n          control={form.control}\n          name=\"avatar\"\n          render={({ field }) => (\n            <FormItem className=\"items-center space-y-0\">\n              <div className=\"flex\">\n                <FormLabel className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\">\n                  {t('setting.avatar')}\n                </FormLabel>\n                <FormControl className=\"w-3/4\">\n                  <>\n                    <div className=\"relative group\">\n                      {!avatarBase64Str ? (\n                        <div className=\"w-[64px] h-[64px] grid place-content-center border border-dashed\trounded-md\">\n                          <div className=\"flex flex-col items-center\">\n                            <Upload />\n                            <p>Upload</p>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"w-[64px] h-[64px] relative grid place-content-center\">\n                          <Avatar className=\"w-[64px] h-[64px]\">\n                            <AvatarImage\n                              className=\" block\"\n                              src={avatarBase64Str}\n                              alt=\"\"\n                            />\n                            <AvatarFallback></AvatarFallback>\n                          </Avatar>\n                          <div className=\"absolute inset-0 bg-[#000]/20 group-hover:bg-[#000]/60\">\n                            <Pencil\n                              size={20}\n                              className=\"absolute right-2 bottom-0 opacity-50 hidden group-hover:block\"\n                            />\n                          </div>\n                        </div>\n                      )}\n                      <Input\n                        placeholder=\"\"\n                        // {...field}\n                        type=\"file\"\n                        title=\"\"\n                        accept=\"image/*\"\n                        className=\"absolute top-0 left-0 w-full h-full opacity-0 cursor-pointer\"\n                        onChange={(ev) => {\n                          const file = ev.target?.files?.[0];\n                          if (\n                            /\\.(jpg|jpeg|png|webp|bmp)$/i.test(file?.name ?? '')\n                          ) {\n                            setAvatarFile(file!);\n                          }\n                          ev.target.value = '';\n                        }}\n                      />\n                    </div>\n                  </>\n                </FormControl>\n              </div>\n              <div className=\"flex pt-1\">\n                <div className=\"w-1/4\"></div>\n                <FormMessage />\n              </div>\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"permission\"\n          render={({ field }) => (\n            <FormItem className=\"flex items-center space-y-0\">\n              <FormLabel\n                className=\"text-sm text-muted-foreground whitespace-nowrap w-1/4\"\n                tooltip={t('knowledgeConfiguration.permissionsTip')}\n              >\n                {t('knowledgeConfiguration.permissions')}\n              </FormLabel>\n              <FormControl className=\"w-3/4\">\n                <RadioGroup\n                  onValueChange={field.onChange}\n                  value={field.value}\n                  className=\"flex space-y-1 gap-5\"\n                >\n                  <FormItem className=\"flex items-center space-x-1 space-y-0\">\n                    <FormControl>\n                      <RadioGroupItem value=\"me\" />\n                    </FormControl>\n                    <FormLabel className=\"font-normal\">\n                      {t('knowledgeConfiguration.me')}\n                    </FormLabel>\n                  </FormItem>\n                  <FormItem className=\"flex items-center space-x-1 space-y-0\">\n                    <FormControl>\n                      <RadioGroupItem value=\"team\" />\n                    </FormControl>\n                    <FormLabel className=\"font-normal\">\n                      {t('knowledgeConfiguration.team')}\n                    </FormLabel>\n                  </FormItem>\n                </RadioGroup>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n      </FormContainer>\n      <div className=\"text-right pt-4\">\n        <Button\n          type=\"button\"\n          disabled={submitLoading}\n          onClick={() => {\n            // console.log('form.formControl: ', form.formState.values);\n            (async () => {\n              let isValidate = await form.formControl.trigger('name');\n              // console.log(isValidate);\n              const { name, description, permission } = form.formState.values;\n              const avatar = avatarBase64Str;\n\n              if (isValidate) {\n                saveKnowledgeConfiguration({\n                  kb_id,\n                  parser_id,\n                  name,\n                  description,\n                  permission,\n                  avatar,\n                });\n              }\n            })();\n          }}\n        >\n          {submitLoading && <Loader2Icon className=\"animate-spin\" />}\n          {t('common.submit')}\n        </Button>\n      </div>\n    </>\n  );\n}\n","import { Form } from '@/components/ui/form';\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from '@/components/ui/tabs-underlined';\nimport { DocumentParserType } from '@/constants/knowledge';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useState } from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { z } from 'zod';\nimport { TopTitle } from '../dataset-title';\nimport { ChunkMethodForm } from './chunk-method-form';\nimport ChunkMethodLearnMore from './chunk-method-learn-more';\nimport { formSchema } from './form-schema';\nimport { GeneralForm } from './general-form';\nimport { useFetchKnowledgeConfigurationOnMount } from './hooks';\n\nconst enum DocumentType {\n  DeepDOC = 'DeepDOC',\n  PlainText = 'Plain Text',\n}\n\nconst initialEntityTypes = [\n  'organization',\n  'person',\n  'geo',\n  'event',\n  'category',\n];\n\nconst enum MethodValue {\n  General = 'general',\n  Light = 'light',\n}\n\nexport default function DatasetSettings() {\n  const { t } = useTranslation();\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      parser_id: DocumentParserType.Naive,\n      permission: 'me',\n      parser_config: {\n        layout_recognize: DocumentType.DeepDOC,\n        chunk_token_num: 512,\n        delimiter: `\\n`,\n        auto_keywords: 0,\n        auto_questions: 0,\n        html4excel: false,\n        topn_tags: 3,\n        raptor: {\n          use_raptor: false,\n          max_token: 256,\n          threshold: 0.1,\n          max_cluster: 64,\n          random_seed: 0,\n        },\n        graphrag: {\n          use_graphrag: false,\n          entity_types: initialEntityTypes,\n          method: MethodValue.Light,\n        },\n      },\n      pagerank: 0,\n    },\n  });\n\n  useFetchKnowledgeConfigurationOnMount(form);\n\n  const [currentTab, setCurrentTab] = useState<\n    'generalForm' | 'chunkMethodForm'\n  >('generalForm'); // currnet Tab state\n\n  const parserId = useWatch({\n    control: form.control,\n    name: 'parser_id',\n  });\n\n  async function onSubmit(data: z.infer<typeof formSchema>) {\n    console.log('🚀 ~ DatasetSettings ~ data:', data);\n  }\n\n  return (\n    <section className=\"p-5 \">\n      <TopTitle\n        title={t('knowledgeDetails.configuration')}\n        description={t('knowledgeConfiguration.titleDescription')}\n      ></TopTitle>\n      <div className=\"flex gap-14\">\n        <Form {...form}>\n          <form\n            onSubmit={form.handleSubmit(onSubmit)}\n            className=\"space-y-6 basis-full min-w-[1000px] max-w-[1000px]\"\n          >\n            <Tabs\n              defaultValue=\"generalForm\"\n              onValueChange={(val) => {\n                setCurrentTab(val);\n              }}\n            >\n              <TabsList className=\"grid w-full bg-background grid-cols-2 rounded-none bg-[#161618]\">\n                <TabsTrigger\n                  value=\"generalForm\"\n                  className=\"group bg-transparent p-0 !border-transparent\"\n                >\n                  <div className=\"flex w-full h-full justify-center\titems-center\tbg-[#161618]\">\n                    <span className=\"h-full group-data-[state=active]:border-b-2 border-white\t\">\n                      General\n                    </span>\n                  </div>\n                </TabsTrigger>\n                <TabsTrigger\n                  value=\"chunkMethodForm\"\n                  className=\"group bg-transparent p-0 !border-transparent\"\n                >\n                  <div className=\"flex w-full h-full justify-center\titems-center\tbg-[#161618]\">\n                    <span className=\"h-full group-data-[state=active]:border-b-2 border-white\t\">\n                      Chunk Method\n                    </span>\n                  </div>\n                </TabsTrigger>\n              </TabsList>\n              <TabsContent value=\"generalForm\">\n                <GeneralForm></GeneralForm>\n              </TabsContent>\n              <TabsContent value=\"chunkMethodForm\">\n                <ChunkMethodForm></ChunkMethodForm>\n              </TabsContent>\n            </Tabs>\n            {/* <div className=\"text-right\">\n              <ButtonLoading type=\"submit\">Submit</ButtonLoading>\n            </div> */}\n          </form>\n        </Form>\n        <ChunkMethodLearnMore tab={currentTab} parserId={parserId} />\n        {/* <div\n          style={{\n            display: currentTab === 'chunkMethodForm' ? 'block' : 'none',\n          }}\n        >\n          <Button variant=\"outline\">Learn More</Button>\n          <div className=\"bg-[#FFF]/10 p-[20px] rounded-[12px] mt-[10px]\">\n            <CategoryPanel chunkMethod={parserId}></CategoryPanel>\n          </div>\n        </div> */}\n      </div>\n    </section>\n  );\n}\n"],"names":["_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","_excluded7","_excluded8","AlertDialog","AlertDialogPrimitive","AlertDialogTrigger","AlertDialogPortal","AlertDialogOverlay","React","_ref","ref","className","props","_objectWithoutProperties","_jsx","_objectSpread","cn","displayName","AlertDialogContent","_ref2","_jsxs","children","AlertDialogHeader","_ref3","AlertDialogFooter","_ref4","AlertDialogTitle","_ref5","_ref6","AlertDialogAction","_ref7","buttonVariants","AlertDialogCancel","_ref8","variant","ConfirmDeleteDialog","title","onOk","onCancel","_ref$hidden","hidden","t","useTranslation","asChild","onSelect","e","preventDefault","onClick","stopPropagation","Avatar","AvatarPrimitive","AvatarImage","AvatarFallback","badgeVariants","cva","variants","default","secondary","destructive","outline","tertiary","defaultVariants","Badge","Checkbox","CheckboxPrimitive","Check","Command","CommandPrimitive","CommandInput","Search","Input","CommandList","List","CommandEmpty","Empty","CommandGroup","Group","CommandSeparator","Separator","CommandItem","Item","ghost","link","size","sm","lg","icon","LoadingButton","_ref$loading","loading","disabled","_ref$asChild","Comp","Slot","Loader2","Slottable","multiSelectVariants","inverted","MultiSelect","options","onValueChange","_ref$defaultValue","defaultValue","_ref$placeholder","placeholder","_ref$animation","animation","_ref$maxCount","maxCount","_ref$modalPopover","modalPopover","_React$useState","_React$useState2","_slicedToArray","selectedValues","setSelectedValues","_React$useState3","_React$useState4","isPopoverOpen","setIsPopoverOpen","_React$useState5","_React$useState6","isAnimating","setIsAnimating","toggleOption","option","newSelectedValues","includes","filter","value","concat","_toConsumableArray","handleClear","Popover","open","onOpenChange","modal","PopoverTrigger","Button","prev","length","slice","map","find","o","IconComponent","style","animationDuration","label","XCircle","event","XIcon","orientation","ChevronDown","PopoverContent","align","onEscapeKeyDown","onKeyDown","key","currentTarget","pop","allValues","CheckIcon","isSelected","_Fragment","WandSparkles","PopoverPrimitive","_ref$align","_ref$sideOffset","sideOffset","Select","SelectPrimitive","SelectGroup","SelectValue","SelectTrigger","onReset","allowClear","onPointerDown","X","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","SelectContent","_ref4$position","position","SelectLabel","SelectItem","RAGFlowSelect","forwardRef","initialValue","onChange","FormControlComponent","_ref8$options","_ref8$contentProps","contentProps","triggerClassName","_ref8$onlyShowSelecte","onlyShowSelectedIcon","Date","setKey","setValue","FormControlWidget","_ref9","handleChange","useCallback","val","handleReset","undefined","useEffect","preValue","nextOptions","some","x","reduce","pre","cur","_cur$options","idx","KnowledgeDatasetRouteKey","_defineProperty","KnowledgeRouteKey","Dataset","Testing","Configuration","TagRenameId","Chunk","File","TopTitle","description","Tabs","TabsPrimitive","TabsList","TabsTrigger","TabsContent","useTranslate","SliderInputFormField","name","tooltip","max","min","ConfigurationFormContainer","FormContainer","MainContainer","TagSetItem","form","useFormContext","knowledgeOptions","useFetchKnowledgeList","list","parser_id","id","Space","UserOutlined","src","avatar","FormField","control","render","field","FormItem","FormLabel","dangerouslySetInnerHTML","__html","DOMPurify","FormControl","FormMessage","TopNTagsItem","TagItems","ids","useWatch","Array","isArray","HiddenFields","useFetchKnowledgeConfigurationOnMount","knowledgeDetails","useFetchKnowledgeBaseConfiguration","data","fileList","getUploadFileListFromBase64","console","log","reset","pick","ChunkMethodItem","parserList","useSelectParserList","y","EmbeddingModelItem","embeddingModelOptions","useSelectLlmOptionsByModelType","LlmModelType","Embedding","chunk_num","ConfigurationComponentMap","_ConfigurationCompone","DocumentParserType","Naive","LayoutRecognizeFormField","MaxTokenNumberFormField","DelimiterFormField","PageRankFormField","AutoKeywordsFormField","AutoQuestionsFormField","ExcelToHtmlFormField","RaptorFormFields","GraphRagItems","Qa","Resume","Manual","marginBottom","Table","Paper","Book","Laws","Presentation","Picture","One","Audio","Email","Tag","KnowledgeGraph","EntityTypesFormField","EmptyComponent","ChunkMethodForm","kb_id","useParams","_useUpdateKnowledge","useUpdateKnowledge","saveKnowledgeConfiguration","submitLoading","finalParserId","ConfigurationComponent","useMemo","_asyncToGenerator","_regeneratorRuntime","mark","_callee","beValid","postData","wrap","_context","next","formControl","trigger","sent","formState","values","t0","finish","stop","Loader2Icon","RenameForm","initialName","hideModal","FormSchema","z","object","string","message","trim","useForm","resolver","zodResolver","defaultValues","renameTag","useRenameTag","_onSubmit","fromTag","toTag","apply","arguments","Form","onSubmit","handleSubmit","_x","autoComplete","RenameDialog","useTagIsRenaming","Dialog","DialogContent","DialogHeader","DialogTitle","DialogFooter","type","TagTable","_table$getColumn","_table$getRowModel$ro","useFetchTagList","_useState","useState","_useState2","tagList","setTagList","sorting","setSorting","columnFilters","setColumnFilters","columnVisibility","setColumnVisibility","_useState3","_useState4","rowSelection","setRowSelection","deleteTag","useDeleteTag","tag","frequency","handleDeleteTag","tags","_useRenameKnowledgeTa","setTag","_useSetModalState","useSetModalState","tagRenameVisible","visible","hideTagRenameModal","showFileRenameModal","showModal","showTagRenameModal","record","useRenameKnowledgeTag","columns","header","table","checked","getIsAllPageRowsSelected","getIsSomePageRowsSelected","onCheckedChange","toggleAllPageRowsSelected","cell","row","getIsSelected","toggleSelected","enableSorting","enableHiding","accessorKey","column","toggleSorting","getIsSorted","ArrowUpDown","getValue","Tooltip","original","TooltipTrigger","Trash2","TooltipContent","Pencil","useReactTable","onSortingChange","onColumnFiltersChange","getCoreRowModel","getPaginationRowModel","getSortedRowModel","getFilteredRowModel","onColumnVisibilityChange","onRowSelectionChange","state","selectedRowLength","getFilteredSelectedRowModel","rows","TooltipProvider","getColumn","getFilterValue","_table$getColumn2","setFilterValue","target","TableHeader","getHeaderGroups","headerGroup","TableRow","headers","TableHead","isPlaceholder","flexRender","columnDef","getContext","TableBody","getRowModel","getVisibleCells","TableCell","colSpan","previousPage","getCanPreviousPage","nextPage","getCanNextPage","TagWordCloud","domRef","useRef","chartRef","_useMemo","nextList","sort","a","b","text","sumValue","sumBy","renderWordCloud","current","Chart","container","autoFit","layout","fontSize","encode","color","legend","items","_chartRef$current","destroy","TagType","TagContentMap","Cloud","TagTabs","upperFirst","Segmented","getImageName","prefix","fill","ImageMap","book","laws","manual","picture","naive","paper","presentation","qa","resume","one","knowledge_graph","Text","Typography","chunkMethod","item","camelCase","imageList","styles","Row","gutter","Col","span","SvgIcon","width","Divider","image","_ref$tab","tab","parserId","setVisible","display","CategoryPanel","formSchema","any","nullish","permission","embd_id","parser_config","layout_recognize","chunk_token_num","number","delimiter","auto_keywords","optional","auto_questions","html4excel","tag_kb_ids","array","topn_tags","raptor","use_raptor","prompt","max_token","threshold","max_cluster","random_seed","refine","path","graphrag","use_graphrag","entity_types","method","resolution","community","pagerank","RadioGroup","RadioGroupPrimitive","RadioGroupItem","Circle","GeneralForm","avatarFile","setAvatarFile","avatarBase64Str","setAvatarBase64Str","_form$formState$defau","avatarList","thumbUrl","transformFile2Base64","t1","_typeof","alt","Upload","accept","ev","_ev$target","_file$name","file","files","test","_callee2","isValidate","_form$formState$value","_context2","initialEntityTypes","DatasetSettings","currentTab","setCurrentTab","ChunkMethodLearnMore"],"sourceRoot":""}