{"version":3,"file":"p__add-knowledge__components__knowledge-chunk__index.d18e9c07.async.js","mappings":"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","sources":["webpack:///./node_modules/@ant-design/icons-svg/es/asn/ArrowLeftOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/ArrowLeftOutlined.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/CloseCircleOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/constant.ts","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/components/chunk-card/index.less?48f9","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/components/chunk-card/index.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/hooks.ts","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/utils.ts","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/components/chunk-creating-modal/tag-feature-item.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/components/chunk-creating-modal/index.tsx","webpack:///./node_modules/@ant-design/icons-svg/es/asn/CheckCircleOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/CheckCircleOutlined.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/FilePdfOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/FilePdfOutlined.js","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/components/chunk-toolbar/index.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/components/document-preview/hooks.ts","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/components/document-preview/index.less?b5d4","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/components/document-preview/preview.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/index.less?fd51","webpack:///./src/pages/add-knowledge/components/knowledge-chunk/index.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar ArrowLeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"arrow-left\", \"theme\": \"outlined\" };\nexport default ArrowLeftOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport ArrowLeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/ArrowLeftOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar ArrowLeftOutlined = function ArrowLeftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: ArrowLeftOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ArrowLeftOutlined.displayName = 'ArrowLeftOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(ArrowLeftOutlined);","// This icon file is generated automatically.\nvar CloseCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"fill-rule\": \"evenodd\", \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64c247.4 0 448 200.6 448 448S759.4 960 512 960 64 759.4 64 512 264.6 64 512 64zm0 76c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm128.01 198.83c.03 0 .05.01.09.06l45.02 45.01a.2.2 0 01.05.09.12.12 0 010 .07c0 .02-.01.04-.05.08L557.25 512l127.87 127.86a.27.27 0 01.05.06v.02a.12.12 0 010 .07c0 .03-.01.05-.05.09l-45.02 45.02a.2.2 0 01-.09.05.12.12 0 01-.07 0c-.02 0-.04-.01-.08-.05L512 557.25 384.14 685.12c-.04.04-.06.05-.08.05a.12.12 0 01-.07 0c-.03 0-.05-.01-.09-.05l-45.02-45.02a.2.2 0 01-.05-.09.12.12 0 010-.07c0-.02.01-.04.06-.08L466.75 512 338.88 384.14a.27.27 0 01-.05-.06l-.01-.02a.12.12 0 010-.07c0-.03.01-.05.05-.09l45.02-45.02a.2.2 0 01.09-.05.12.12 0 01.07 0c.02 0 .04.01.08.06L512 466.75l127.86-127.86c.04-.05.06-.06.08-.06a.12.12 0 01.07 0z\" } }] }, \"name\": \"close-circle\", \"theme\": \"outlined\" };\nexport default CloseCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CloseCircleOutlined.displayName = 'CloseCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","export enum ChunkTextMode {\n  Full = 'full',\n  Ellipse = 'ellipse',\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"image___fDGTe\",\"imagePreview\":\"imagePreview___N6faK\",\"content\":\"content___dvAD4\",\"contentEllipsis\":\"contentEllipsis___ku_hG\",\"contentText\":\"contentText___FFy2D\",\"chunkCard\":\"chunkCard___FJadg\",\"cardSelected\":\"cardSelected___xZpKQ\",\"cardSelectedDark\":\"cardSelectedDark___mfM8g\"};","import Image from '@/components/image';\nimport { IChunk } from '@/interfaces/database/knowledge';\nimport { Card, Checkbox, CheckboxProps, Flex, Popover, Switch } from 'antd';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport { useEffect, useState } from 'react';\n\nimport { useTheme } from '@/components/theme-provider';\nimport { ChunkTextMode } from '../../constant';\nimport styles from './index.less';\n\ninterface IProps {\n  item: IChunk;\n  checked: boolean;\n  switchChunk: (available?: number, chunkIds?: string[]) => void;\n  editChunk: (chunkId: string) => void;\n  handleCheckboxClick: (chunkId: string, checked: boolean) => void;\n  selected: boolean;\n  clickChunkCard: (chunkId: string) => void;\n  textMode: ChunkTextMode;\n}\n\nconst ChunkCard = ({\n  item,\n  checked,\n  handleCheckboxClick,\n  editChunk,\n  switchChunk,\n  selected,\n  clickChunkCard,\n  textMode,\n}: IProps) => {\n  const available = Number(item.available_int);\n  const [enabled, setEnabled] = useState(false);\n  const { theme } = useTheme();\n\n  const onChange = (checked: boolean) => {\n    setEnabled(checked);\n    switchChunk(available === 0 ? 1 : 0, [item.chunk_id]);\n  };\n\n  const handleCheck: CheckboxProps['onChange'] = (e) => {\n    handleCheckboxClick(item.chunk_id, e.target.checked);\n  };\n\n  const handleContentDoubleClick = () => {\n    editChunk(item.chunk_id);\n  };\n\n  const handleContentClick = () => {\n    clickChunkCard(item.chunk_id);\n  };\n\n  useEffect(() => {\n    setEnabled(available === 1);\n  }, [available]);\n\n  return (\n    <Card\n      className={classNames(styles.chunkCard, {\n        [`${theme === 'dark' ? styles.cardSelectedDark : styles.cardSelected}`]:\n          selected,\n      })}\n    >\n      <Flex gap={'middle'} justify={'space-between'}>\n        <Checkbox onChange={handleCheck} checked={checked}></Checkbox>\n        {item.image_id && (\n          <Popover\n            placement=\"right\"\n            content={\n              <Image id={item.image_id} className={styles.imagePreview}></Image>\n            }\n          >\n            <Image id={item.image_id} className={styles.image}></Image>\n          </Popover>\n        )}\n\n        <section\n          onDoubleClick={handleContentDoubleClick}\n          onClick={handleContentClick}\n          className={styles.content}\n        >\n          <div\n            dangerouslySetInnerHTML={{\n              __html: DOMPurify.sanitize(item.content_with_weight),\n            }}\n            className={classNames(styles.contentText, {\n              [styles.contentEllipsis]: textMode === ChunkTextMode.Ellipse,\n            })}\n          ></div>\n        </section>\n\n        <div>\n          <Switch checked={enabled} onChange={onChange} />\n        </div>\n      </Flex>\n    </Card>\n  );\n};\n\nexport default ChunkCard;\n","import {\n  useCreateChunk,\n  useDeleteChunk,\n  useSelectChunkList,\n} from '@/hooks/chunk-hooks';\nimport { useSetModalState, useShowDeleteConfirm } from '@/hooks/common-hooks';\nimport { useGetKnowledgeSearchParams } from '@/hooks/route-hook';\nimport { IChunk } from '@/interfaces/database/knowledge';\nimport { buildChunkHighlights } from '@/utils/document-util';\nimport { useCallback, useMemo, useState } from 'react';\nimport { IHighlight } from 'react-pdf-highlighter';\nimport { ChunkTextMode } from './constant';\n\nexport const useHandleChunkCardClick = () => {\n  const [selectedChunkId, setSelectedChunkId] = useState<string>('');\n\n  const handleChunkCardClick = useCallback((chunkId: string) => {\n    setSelectedChunkId(chunkId);\n  }, []);\n\n  return { handleChunkCardClick, selectedChunkId };\n};\n\nexport const useGetSelectedChunk = (selectedChunkId: string) => {\n  const data = useSelectChunkList();\n  return (\n    data?.data?.find((x) => x.chunk_id === selectedChunkId) ?? ({} as IChunk)\n  );\n};\n\nexport const useGetChunkHighlights = (selectedChunkId: string) => {\n  const [size, setSize] = useState({ width: 849, height: 1200 });\n  const selectedChunk: IChunk = useGetSelectedChunk(selectedChunkId);\n\n  const highlights: IHighlight[] = useMemo(() => {\n    return buildChunkHighlights(selectedChunk, size);\n  }, [selectedChunk, size]);\n\n  const setWidthAndHeight = useCallback((width: number, height: number) => {\n    setSize((pre) => {\n      if (pre.height !== height || pre.width !== width) {\n        return { height, width };\n      }\n      return pre;\n    });\n  }, []);\n\n  return { highlights, setWidthAndHeight };\n};\n\n// Switch chunk text to be fully displayed or ellipse\nexport const useChangeChunkTextMode = () => {\n  const [textMode, setTextMode] = useState<ChunkTextMode>(ChunkTextMode.Full);\n\n  const changeChunkTextMode = useCallback((mode: ChunkTextMode) => {\n    setTextMode(mode);\n  }, []);\n\n  return { textMode, changeChunkTextMode };\n};\n\nexport const useDeleteChunkByIds = (): {\n  removeChunk: (chunkIds: string[], documentId: string) => Promise<number>;\n} => {\n  const { deleteChunk } = useDeleteChunk();\n  const showDeleteConfirm = useShowDeleteConfirm();\n\n  const removeChunk = useCallback(\n    (chunkIds: string[], documentId: string) => () => {\n      return deleteChunk({ chunkIds, doc_id: documentId });\n    },\n    [deleteChunk],\n  );\n\n  const onRemoveChunk = useCallback(\n    (chunkIds: string[], documentId: string): Promise<number> => {\n      return showDeleteConfirm({ onOk: removeChunk(chunkIds, documentId) });\n    },\n    [removeChunk, showDeleteConfirm],\n  );\n\n  return {\n    removeChunk: onRemoveChunk,\n  };\n};\n\nexport const useUpdateChunk = () => {\n  const [chunkId, setChunkId] = useState<string | undefined>('');\n  const {\n    visible: chunkUpdatingVisible,\n    hideModal: hideChunkUpdatingModal,\n    showModal,\n  } = useSetModalState();\n  const { createChunk, loading } = useCreateChunk();\n  const { documentId } = useGetKnowledgeSearchParams();\n\n  const onChunkUpdatingOk = useCallback(\n    async (params: IChunk) => {\n      const code = await createChunk({\n        ...params,\n        doc_id: documentId,\n        chunk_id: chunkId,\n      });\n\n      if (code === 0) {\n        hideChunkUpdatingModal();\n      }\n    },\n    [createChunk, hideChunkUpdatingModal, chunkId, documentId],\n  );\n\n  const handleShowChunkUpdatingModal = useCallback(\n    async (id?: string) => {\n      setChunkId(id);\n      showModal();\n    },\n    [showModal],\n  );\n\n  return {\n    chunkUpdatingLoading: loading,\n    onChunkUpdatingOk,\n    chunkUpdatingVisible,\n    hideChunkUpdatingModal,\n    showChunkUpdatingModal: handleShowChunkUpdatingModal,\n    chunkId,\n    documentId,\n  };\n};\n","export type FormListItem = {\n  frequency: number;\n  tag: string;\n};\n\nexport function transformTagFeaturesArrayToObject(\n  list: Array<FormListItem> = [],\n) {\n  return list.reduce<Record<string, number>>((pre, cur) => {\n    pre[cur.tag] = cur.frequency;\n\n    return pre;\n  }, {});\n}\n\nexport function transformTagFeaturesObjectToArray(\n  object: Record<string, number> = {},\n) {\n  return Object.keys(object).reduce<Array<FormListItem>>((pre, key) => {\n    pre.push({ frequency: object[key], tag: key });\n\n    return pre;\n  }, []);\n}\n","import {\n  useFetchKnowledgeBaseConfiguration,\n  useFetchTagListByKnowledgeIds,\n} from '@/hooks/knowledge-hooks';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Button, Form, InputNumber, Select } from 'antd';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FormListItem } from '../../utils';\n\nconst FieldKey = 'tag_feas';\n\nexport const TagFeatureItem = () => {\n  const form = Form.useFormInstance();\n  const { t } = useTranslation();\n  const { data: knowledgeConfiguration } = useFetchKnowledgeBaseConfiguration();\n\n  const { setKnowledgeIds, list } = useFetchTagListByKnowledgeIds();\n\n  const tagKnowledgeIds = useMemo(() => {\n    return knowledgeConfiguration?.parser_config?.tag_kb_ids ?? [];\n  }, [knowledgeConfiguration?.parser_config?.tag_kb_ids]);\n\n  const options = useMemo(() => {\n    return list.map((x) => ({\n      value: x[0],\n      label: x[0],\n    }));\n  }, [list]);\n\n  const filterOptions = useCallback(\n    (index: number) => {\n      const tags: FormListItem[] = form.getFieldValue(FieldKey) ?? [];\n\n      // Exclude it's own current data\n      const list = tags\n        .filter((x, idx) => x && index !== idx)\n        .map((x) => x.tag);\n\n      // Exclude the selected data from other options from one's own options.\n      return options.filter((x) => !list.some((y) => x.value === y));\n    },\n    [form, options],\n  );\n\n  useEffect(() => {\n    setKnowledgeIds(tagKnowledgeIds);\n  }, [setKnowledgeIds, tagKnowledgeIds]);\n\n  return (\n    <Form.Item label={t('knowledgeConfiguration.tags')}>\n      <Form.List name={FieldKey} initialValue={[]}>\n        {(fields, { add, remove }) => (\n          <>\n            {fields.map(({ key, name, ...restField }) => (\n              <div key={key} className=\"flex gap-3 items-center\">\n                <div className=\"flex flex-1  gap-8\">\n                  <Form.Item\n                    {...restField}\n                    name={[name, 'tag']}\n                    rules={[\n                      { required: true, message: t('common.pleaseSelect') },\n                    ]}\n                    className=\"w-2/3\"\n                  >\n                    <Select\n                      showSearch\n                      placeholder={t('knowledgeConfiguration.tagName')}\n                      options={filterOptions(name)}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    {...restField}\n                    name={[name, 'frequency']}\n                    rules={[\n                      { required: true, message: t('common.pleaseInput') },\n                    ]}\n                  >\n                    <InputNumber\n                      placeholder={t('knowledgeConfiguration.frequency')}\n                      max={10}\n                      min={0}\n                    />\n                  </Form.Item>\n                </div>\n                <MinusCircleOutlined\n                  onClick={() => remove(name)}\n                  className=\"mb-6\"\n                />\n              </div>\n            ))}\n            <Form.Item>\n              <Button\n                type=\"dashed\"\n                onClick={() => add()}\n                block\n                icon={<PlusOutlined />}\n              >\n                {t('knowledgeConfiguration.addTag')}\n              </Button>\n            </Form.Item>\n          </>\n        )}\n      </Form.List>\n    </Form.Item>\n  );\n};\n","import EditTag from '@/components/edit-tag';\nimport { useFetchChunk } from '@/hooks/chunk-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { IChunk } from '@/interfaces/database/knowledge';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { Divider, Form, Input, Modal, Space, Switch } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDeleteChunkByIds } from '../../hooks';\nimport {\n  transformTagFeaturesArrayToObject,\n  transformTagFeaturesObjectToArray,\n} from '../../utils';\nimport { TagFeatureItem } from './tag-feature-item';\n\ntype FieldType = Pick<\n  IChunk,\n  'content_with_weight' | 'tag_kwd' | 'question_kwd' | 'important_kwd'\n>;\n\ninterface kFProps {\n  doc_id: string;\n  chunkId: string | undefined;\n  parserId: string;\n}\n\nconst ChunkCreatingModal: React.FC<IModalProps<any> & kFProps> = ({\n  doc_id,\n  chunkId,\n  hideModal,\n  onOk,\n  loading,\n  parserId,\n}) => {\n  const [form] = Form.useForm();\n  const [checked, setChecked] = useState(false);\n  const { removeChunk } = useDeleteChunkByIds();\n  const { data } = useFetchChunk(chunkId);\n  const { t } = useTranslation();\n\n  const isTagParser = parserId === 'tag';\n\n  const handleOk = useCallback(async () => {\n    try {\n      const values = await form.validateFields();\n      console.log('🚀 ~ handleOk ~ values:', values);\n\n      onOk?.({\n        ...values,\n        tag_feas: transformTagFeaturesArrayToObject(values.tag_feas),\n        available_int: checked ? 1 : 0, // available_int\n      });\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    }\n  }, [checked, form, onOk]);\n\n  const handleRemove = useCallback(() => {\n    if (chunkId) {\n      return removeChunk([chunkId], doc_id);\n    }\n  }, [chunkId, doc_id, removeChunk]);\n\n  const handleCheck = useCallback(() => {\n    setChecked(!checked);\n  }, [checked]);\n\n  useEffect(() => {\n    if (data?.code === 0) {\n      const { available_int, tag_feas } = data.data;\n      form.setFieldsValue({\n        ...(data.data || {}),\n        tag_feas: transformTagFeaturesObjectToArray(tag_feas),\n      });\n\n      setChecked(available_int !== 0);\n    }\n  }, [data, form, chunkId]);\n\n  return (\n    <Modal\n      title={`${chunkId ? t('common.edit') : t('common.create')} ${t('chunk.chunk')}`}\n      open={true}\n      onOk={handleOk}\n      onCancel={hideModal}\n      okButtonProps={{ loading }}\n      destroyOnClose\n    >\n      <Form form={form} autoComplete=\"off\" layout={'vertical'}>\n        <Form.Item<FieldType>\n          label={t('chunk.chunk')}\n          name=\"content_with_weight\"\n          rules={[{ required: true, message: t('chunk.chunkMessage') }]}\n        >\n          <Input.TextArea autoSize={{ minRows: 4, maxRows: 10 }} />\n        </Form.Item>\n\n        <Form.Item<FieldType> label={t('chunk.keyword')} name=\"important_kwd\">\n          <EditTag></EditTag>\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('chunk.question')}\n          name=\"question_kwd\"\n          tooltip={t('chunk.questionTip')}\n        >\n          <EditTag></EditTag>\n        </Form.Item>\n        {isTagParser && (\n          <Form.Item<FieldType>\n            label={t('knowledgeConfiguration.tagName')}\n            name=\"tag_kwd\"\n          >\n            <EditTag></EditTag>\n          </Form.Item>\n        )}\n\n        {!isTagParser && <TagFeatureItem></TagFeatureItem>}\n      </Form>\n\n      {chunkId && (\n        <section>\n          <Divider></Divider>\n          <Space size={'large'}>\n            <Switch\n              checkedChildren={t('chunk.enabled')}\n              unCheckedChildren={t('chunk.disabled')}\n              onChange={handleCheck}\n              checked={checked}\n            />\n\n            <span onClick={handleRemove}>\n              <DeleteOutlined /> {t('common.delete')}\n            </span>\n          </Space>\n        </section>\n      )}\n    </Modal>\n  );\n};\nexport default ChunkCreatingModal;\n","// This icon file is generated automatically.\nvar CheckCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"check-circle\", \"theme\": \"outlined\" };\nexport default CheckCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CheckCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CheckCircleOutlined = function CheckCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CheckCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CheckCircleOutlined.displayName = 'CheckCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CheckCircleOutlined);","// This icon file is generated automatically.\nvar FilePdfOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M531.3 574.4l.3-1.4c5.8-23.9 13.1-53.7 7.4-80.7-3.8-21.3-19.5-29.6-32.9-30.2-15.8-.7-29.9 8.3-33.4 21.4-6.6 24-.7 56.8 10.1 98.6-13.6 32.4-35.3 79.5-51.2 107.5-29.6 15.3-69.3 38.9-75.2 68.7-1.2 5.5.2 12.5 3.5 18.8 3.7 7 9.6 12.4 16.5 15 3 1.1 6.6 2 10.8 2 17.6 0 46.1-14.2 84.1-79.4 5.8-1.9 11.8-3.9 17.6-5.9 27.2-9.2 55.4-18.8 80.9-23.1 28.2 15.1 60.3 24.8 82.1 24.8 21.6 0 30.1-12.8 33.3-20.5 5.6-13.5 2.9-30.5-6.2-39.6-13.2-13-45.3-16.4-95.3-10.2-24.6-15-40.7-35.4-52.4-65.8zM421.6 726.3c-13.9 20.2-24.4 30.3-30.1 34.7 6.7-12.3 19.8-25.3 30.1-34.7zm87.6-235.5c5.2 8.9 4.5 35.8.5 49.4-4.9-19.9-5.6-48.1-2.7-51.4.8.1 1.5.7 2.2 2zm-1.6 120.5c10.7 18.5 24.2 34.4 39.1 46.2-21.6 4.9-41.3 13-58.9 20.2-4.2 1.7-8.3 3.4-12.3 5 13.3-24.1 24.4-51.4 32.1-71.4zm155.6 65.5c.1.2.2.5-.4.9h-.2l-.2.3c-.8.5-9 5.3-44.3-8.6 40.6-1.9 45 7.3 45.1 7.4zm191.4-388.2L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494z\" } }] }, \"name\": \"file-pdf\", \"theme\": \"outlined\" };\nexport default FilePdfOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport FilePdfOutlinedSvg from \"@ant-design/icons-svg/es/asn/FilePdfOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar FilePdfOutlined = function FilePdfOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: FilePdfOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  FilePdfOutlined.displayName = 'FilePdfOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(FilePdfOutlined);","import { ReactComponent as FilterIcon } from '@/assets/filter.svg';\nimport { KnowledgeRouteKey } from '@/constants/knowledge';\nimport { IChunkListResult, useSelectChunkList } from '@/hooks/chunk-hooks';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useKnowledgeBaseId } from '@/hooks/knowledge-hooks';\nimport {\n  ArrowLeftOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  DeleteOutlined,\n  DownOutlined,\n  FilePdfOutlined,\n  PlusOutlined,\n  SearchOutlined,\n} from '@ant-design/icons';\nimport {\n  Button,\n  Checkbox,\n  Flex,\n  Input,\n  Menu,\n  MenuProps,\n  Popover,\n  Radio,\n  RadioChangeEvent,\n  Segmented,\n  SegmentedProps,\n  Space,\n  Typography,\n} from 'antd';\nimport { useCallback, useMemo, useState } from 'react';\nimport { Link } from 'umi';\nimport { ChunkTextMode } from '../../constant';\n\nconst { Text } = Typography;\n\ninterface IProps\n  extends Pick<\n    IChunkListResult,\n    'searchString' | 'handleInputChange' | 'available' | 'handleSetAvailable'\n  > {\n  checked: boolean;\n  selectAllChunk: (checked: boolean) => void;\n  createChunk: () => void;\n  removeChunk: () => void;\n  switchChunk: (available: number) => void;\n  changeChunkTextMode(mode: ChunkTextMode): void;\n}\n\nconst ChunkToolBar = ({\n  selectAllChunk,\n  checked,\n  createChunk,\n  removeChunk,\n  switchChunk,\n  changeChunkTextMode,\n  available,\n  handleSetAvailable,\n  searchString,\n  handleInputChange,\n}: IProps) => {\n  const data = useSelectChunkList();\n  const documentInfo = data?.documentInfo;\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const [isShowSearchBox, setIsShowSearchBox] = useState(false);\n  const { t } = useTranslate('chunk');\n\n  const handleSelectAllCheck = useCallback(\n    (e: any) => {\n      selectAllChunk(e.target.checked);\n    },\n    [selectAllChunk],\n  );\n\n  const handleSearchIconClick = () => {\n    setIsShowSearchBox(true);\n  };\n\n  const handleSearchBlur = () => {\n    if (!searchString?.trim()) {\n      setIsShowSearchBox(false);\n    }\n  };\n\n  const handleDelete = useCallback(() => {\n    removeChunk();\n  }, [removeChunk]);\n\n  const handleEnabledClick = useCallback(() => {\n    switchChunk(1);\n  }, [switchChunk]);\n\n  const handleDisabledClick = useCallback(() => {\n    switchChunk(0);\n  }, [switchChunk]);\n\n  const items: MenuProps['items'] = useMemo(() => {\n    return [\n      {\n        key: '1',\n        label: (\n          <>\n            <Checkbox onChange={handleSelectAllCheck} checked={checked}>\n              <b>{t('selectAll')}</b>\n            </Checkbox>\n          </>\n        ),\n      },\n      { type: 'divider' },\n      {\n        key: '2',\n        label: (\n          <Space onClick={handleEnabledClick}>\n            <CheckCircleOutlined />\n            <b>{t('enabledSelected')}</b>\n          </Space>\n        ),\n      },\n      {\n        key: '3',\n        label: (\n          <Space onClick={handleDisabledClick}>\n            <CloseCircleOutlined />\n            <b>{t('disabledSelected')}</b>\n          </Space>\n        ),\n      },\n      { type: 'divider' },\n      {\n        key: '4',\n        label: (\n          <Space onClick={handleDelete}>\n            <DeleteOutlined />\n            <b>{t('deleteSelected')}</b>\n          </Space>\n        ),\n      },\n    ];\n  }, [\n    checked,\n    handleSelectAllCheck,\n    handleDelete,\n    handleEnabledClick,\n    handleDisabledClick,\n    t,\n  ]);\n\n  const content = (\n    <Menu style={{ width: 200 }} items={items} selectable={false} />\n  );\n\n  const handleFilterChange = (e: RadioChangeEvent) => {\n    selectAllChunk(false);\n    handleSetAvailable(e.target.value);\n  };\n\n  const filterContent = (\n    <Radio.Group onChange={handleFilterChange} value={available}>\n      <Space direction=\"vertical\">\n        <Radio value={undefined}>{t('all')}</Radio>\n        <Radio value={1}>{t('enabled')}</Radio>\n        <Radio value={0}>{t('disabled')}</Radio>\n      </Space>\n    </Radio.Group>\n  );\n\n  return (\n    <Flex justify=\"space-between\" align=\"center\">\n      <Space size={'middle'}>\n        <Link\n          to={`/knowledge/${KnowledgeRouteKey.Dataset}?id=${knowledgeBaseId}`}\n        >\n          <ArrowLeftOutlined />\n        </Link>\n        <FilePdfOutlined />\n        <Text ellipsis={{ tooltip: documentInfo?.name }} style={{ width: 150 }}>\n          {documentInfo?.name}\n        </Text>\n      </Space>\n      <Space>\n        <Segmented\n          options={[\n            { label: t(ChunkTextMode.Full), value: ChunkTextMode.Full },\n            { label: t(ChunkTextMode.Ellipse), value: ChunkTextMode.Ellipse },\n          ]}\n          onChange={changeChunkTextMode as SegmentedProps['onChange']}\n        />\n        <Popover content={content} placement=\"bottom\" arrow={false}>\n          <Button>\n            {t('bulk')}\n            <DownOutlined />\n          </Button>\n        </Popover>\n        {isShowSearchBox ? (\n          <Input\n            size=\"middle\"\n            placeholder={t('search')}\n            prefix={<SearchOutlined />}\n            allowClear\n            onChange={handleInputChange}\n            onBlur={handleSearchBlur}\n            value={searchString}\n          />\n        ) : (\n          <Button icon={<SearchOutlined />} onClick={handleSearchIconClick} />\n        )}\n\n        <Popover content={filterContent} placement=\"bottom\" arrow={false}>\n          <Button icon={<FilterIcon />} />\n        </Popover>\n        <Button\n          icon={<PlusOutlined />}\n          type=\"primary\"\n          onClick={() => createChunk()}\n        />\n      </Space>\n    </Flex>\n  );\n};\n\nexport default ChunkToolBar;\n","import { useGetKnowledgeSearchParams } from '@/hooks/route-hook';\nimport { api_host } from '@/utils/api';\nimport { useSize } from 'ahooks';\nimport { CustomTextRenderer } from 'node_modules/react-pdf/dist/esm/shared/types';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nexport const useDocumentResizeObserver = () => {\n  const [containerWidth, setContainerWidth] = useState<number>();\n  const [containerRef, setContainerRef] = useState<HTMLElement | null>(null);\n  const size = useSize(containerRef);\n\n  const onResize = useCallback((width?: number) => {\n    if (width) {\n      setContainerWidth(width);\n    }\n  }, []);\n\n  useEffect(() => {\n    onResize(size?.width);\n  }, [size?.width, onResize]);\n\n  return { containerWidth, setContainerRef };\n};\n\nfunction highlightPattern(text: string, pattern: string, pageNumber: number) {\n  if (pageNumber === 2) {\n    return `<mark>${text}</mark>`;\n  }\n  if (text.trim() !== '' && pattern.match(text)) {\n    // return pattern.replace(text, (value) => `<mark>${value}</mark>`);\n    return `<mark>${text}</mark>`;\n  }\n  return text.replace(pattern, (value) => `<mark>${value}</mark>`);\n}\n\nexport const useHighlightText = (searchText: string = '') => {\n  const textRenderer: CustomTextRenderer = useCallback(\n    (textItem) => {\n      return highlightPattern(textItem.str, searchText, textItem.pageNumber);\n    },\n    [searchText],\n  );\n\n  return textRenderer;\n};\n\nexport const useGetDocumentUrl = () => {\n  const { documentId } = useGetKnowledgeSearchParams();\n\n  const url = useMemo(() => {\n    return `${api_host}/document/get/${documentId}`;\n  }, [documentId]);\n\n  return url;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"documentContainer\":\"documentContainer___TU9k2\"};","import { Skeleton } from 'antd';\nimport { memo, useEffect, useRef } from 'react';\nimport {\n  AreaHighlight,\n  Highlight,\n  IHighlight,\n  PdfHighlighter,\n  PdfLoader,\n  Popup,\n} from 'react-pdf-highlighter';\nimport { useGetDocumentUrl } from './hooks';\n\nimport { useCatchDocumentError } from '@/components/pdf-previewer/hooks';\nimport FileError from '@/pages/document-viewer/file-error';\nimport styles from './index.less';\n\ninterface IProps {\n  highlights: IHighlight[];\n  setWidthAndHeight: (width: number, height: number) => void;\n}\nconst HighlightPopup = ({\n  comment,\n}: {\n  comment: { text: string; emoji: string };\n}) =>\n  comment.text ? (\n    <div className=\"Highlight__popup\">\n      {comment.emoji} {comment.text}\n    </div>\n  ) : null;\n\n// TODO: merge with DocumentPreviewer\nconst Preview = ({ highlights: state, setWidthAndHeight }: IProps) => {\n  const url = useGetDocumentUrl();\n\n  const ref = useRef<(highlight: IHighlight) => void>(() => {});\n  const error = useCatchDocumentError(url);\n\n  const resetHash = () => {};\n\n  useEffect(() => {\n    if (state.length > 0) {\n      ref?.current(state[0]);\n    }\n  }, [state]);\n\n  return (\n    <div className={styles.documentContainer}>\n      <PdfLoader\n        url={url}\n        beforeLoad={<Skeleton active />}\n        workerSrc=\"/pdfjs-dist/pdf.worker.min.js\"\n        errorMessage={<FileError>{error}</FileError>}\n      >\n        {(pdfDocument) => {\n          pdfDocument.getPage(1).then((page) => {\n            const viewport = page.getViewport({ scale: 1 });\n            const width = viewport.width;\n            const height = viewport.height;\n            setWidthAndHeight(width, height);\n          });\n\n          return (\n            <PdfHighlighter\n              pdfDocument={pdfDocument}\n              enableAreaSelection={(event) => event.altKey}\n              onScrollChange={resetHash}\n              scrollRef={(scrollTo) => {\n                ref.current = scrollTo;\n              }}\n              onSelectionFinished={() => null}\n              highlightTransform={(\n                highlight,\n                index,\n                setTip,\n                hideTip,\n                viewportToScaled,\n                screenshot,\n                isScrolledTo,\n              ) => {\n                const isTextHighlight = !Boolean(\n                  highlight.content && highlight.content.image,\n                );\n\n                const component = isTextHighlight ? (\n                  <Highlight\n                    isScrolledTo={isScrolledTo}\n                    position={highlight.position}\n                    comment={highlight.comment}\n                  />\n                ) : (\n                  <AreaHighlight\n                    isScrolledTo={isScrolledTo}\n                    highlight={highlight}\n                    onChange={() => {}}\n                  />\n                );\n\n                return (\n                  <Popup\n                    popupContent={<HighlightPopup {...highlight} />}\n                    onMouseOver={(popupContent) =>\n                      setTip(highlight, () => popupContent)\n                    }\n                    onMouseOut={hideTip}\n                    key={index}\n                  >\n                    {component}\n                  </Popup>\n                );\n              }}\n              highlights={state}\n            />\n          );\n        }}\n      </PdfLoader>\n    </div>\n  );\n};\n\nexport default memo(Preview);\n","// extracted by mini-css-extract-plugin\nexport default {\"chunkPage\":\"chunkPage___Mlm1d\",\"filter\":\"filter___z5K1X\",\"pagePdfWrapper\":\"pagePdfWrapper___NxUun\",\"pageWrapper\":\"pageWrapper___wkiwd\",\"pageContent\":\"pageContent___fubpP\",\"spin\":\"spin___OiDil\",\"documentPreview\":\"documentPreview___tbu9J\",\"chunkContainer\":\"chunkContainer___m_m6K\",\"chunkOtherContainer\":\"chunkOtherContainer___bj5TE\",\"pageFooter\":\"pageFooter___O05bO\",\"container\":\"container___CzJsH\",\"content\":\"content___bh0q5\",\"context\":\"context___cC9j3\",\"footer\":\"footer___W4r5v\",\"text\":\"text___fZ1Dv\",\"card\":\"card___Aqbq7\"};","import { useFetchNextChunkList, useSwitchChunk } from '@/hooks/chunk-hooks';\nimport type { PaginationProps } from 'antd';\nimport { Divider, Flex, Pagination, Space, Spin, message } from 'antd';\nimport classNames from 'classnames';\nimport { useCallback, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ChunkCard from './components/chunk-card';\nimport CreatingModal from './components/chunk-creating-modal';\nimport ChunkToolBar from './components/chunk-toolbar';\nimport DocumentPreview from './components/document-preview/preview';\nimport {\n  useChangeChunkTextMode,\n  useDeleteChunkByIds,\n  useGetChunkHighlights,\n  useHandleChunkCardClick,\n  useUpdateChunk,\n} from './hooks';\n\nimport styles from './index.less';\n\nconst Chunk = () => {\n  const [selectedChunkIds, setSelectedChunkIds] = useState<string[]>([]);\n  const { removeChunk } = useDeleteChunkByIds();\n  const {\n    data: { documentInfo, data = [], total },\n    pagination,\n    loading,\n    searchString,\n    handleInputChange,\n    available,\n    handleSetAvailable,\n  } = useFetchNextChunkList();\n  const { handleChunkCardClick, selectedChunkId } = useHandleChunkCardClick();\n  const isPdf = documentInfo?.type === 'pdf';\n\n  const { t } = useTranslation();\n  const { changeChunkTextMode, textMode } = useChangeChunkTextMode();\n  const { switchChunk } = useSwitchChunk();\n  const {\n    chunkUpdatingLoading,\n    onChunkUpdatingOk,\n    showChunkUpdatingModal,\n    hideChunkUpdatingModal,\n    chunkId,\n    chunkUpdatingVisible,\n    documentId,\n  } = useUpdateChunk();\n\n  const onPaginationChange: PaginationProps['onShowSizeChange'] = (\n    page,\n    size,\n  ) => {\n    setSelectedChunkIds([]);\n    pagination.onChange?.(page, size);\n  };\n\n  const selectAllChunk = useCallback(\n    (checked: boolean) => {\n      setSelectedChunkIds(checked ? data.map((x) => x.chunk_id) : []);\n    },\n    [data],\n  );\n\n  const handleSingleCheckboxClick = useCallback(\n    (chunkId: string, checked: boolean) => {\n      setSelectedChunkIds((previousIds) => {\n        const idx = previousIds.findIndex((x) => x === chunkId);\n        const nextIds = [...previousIds];\n        if (checked && idx === -1) {\n          nextIds.push(chunkId);\n        } else if (!checked && idx !== -1) {\n          nextIds.splice(idx, 1);\n        }\n        return nextIds;\n      });\n    },\n    [],\n  );\n\n  const showSelectedChunkWarning = useCallback(() => {\n    message.warning(t('message.pleaseSelectChunk'));\n  }, [t]);\n\n  const handleRemoveChunk = useCallback(async () => {\n    if (selectedChunkIds.length > 0) {\n      const resCode: number = await removeChunk(selectedChunkIds, documentId);\n      if (resCode === 0) {\n        setSelectedChunkIds([]);\n      }\n    } else {\n      showSelectedChunkWarning();\n    }\n  }, [selectedChunkIds, documentId, removeChunk, showSelectedChunkWarning]);\n\n  const handleSwitchChunk = useCallback(\n    async (available?: number, chunkIds?: string[]) => {\n      let ids = chunkIds;\n      if (!chunkIds) {\n        ids = selectedChunkIds;\n        if (selectedChunkIds.length === 0) {\n          showSelectedChunkWarning();\n          return;\n        }\n      }\n\n      const resCode: number = await switchChunk({\n        chunk_ids: ids,\n        available_int: available,\n        doc_id: documentId,\n      });\n      if (!chunkIds && resCode === 0) {\n      }\n    },\n    [switchChunk, documentId, selectedChunkIds, showSelectedChunkWarning],\n  );\n\n  const { highlights, setWidthAndHeight } =\n    useGetChunkHighlights(selectedChunkId);\n\n  return (\n    <>\n      <div className={styles.chunkPage}>\n        <ChunkToolBar\n          selectAllChunk={selectAllChunk}\n          createChunk={showChunkUpdatingModal}\n          removeChunk={handleRemoveChunk}\n          checked={selectedChunkIds.length === data.length}\n          switchChunk={handleSwitchChunk}\n          changeChunkTextMode={changeChunkTextMode}\n          searchString={searchString}\n          handleInputChange={handleInputChange}\n          available={available}\n          handleSetAvailable={handleSetAvailable}\n        ></ChunkToolBar>\n        <Divider></Divider>\n        <Flex flex={1} gap={'middle'}>\n          <Flex\n            vertical\n            className={isPdf ? styles.pagePdfWrapper : styles.pageWrapper}\n          >\n            <Spin spinning={loading} className={styles.spin} size=\"large\">\n              <div className={styles.pageContent}>\n                <Space\n                  direction=\"vertical\"\n                  size={'middle'}\n                  className={classNames(styles.chunkContainer, {\n                    [styles.chunkOtherContainer]: !isPdf,\n                  })}\n                >\n                  {data.map((item) => (\n                    <ChunkCard\n                      item={item}\n                      key={item.chunk_id}\n                      editChunk={showChunkUpdatingModal}\n                      checked={selectedChunkIds.some(\n                        (x) => x === item.chunk_id,\n                      )}\n                      handleCheckboxClick={handleSingleCheckboxClick}\n                      switchChunk={handleSwitchChunk}\n                      clickChunkCard={handleChunkCardClick}\n                      selected={item.chunk_id === selectedChunkId}\n                      textMode={textMode}\n                    ></ChunkCard>\n                  ))}\n                </Space>\n              </div>\n            </Spin>\n            <div className={styles.pageFooter}>\n              <Pagination\n                {...pagination}\n                total={total}\n                size={'small'}\n                onChange={onPaginationChange}\n              />\n            </div>\n          </Flex>\n          {isPdf && (\n            <section className={styles.documentPreview}>\n              <DocumentPreview\n                highlights={highlights}\n                setWidthAndHeight={setWidthAndHeight}\n              ></DocumentPreview>\n            </section>\n          )}\n        </Flex>\n      </div>\n      {chunkUpdatingVisible && (\n        <CreatingModal\n          doc_id={documentId}\n          chunkId={chunkId}\n          hideModal={hideChunkUpdatingModal}\n          visible={chunkUpdatingVisible}\n          loading={chunkUpdatingLoading}\n          onOk={onChunkUpdatingOk}\n          parserId={documentInfo.parser_id}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Chunk;\n"],"names":["props","ref","AntdIcon","icon","ChunkTextMode","_ref","item","checked","handleCheckboxClick","editChunk","switchChunk","selected","clickChunkCard","textMode","available","Number","available_int","_useState","useState","_useState2","_slicedToArray","enabled","setEnabled","theme","useTheme","useEffect","_jsx","Card","className","classNames","styles","_defineProperty","concat","children","_jsxs","Flex","gap","justify","Checkbox","onChange","e","chunk_id","target","image_id","Popover","placement","content","Image","id","onDoubleClick","onClick","dangerouslySetInnerHTML","__html","DOMPurify","content_with_weight","Ellipse","Switch","useGetChunkHighlights","selectedChunkId","_useState3","width","height","_useState4","size","setSize","selectedChunk","_data$data$find","_data$data","data","useSelectChunkList","find","x","useGetSelectedChunk","highlights","useMemo","buildChunkHighlights","setWidthAndHeight","useCallback","pre","useDeleteChunkByIds","deleteChunk","useDeleteChunk","showDeleteConfirm","useShowDeleteConfirm","removeChunk","chunkIds","documentId","doc_id","onOk","transformTagFeaturesArrayToObject","arguments","length","undefined","reduce","cur","tag","frequency","transformTagFeaturesObjectToArray","object","Object","keys","key","push","FieldKey","TagFeatureItem","_knowledgeConfigurati3","form","Form","useFormInstance","t","useTranslation","knowledgeConfiguration","useFetchKnowledgeBaseConfiguration","_useFetchTagListByKno","useFetchTagListByKnowledgeIds","setKnowledgeIds","list","tagKnowledgeIds","_knowledgeConfigurati","_knowledgeConfigurati2","parser_config","tag_kb_ids","options","map","value","label","filterOptions","index","_form$getFieldValue","getFieldValue","filter","idx","some","y","Item","List","name","initialValue","fields","add","remove","_Fragment","_ref2","restField","_objectWithoutProperties","_excluded","_objectSpread","rules","required","message","Select","showSearch","placeholder","InputNumber","max","min","MinusCircleOutlined","Button","type","block","PlusOutlined","chunkId","hideModal","loading","parserId","_Form$useForm","useForm","setChecked","useFetchChunk","isTagParser","handleOk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","validateFields","sent","console","log","tag_feas","t0","stop","handleRemove","handleCheck","code","setFieldsValue","Modal","title","open","onCancel","okButtonProps","destroyOnClose","autoComplete","layout","Input","TextArea","autoSize","minRows","maxRows","EditTag","tooltip","Divider","Space","checkedChildren","unCheckedChildren","DeleteOutlined","Text","Typography","selectAllChunk","createChunk","changeChunkTextMode","handleSetAvailable","searchString","handleInputChange","documentInfo","knowledgeBaseId","useKnowledgeBaseId","isShowSearchBox","setIsShowSearchBox","useTranslate","handleSelectAllCheck","handleDelete","handleEnabledClick","handleDisabledClick","items","CheckCircleOutlined","CloseCircleOutlined","Menu","style","selectable","filterContent","Radio","direction","align","Link","to","KnowledgeRouteKey","Dataset","ArrowLeftOutlined","FilePdfOutlined","ellipsis","Segmented","Full","arrow","DownOutlined","prefix","SearchOutlined","allowClear","onBlur","trim","FilterIcon","HighlightPopup","comment","text","emoji","Preview","state","url","useGetKnowledgeSearchParams","api_host","useRef","error","useCatchDocumentError","resetHash","current","PdfLoader","beforeLoad","Skeleton","active","workerSrc","errorMessage","FileError","pdfDocument","getPage","then","page","viewport","getViewport","scale","PdfHighlighter","enableAreaSelection","event","altKey","onScrollChange","scrollRef","scrollTo","onSelectionFinished","highlightTransform","highlight","setTip","hideTip","viewportToScaled","screenshot","isScrolledTo","component","Boolean","image","Highlight","position","AreaHighlight","Popup","popupContent","onMouseOver","onMouseOut","memo","selectedChunkIds","setSelectedChunkIds","_useFetchNextChunkLis","useFetchNextChunkList","_useFetchNextChunkLis2","_useFetchNextChunkLis3","total","pagination","_useHandleChunkCardCl","setSelectedChunkId","handleChunkCardClick","useHandleChunkCardClick","isPdf","_useChangeChunkTextMo","_useState5","_useState6","setTextMode","mode","useChangeChunkTextMode","useSwitchChunk","_useUpdateChunk","_useState7","_useState8","setChunkId","_useSetModalState","useSetModalState","chunkUpdatingVisible","visible","hideChunkUpdatingModal","showModal","_useCreateChunk","useCreateChunk","onChunkUpdatingOk","params","_x","apply","handleShowChunkUpdatingModal","_callee2","_context2","_x2","chunkUpdatingLoading","showChunkUpdatingModal","useUpdateChunk","handleSingleCheckboxClick","previousIds","findIndex","nextIds","_toConsumableArray","splice","showSelectedChunkWarning","warning","handleRemoveChunk","handleSwitchChunk","ids","abrupt","chunk_ids","_useGetChunkHighlight","ChunkToolBar","flex","vertical","Spin","spinning","ChunkCard","Pagination","_pagination$onChange","call","DocumentPreview","CreatingModal","parser_id"],"sourceRoot":""}