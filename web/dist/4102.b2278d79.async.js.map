{"version":3,"file":"4102.b2278d79.async.js","mappings":"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","sources":["webpack:///./src/components/knowledge-base-item.tsx","webpack:///./src/components/rerank.tsx","webpack:///./src/components/top-n-item.tsx","webpack:///./src/components/ui/badge.tsx","webpack:///./src/components/ui/command.tsx","webpack:///./src/components/ui/form.tsx","webpack:///./src/components/ui/label.tsx","webpack:///./src/components/ui/multi-select.tsx","webpack:///./src/components/ui/popover.tsx","webpack:///./src/components/ui/select.tsx","webpack:///./src/components/ui/switch.tsx","webpack:///./src/utils/form.ts"],"sourcesContent":["import { DocumentParserType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useFetchKnowledgeList } from '@/hooks/knowledge-hooks';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Avatar as AntAvatar, Form, Select, Space } from 'antd';\nimport { Book } from 'lucide-react';\nimport { useFormContext } from 'react-hook-form';\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar';\nimport { FormControl, FormField, FormItem, FormLabel } from './ui/form';\nimport { MultiSelect } from './ui/multi-select';\n\ninterface KnowledgeBaseItemProps {\n  label?: string;\n  tooltipText?: string;\n  name?: string;\n  required?: boolean;\n  onChange?(): void;\n}\n\nconst KnowledgeBaseItem = ({\n  label,\n  tooltipText,\n  name,\n  required = true,\n  onChange,\n}: KnowledgeBaseItemProps) => {\n  const { t } = useTranslate('chat');\n\n  const { list: knowledgeList } = useFetchKnowledgeList(true);\n\n  const filteredKnowledgeList = knowledgeList.filter(\n    (x) => x.parser_id !== DocumentParserType.Tag,\n  );\n\n  const knowledgeOptions = filteredKnowledgeList.map((x) => ({\n    label: (\n      <Space>\n        <AntAvatar size={20} icon={<UserOutlined />} src={x.avatar} />\n        {x.name}\n      </Space>\n    ),\n    value: x.id,\n  }));\n\n  return (\n    <Form.Item\n      label={label || t('knowledgeBases')}\n      name={name || 'kb_ids'}\n      tooltip={tooltipText || t('knowledgeBasesTip')}\n      rules={[\n        {\n          required,\n          message: t('knowledgeBasesMessage'),\n          type: 'array',\n        },\n      ]}\n    >\n      <Select\n        mode=\"multiple\"\n        options={knowledgeOptions}\n        placeholder={t('knowledgeBasesMessage')}\n        onChange={onChange}\n      ></Select>\n    </Form.Item>\n  );\n};\n\nexport default KnowledgeBaseItem;\n\nexport function KnowledgeBaseFormField() {\n  const form = useFormContext();\n  const { t } = useTranslate('chat');\n\n  const { list: knowledgeList } = useFetchKnowledgeList(true);\n\n  const filteredKnowledgeList = knowledgeList.filter(\n    (x) => x.parser_id !== DocumentParserType.Tag,\n  );\n\n  const knowledgeOptions = filteredKnowledgeList.map((x) => ({\n    label: x.name,\n    value: x.id,\n    icon: () => (\n      <Avatar className=\"size-4 mr-2\">\n        <AvatarImage src={x.avatar} />\n        <AvatarFallback>\n          <Book />\n        </AvatarFallback>\n      </Avatar>\n    ),\n  }));\n\n  return (\n    <FormField\n      control={form.control}\n      name=\"kb_ids\"\n      render={({ field }) => (\n        <FormItem>\n          <FormLabel>{t('knowledgeBases')}</FormLabel>\n          <FormControl>\n            <MultiSelect\n              options={knowledgeOptions}\n              onValueChange={field.onChange}\n              placeholder={t('knowledgeBasesMessage')}\n              variant=\"inverted\"\n              maxCount={100}\n              defaultValue={field.value}\n              {...field}\n            />\n          </FormControl>\n        </FormItem>\n      )}\n    />\n  );\n}\n","import { LlmModelType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useSelectLlmOptionsByModelType } from '@/hooks/llm-hooks';\nimport { Select as AntSelect, Form, message, Slider } from 'antd';\nimport { useCallback } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { z } from 'zod';\nimport { SliderInputFormField } from './slider-input-form-field';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\nimport { RAGFlowSelect } from './ui/select';\n\ntype FieldType = {\n  rerank_id?: string;\n  top_k?: number;\n};\n\nexport const RerankItem = () => {\n  const { t } = useTranslate('knowledgeDetails');\n  const allOptions = useSelectLlmOptionsByModelType();\n  const [messageApi, contextHolder] = message.useMessage();\n\n  const handleChange = useCallback(\n    (val: string) => {\n      if (val) {\n        messageApi.open({\n          type: 'warning',\n          content: t('reRankModelWaring'),\n        });\n      }\n    },\n    [messageApi, t],\n  );\n\n  return (\n    <>\n      {contextHolder}\n      <Form.Item\n        label={t('rerankModel')}\n        name={'rerank_id'}\n        tooltip={t('rerankTip')}\n      >\n        <AntSelect\n          options={allOptions[LlmModelType.Rerank]}\n          allowClear\n          placeholder={t('rerankPlaceholder')}\n          onChange={handleChange}\n        />\n      </Form.Item>\n    </>\n  );\n};\n\nexport const topKSchema = {\n  top_k: z.number().optional(),\n};\n\nexport const initialTopKValue = {\n  top_k: 1024,\n};\n\nconst Rerank = () => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <RerankItem></RerankItem>\n      <Form.Item noStyle dependencies={['rerank_id']}>\n        {({ getFieldValue }) => {\n          const rerankId = getFieldValue('rerank_id');\n          return (\n            rerankId && (\n              <Form.Item<FieldType>\n                label={t('topK')}\n                name={'top_k'}\n                initialValue={1024}\n                tooltip={t('topKTip')}\n              >\n                <Slider max={2048} min={1} />\n              </Form.Item>\n            )\n          );\n        }}\n      </Form.Item>\n    </>\n  );\n};\n\nexport default Rerank;\n\nconst RerankId = 'rerank_id';\n\nfunction RerankFormField() {\n  const form = useFormContext();\n  const { t } = useTranslate('knowledgeDetails');\n  const allOptions = useSelectLlmOptionsByModelType();\n  const options = allOptions[LlmModelType.Rerank];\n\n  return (\n    <FormField\n      control={form.control}\n      name={RerankId}\n      render={({ field }) => (\n        <FormItem>\n          <FormLabel tooltip={t('rerankTip')}>{t('rerankModel')}</FormLabel>\n          <FormControl>\n            <RAGFlowSelect\n              allowClear\n              {...field}\n              options={options}\n            ></RAGFlowSelect>\n          </FormControl>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n\nexport function RerankFormFields() {\n  const { watch } = useFormContext();\n  const { t } = useTranslate('knowledgeDetails');\n  const rerankId = watch(RerankId);\n\n  return (\n    <>\n      <RerankFormField></RerankFormField>\n      {rerankId && (\n        <SliderInputFormField\n          name={'top_k'}\n          label={t('topK')}\n          max={2048}\n          min={1}\n          tooltip={t('topKTip')}\n        ></SliderInputFormField>\n      )}\n    </>\n  );\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Slider } from 'antd';\nimport { SliderInputFormField } from './slider-input-form-field';\n\ntype FieldType = {\n  top_n?: number;\n};\n\ninterface IProps {\n  initialValue?: number;\n  max?: number;\n}\n\nconst TopNItem = ({ initialValue = 8, max = 30 }: IProps) => {\n  const { t } = useTranslate('chat');\n\n  return (\n    <Form.Item<FieldType>\n      label={t('topN')}\n      name={'top_n'}\n      initialValue={initialValue}\n      tooltip={t('topNTip')}\n    >\n      <Slider max={max} />\n    </Form.Item>\n  );\n};\n\nexport default TopNItem;\n\ninterface SimilaritySliderFormFieldProps {\n  max?: number;\n}\n\nexport function TopNFormField({ max = 30 }: SimilaritySliderFormFieldProps) {\n  const { t } = useTranslate('chat');\n\n  return (\n    <SliderInputFormField\n      name={'top_n'}\n      label={t('topN')}\n      max={max}\n      tooltip={t('topNTip')}\n    ></SliderInputFormField>\n  );\n}\n","import { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary:\n          'border-transparent bg-background-card text-text-sub-title-invert hover:bg-secondary/80 rounded-md',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n        tertiary:\n          'border-transparent bg-colors-background-core-strong text-colors-text-persist-light hover:bg-colors-background-core-strong/80',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n","'use client';\n\nimport { type DialogProps } from '@radix-ui/react-dialog';\nimport { Command as CommandPrimitive } from 'cmdk';\nimport { Search } from 'lucide-react';\nimport * as React from 'react';\n\nimport { Dialog, DialogContent } from '@/components/ui/dialog';\nimport { cn } from '@/lib/utils';\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      'flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground',\n      className,\n    )}\n    {...props}\n  />\n));\nCommand.displayName = CommandPrimitive.displayName;\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        'flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50',\n        className,\n      )}\n      {...props}\n    />\n  </div>\n));\n\nCommandInput.displayName = CommandPrimitive.Input.displayName;\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn('max-h-[300px] overflow-y-auto overflow-x-hidden', className)}\n    {...props}\n  />\n));\n\nCommandList.displayName = CommandPrimitive.List.displayName;\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n));\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName;\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      'overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground',\n      className,\n    )}\n    {...props}\n  />\n));\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName;\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 h-px bg-border', className)}\n    {...props}\n  />\n));\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName;\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className,\n    )}\n    {...props}\n  />\n));\n\nCommandItem.displayName = CommandPrimitive.Item.displayName;\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        'ml-auto text-xs tracking-widest text-muted-foreground',\n        className,\n      )}\n      {...props}\n    />\n  );\n};\nCommandShortcut.displayName = 'CommandShortcut';\n\nexport {\n  Command,\n  CommandDialog,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n  CommandShortcut,\n};\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { Slot } from '@radix-ui/react-slot';\nimport * as React from 'react';\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from 'react-hook-form';\n\nimport { Label } from '@/components/ui/label';\nimport { cn } from '@/lib/utils';\nimport { FormTooltip } from './tooltip';\n\nconst Form = FormProvider;\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue,\n);\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue,\n);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState, formState } = useFormContext();\n\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error('useFormField should be used within <FormField>');\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\nconst InnerFormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn('space-y-2', className)} {...props} />\n    </FormItemContext.Provider>\n  );\n});\n\nInnerFormItem.displayName = 'FormItem';\n\nconst FormItem = React.memo(InnerFormItem);\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & {\n    tooltip?: React.ReactNode;\n  }\n>(({ className, tooltip, ...props }, ref) => {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && 'text-destructive', className, 'flex pb-0.5')}\n      htmlFor={formItemId}\n      {...props}\n    >\n      {props.children}\n      {tooltip && <FormTooltip tooltip={tooltip}></FormTooltip>}\n    </Label>\n  );\n});\nFormLabel.displayName = 'FormLabel';\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } =\n    useFormField();\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n});\nFormControl.displayName = 'FormControl';\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn('text-sm text-muted-foreground', className)}\n      {...props}\n    />\n  );\n});\nFormDescription.displayName = 'FormDescription';\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message) : children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn('text-sm font-medium text-destructive', className)}\n      {...props}\n    >\n      {body}\n    </p>\n  );\n});\nFormMessage.displayName = 'FormMessage';\n\nexport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  useFormField,\n};\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","// src/components/multi-select.tsx\n\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport {\n  CheckIcon,\n  ChevronDown,\n  WandSparkles,\n  XCircle,\n  XIcon,\n} from 'lucide-react';\nimport * as React from 'react';\n\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n} from '@/components/ui/command';\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\nimport { Separator } from '@/components/ui/separator';\nimport { cn } from '@/lib/utils';\n\n/**\n * Variants for the multi-select component to handle different styles.\n * Uses class-variance-authority (cva) to define different styles based on \"variant\" prop.\n */\nconst multiSelectVariants = cva(\n  'm-1 transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110 duration-300',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-foreground/10 text-foreground bg-card hover:bg-card/80',\n        secondary:\n          'border-foreground/10 bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        inverted: 'inverted',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\n/**\n * Props for MultiSelect component\n */\ninterface MultiSelectProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof multiSelectVariants> {\n  /**\n   * An array of option objects to be displayed in the multi-select component.\n   * Each option object has a label, value, and an optional icon.\n   */\n  options: {\n    /** The text to display for the option. */\n    label: string;\n    /** The unique value associated with the option. */\n    value: string;\n    /** Optional icon component to display alongside the option. */\n    icon?: React.ComponentType<{ className?: string }>;\n  }[];\n\n  /**\n   * Callback function triggered when the selected values change.\n   * Receives an array of the new selected values.\n   */\n  onValueChange: (value: string[]) => void;\n\n  /** The default selected values when the component mounts. */\n  defaultValue?: string[];\n\n  /**\n   * Placeholder text to be displayed when no values are selected.\n   * Optional, defaults to \"Select options\".\n   */\n  placeholder?: string;\n\n  /**\n   * Animation duration in seconds for the visual effects (e.g., bouncing badges).\n   * Optional, defaults to 0 (no animation).\n   */\n  animation?: number;\n\n  /**\n   * Maximum number of items to display. Extra selected items will be summarized.\n   * Optional, defaults to 3.\n   */\n  maxCount?: number;\n\n  /**\n   * The modality of the popover. When set to true, interaction with outside elements\n   * will be disabled and only popover content will be visible to screen readers.\n   * Optional, defaults to false.\n   */\n  modalPopover?: boolean;\n\n  /**\n   * If true, renders the multi-select component as a child of another component.\n   * Optional, defaults to false.\n   */\n  asChild?: boolean;\n\n  /**\n   * Additional class names to apply custom styles to the multi-select component.\n   * Optional, can be used to add custom styles.\n   */\n  className?: string;\n}\n\nexport const MultiSelect = React.forwardRef<\n  HTMLButtonElement,\n  MultiSelectProps\n>(\n  (\n    {\n      options,\n      onValueChange,\n      variant,\n      defaultValue = [],\n      placeholder = 'Select options',\n      animation = 0,\n      maxCount = 3,\n      modalPopover = false,\n      asChild = false,\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    const [selectedValues, setSelectedValues] =\n      React.useState<string[]>(defaultValue);\n    const [isPopoverOpen, setIsPopoverOpen] = React.useState(false);\n    const [isAnimating, setIsAnimating] = React.useState(false);\n\n    const handleInputKeyDown = (\n      event: React.KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key === 'Enter') {\n        setIsPopoverOpen(true);\n      } else if (event.key === 'Backspace' && !event.currentTarget.value) {\n        const newSelectedValues = [...selectedValues];\n        newSelectedValues.pop();\n        setSelectedValues(newSelectedValues);\n        onValueChange(newSelectedValues);\n      }\n    };\n\n    const toggleOption = (option: string) => {\n      const newSelectedValues = selectedValues.includes(option)\n        ? selectedValues.filter((value) => value !== option)\n        : [...selectedValues, option];\n      setSelectedValues(newSelectedValues);\n      onValueChange(newSelectedValues);\n    };\n\n    const handleClear = () => {\n      setSelectedValues([]);\n      onValueChange([]);\n    };\n\n    const handleTogglePopover = () => {\n      setIsPopoverOpen((prev) => !prev);\n    };\n\n    const clearExtraOptions = () => {\n      const newSelectedValues = selectedValues.slice(0, maxCount);\n      setSelectedValues(newSelectedValues);\n      onValueChange(newSelectedValues);\n    };\n\n    const toggleAll = () => {\n      if (selectedValues.length === options.length) {\n        handleClear();\n      } else {\n        const allValues = options.map((option) => option.value);\n        setSelectedValues(allValues);\n        onValueChange(allValues);\n      }\n    };\n\n    return (\n      <Popover\n        open={isPopoverOpen}\n        onOpenChange={setIsPopoverOpen}\n        modal={modalPopover}\n      >\n        <PopoverTrigger asChild>\n          <Button\n            ref={ref}\n            {...props}\n            onClick={handleTogglePopover}\n            className={cn(\n              'flex w-full p-1 rounded-md border min-h-10 h-auto items-center justify-between bg-inherit hover:bg-inherit [&_svg]:pointer-events-auto',\n              className,\n            )}\n          >\n            {selectedValues.length > 0 ? (\n              <div className=\"flex justify-between items-center w-full\">\n                <div className=\"flex flex-wrap items-center\">\n                  {selectedValues.slice(0, maxCount).map((value) => {\n                    const option = options.find((o) => o.value === value);\n                    const IconComponent = option?.icon;\n                    return (\n                      <Badge\n                        key={value}\n                        className={cn(\n                          isAnimating ? 'animate-bounce' : '',\n                          multiSelectVariants({ variant }),\n                        )}\n                        style={{ animationDuration: `${animation}s` }}\n                      >\n                        {IconComponent && (\n                          <IconComponent className=\"h-4 w-4 mr-2\" />\n                        )}\n                        {option?.label}\n                        <XCircle\n                          className=\"ml-2 h-4 w-4 cursor-pointer\"\n                          onClick={(event) => {\n                            event.stopPropagation();\n                            toggleOption(value);\n                          }}\n                        />\n                      </Badge>\n                    );\n                  })}\n                  {selectedValues.length > maxCount && (\n                    <Badge\n                      className={cn(\n                        'bg-transparent text-foreground border-foreground/1 hover:bg-transparent',\n                        isAnimating ? 'animate-bounce' : '',\n                        multiSelectVariants({ variant }),\n                      )}\n                      style={{ animationDuration: `${animation}s` }}\n                    >\n                      {`+ ${selectedValues.length - maxCount} more`}\n                      <XCircle\n                        className=\"ml-2 h-4 w-4 cursor-pointer\"\n                        onClick={(event) => {\n                          event.stopPropagation();\n                          clearExtraOptions();\n                        }}\n                      />\n                    </Badge>\n                  )}\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <XIcon\n                    className=\"h-4 mx-2 cursor-pointer text-muted-foreground\"\n                    onClick={(event) => {\n                      event.stopPropagation();\n                      handleClear();\n                    }}\n                  />\n                  <Separator\n                    orientation=\"vertical\"\n                    className=\"flex min-h-6 h-full\"\n                  />\n                  <ChevronDown className=\"h-4 mx-2 cursor-pointer text-muted-foreground\" />\n                </div>\n              </div>\n            ) : (\n              <div className=\"flex items-center justify-between w-full mx-auto\">\n                <span className=\"text-sm text-muted-foreground mx-3\">\n                  {placeholder}\n                </span>\n                <ChevronDown className=\"h-4 cursor-pointer text-muted-foreground mx-2\" />\n              </div>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent\n          className=\"w-auto p-0\"\n          align=\"start\"\n          onEscapeKeyDown={() => setIsPopoverOpen(false)}\n        >\n          <Command>\n            <CommandInput\n              placeholder=\"Search...\"\n              onKeyDown={handleInputKeyDown}\n            />\n            <CommandList>\n              <CommandEmpty>No results found.</CommandEmpty>\n              <CommandGroup>\n                <CommandItem\n                  key=\"all\"\n                  onSelect={toggleAll}\n                  className=\"cursor-pointer\"\n                >\n                  <div\n                    className={cn(\n                      'mr-2 flex h-4 w-4 items-center justify-center rounded-sm border border-primary',\n                      selectedValues.length === options.length\n                        ? 'bg-primary text-primary-foreground'\n                        : 'opacity-50 [&_svg]:invisible',\n                    )}\n                  >\n                    <CheckIcon className=\"h-4 w-4\" />\n                  </div>\n                  <span>(Select All)</span>\n                </CommandItem>\n                {options.map((option) => {\n                  const isSelected = selectedValues.includes(option.value);\n                  return (\n                    <CommandItem\n                      key={option.value}\n                      onSelect={() => toggleOption(option.value)}\n                      className=\"cursor-pointer\"\n                    >\n                      <div\n                        className={cn(\n                          'mr-2 flex h-4 w-4 items-center justify-center rounded-sm border border-primary',\n                          isSelected\n                            ? 'bg-primary text-primary-foreground'\n                            : 'opacity-50 [&_svg]:invisible',\n                        )}\n                      >\n                        <CheckIcon className=\"h-4 w-4\" />\n                      </div>\n                      {option.icon && (\n                        <option.icon className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                      )}\n                      <span>{option.label}</span>\n                    </CommandItem>\n                  );\n                })}\n              </CommandGroup>\n              <CommandSeparator />\n              <CommandGroup>\n                <div className=\"flex items-center justify-between\">\n                  {selectedValues.length > 0 && (\n                    <>\n                      <CommandItem\n                        onSelect={handleClear}\n                        className=\"flex-1 justify-center cursor-pointer\"\n                      >\n                        Clear\n                      </CommandItem>\n                      <Separator\n                        orientation=\"vertical\"\n                        className=\"flex min-h-6 h-full\"\n                      />\n                    </>\n                  )}\n                  <CommandItem\n                    onSelect={() => setIsPopoverOpen(false)}\n                    className=\"flex-1 justify-center cursor-pointer max-w-full\"\n                  >\n                    Close\n                  </CommandItem>\n                </div>\n              </CommandGroup>\n            </CommandList>\n          </Command>\n        </PopoverContent>\n        {animation > 0 && selectedValues.length > 0 && (\n          <WandSparkles\n            className={cn(\n              'cursor-pointer my-2 text-foreground bg-background w-3 h-3',\n              isAnimating ? '' : 'text-muted-foreground',\n            )}\n            onClick={() => setIsAnimating(!isAnimating)}\n          />\n        )}\n      </Popover>\n    );\n  },\n);\n\nMultiSelect.displayName = 'MultiSelect';\n","'use client';\n\nimport * as PopoverPrimitive from '@radix-ui/react-popover';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Popover = PopoverPrimitive.Root;\n\nconst PopoverTrigger = PopoverPrimitive.Trigger;\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        'z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        className,\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n));\nPopoverContent.displayName = PopoverPrimitive.Content.displayName;\n\nexport { Popover, PopoverContent, PopoverTrigger };\n","'use client';\n\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { Check, ChevronDown, ChevronUp, X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\nimport { ControllerRenderProps } from 'react-hook-form';\n\nimport { FormControl } from '@/components/ui/form';\nimport { forwardRef, useCallback, useEffect } from 'react';\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger> & {\n    onReset?: () => void;\n    allowClear?: boolean;\n  }\n>(({ className, children, value, onReset, allowClear, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'flex h-8 w-full items-center justify-between rounded-md border border-input bg-colors-background-inverse-weak px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1',\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon\n      asChild\n      onPointerDown={(event) => {\n        event.stopPropagation();\n      }}\n    >\n      {value && allowClear ? (\n        <X className=\"h-4 w-4 opacity-50 cursor-pointer\" onClick={onReset} />\n      ) : (\n        <ChevronDown className=\"h-4 w-4 opacity-50\" />\n      )}\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className,\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className,\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        'relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        position === 'popper' &&\n          'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          'p-1',\n          position === 'popper' &&\n            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]',\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n};\n\nexport type RAGFlowSelectOptionType = {\n  label: React.ReactNode;\n  value: string;\n  disabled?: boolean;\n  icon?: React.ReactNode;\n};\n\nexport type RAGFlowSelectGroupOptionType = {\n  label: React.ReactNode;\n  options: RAGFlowSelectOptionType[];\n};\n\nexport type RAGFlowSelectProps = Partial<ControllerRenderProps> & {\n  FormControlComponent?: typeof FormControl;\n  options?: (RAGFlowSelectOptionType | RAGFlowSelectGroupOptionType)[];\n  allowClear?: boolean;\n  placeholder?: React.ReactNode;\n  contentProps?: React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>;\n  triggerClassName?: string;\n  onlyShowSelectedIcon?: boolean;\n} & SelectPrimitive.SelectProps;\n\n/**\n *\n * Reference:\n * https://github.com/shadcn-ui/ui/discussions/638\n * https://github.com/radix-ui/primitives/discussions/2645#discussioncomment-8343397\n *\n * @export\n * @param {(Partial<ControllerRenderProps> & {\n *   FormControlComponent?: typeof FormControl;\n * })} {\n *   value: initialValue,\n *   onChange,\n *   FormControlComponent,\n * }\n * @return {*}\n */\nexport const RAGFlowSelect = forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  RAGFlowSelectProps\n>(function (\n  {\n    value: initialValue,\n    onChange,\n    FormControlComponent,\n    options = [],\n    allowClear,\n    placeholder,\n    contentProps = {},\n    // defaultValue,\n    triggerClassName,\n    onlyShowSelectedIcon = false,\n  },\n  ref,\n) {\n  const [key, setKey] = React.useState(+new Date());\n  const [value, setValue] = React.useState<string | undefined>(initialValue);\n\n  const FormControlWidget = FormControlComponent\n    ? FormControlComponent\n    : ({ children }: React.PropsWithChildren) => <div>{children}</div>;\n\n  const handleChange = useCallback(\n    (val?: string) => {\n      setValue(val);\n      onChange?.(val);\n    },\n    [onChange],\n  );\n\n  const handleReset = useCallback(() => {\n    handleChange(undefined);\n    setKey(+new Date());\n  }, [handleChange]);\n\n  useEffect(() => {\n    setValue((preValue) => {\n      if (preValue !== initialValue) {\n        return initialValue;\n      }\n      return preValue;\n    });\n  }, [initialValue]);\n\n  // The value selected in the drop-down box only displays the icon\n  const label = React.useMemo(() => {\n    let nextOptions = options;\n    if (options.some((x) => !('value' in x))) {\n      nextOptions = (options as RAGFlowSelectGroupOptionType[]).reduce<\n        RAGFlowSelectOptionType[]\n      >((pre, cur) => {\n        return pre.concat(cur?.options ?? []);\n      }, []);\n    }\n\n    const option = (nextOptions as RAGFlowSelectOptionType[]).find(\n      (x) => x.value === value,\n    );\n\n    return onlyShowSelectedIcon ? option?.icon : option?.label;\n  }, [onlyShowSelectedIcon, options, value]);\n\n  return (\n    <Select onValueChange={handleChange} value={value} key={key}>\n      <FormControlWidget>\n        <SelectTrigger\n          value={value}\n          onReset={handleReset}\n          allowClear={allowClear}\n          ref={ref}\n          className={triggerClassName}\n        >\n          <SelectValue placeholder={placeholder}>{label}</SelectValue>\n        </SelectTrigger>\n      </FormControlWidget>\n      <SelectContent {...contentProps}>\n        {options.map((o, idx) => {\n          if ('value' in o) {\n            return (\n              <SelectItem\n                value={o.value as RAGFlowSelectOptionType['value']}\n                key={o.value}\n                disabled={o.disabled}\n              >\n                <div className=\"flex items-center gap-1\">\n                  {o.icon}\n                  {o.label}\n                </div>\n              </SelectItem>\n            );\n          }\n\n          return (\n            <SelectGroup key={idx}>\n              <SelectLabel className=\"pl-2\">{o.label}</SelectLabel>\n              {o.options.map((x) => (\n                <SelectItem value={x.value} key={x.value} disabled={x.disabled}>\n                  {x.label}\n                </SelectItem>\n              ))}\n            </SelectGroup>\n          );\n        })}\n      </SelectContent>\n    </Select>\n  );\n});\n\nRAGFlowSelect.displayName = 'RAGFlowSelect';\n","'use client';\n\nimport * as SwitchPrimitives from '@radix-ui/react-switch';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      'peer inline-flex h-3.5 w-6 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-background-checked data-[state=unchecked]:bg-text-sub-title',\n      className,\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        'pointer-events-none block size-3 rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-2 data-[state=unchecked]:translate-x-0',\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n","import { variableEnabledFieldMap } from '@/constants/chat';\nimport omit from 'lodash/omit';\n\n// chat model setting and generate operator\nexport const excludeUnEnabledVariables = (\n  values: any = {},\n  prefix = 'llm_setting.',\n) => {\n  const unEnabledFields: Array<keyof typeof variableEnabledFieldMap> =\n    Object.keys(variableEnabledFieldMap).filter((key) => !values[key]) as Array<\n      keyof typeof variableEnabledFieldMap\n    >;\n\n  return unEnabledFields.map(\n    (key) => `${prefix}${variableEnabledFieldMap[key]}`,\n  );\n};\n\n// chat model setting and generate operator\nexport const removeUselessFieldsFromValues = (values: any, prefix?: string) => {\n  const nextValues: any = omit(values, [\n    ...Object.keys(variableEnabledFieldMap),\n    'parameter',\n    ...excludeUnEnabledVariables(values, prefix),\n  ]);\n\n  return nextValues;\n};\n\nexport function buildOptions(data: Record<string, any>) {\n  return Object.values(data).map((val) => ({ label: val, value: val }));\n}\n"],"names":["KnowledgeBaseFormField","form","useFormContext","t","useTranslate","knowledgeOptions","useFetchKnowledgeList","list","filter","x","parser_id","DocumentParserType","Tag","map","label","name","value","id","icon","_jsxs","Avatar","className","children","_jsx","AvatarImage","src","avatar","AvatarFallback","Book","FormField","control","render","_ref2","field","FormItem","FormLabel","FormControl","MultiSelect","_objectSpread","options","onValueChange","onChange","placeholder","variant","maxCount","defaultValue","_ref","tooltipText","_ref$required","required","Space","AntAvatar","size","UserOutlined","Form","Item","tooltip","rules","message","type","Select","mode","RerankItem","allOptions","useSelectLlmOptionsByModelType","_message$useMessage","useMessage","_message$useMessage2","_slicedToArray","messageApi","contextHolder","handleChange","useCallback","val","open","content","_Fragment","AntSelect","LlmModelType","Rerank","allowClear","topKSchema","top_k","z","number","optional","initialTopKValue","noStyle","dependencies","getFieldValue","initialValue","Slider","max","min","RerankId","RerankFormField","RAGFlowSelect","FormMessage","RerankFormFields","watch","rerankId","SliderInputFormField","TopNFormField","_ref2$max","_ref$initialValue","_ref$max","badgeVariants","cva","variants","default","secondary","destructive","outline","tertiary","defaultVariants","Badge","props","_objectWithoutProperties","_excluded","cn","_excluded3","_excluded4","_excluded5","_excluded6","_excluded7","Command","React","ref","CommandPrimitive","displayName","CommandInput","_ref3","Search","Input","CommandList","_ref4","List","CommandEmpty","Empty","CommandGroup","_ref5","Group","CommandSeparator","_ref6","Separator","CommandItem","_ref7","_excluded2","FormProvider","FormItemContext","FormFieldContext","Object","assign","_objectDestructuringEmpty","Provider","Controller","useFormField","fieldContext","itemContext","_useFormContext","getFieldState","formState","fieldState","Error","formItemId","concat","formDescriptionId","formMessageId","InnerFormItem","_useFormField","error","Label","htmlFor","FormTooltip","_useFormField2","Slot","FormDescription","_useFormField4","body","String","labelVariants","LabelPrimitive","multiSelectVariants","inverted","_ref$defaultValue","_ref$placeholder","_ref$animation","animation","_ref$maxCount","_ref$modalPopover","modalPopover","asChild","_React$useState","_React$useState2","selectedValues","setSelectedValues","_React$useState3","_React$useState4","isPopoverOpen","setIsPopoverOpen","_React$useState5","_React$useState6","isAnimating","setIsAnimating","toggleOption","option","newSelectedValues","includes","_toConsumableArray","handleClear","Popover","onOpenChange","modal","PopoverTrigger","Button","onClick","prev","length","slice","find","o","IconComponent","style","animationDuration","XCircle","event","stopPropagation","XIcon","orientation","ChevronDown","PopoverContent","align","onEscapeKeyDown","onKeyDown","key","currentTarget","pop","onSelect","allValues","CheckIcon","isSelected","WandSparkles","PopoverPrimitive","_ref$align","_ref$sideOffset","sideOffset","SelectPrimitive","SelectGroup","SelectValue","SelectTrigger","onReset","onPointerDown","X","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","SelectContent","_ref4$position","position","SelectLabel","SelectItem","Check","forwardRef","_ref8","FormControlComponent","_ref8$options","_ref8$contentProps","contentProps","triggerClassName","_ref8$onlyShowSelecte","onlyShowSelectedIcon","Date","setKey","setValue","FormControlWidget","_ref9","handleReset","undefined","useEffect","preValue","nextOptions","some","reduce","pre","cur","_cur$options","idx","disabled","Switch","SwitchPrimitives","removeUselessFieldsFromValues","values","prefix","nextValues","omit","keys","variableEnabledFieldMap","arguments","excludeUnEnabledVariables","buildOptions","data"],"sourceRoot":""}