{"version":3,"file":"p__add-knowledge__components__knowledge-setting__index.ceeca167.async.js","mappings":"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","sources":["webpack:///./src/components/auto-keywords-item.tsx","webpack:///./src/components/ui/alert-dialog.tsx","webpack:///./src/components/confirm-delete-dialog.tsx","webpack:///./src/components/dataset-configuration-container.tsx","webpack:///./src/components/delimiter.tsx","webpack:///./src/components/edit-tag/index.less?3847","webpack:///./src/components/edit-tag/index.tsx","webpack:///./src/components/entity-types-item.tsx","webpack:///./src/components/excel-to-html.tsx","webpack:///./src/components/layout-recognize.tsx","webpack:///./src/components/max-token-number.tsx","webpack:///./src/components/parse-configuration/graph-rag-items.tsx","webpack:///./src/components/parse-configuration/index.tsx","webpack:///./src/components/ui/checkbox.tsx","webpack:///./src/components/ui/dialog.tsx","webpack:///./src/components/ui/loading-button.tsx","webpack:///./src/components/ui/table.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/index.less?72c9","webpack:///./src/pages/add-knowledge/components/knowledge-setting/hooks.ts","webpack:///./src/pages/add-knowledge/components/knowledge-setting/tag-table/rename-dialog/rename-form.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/tag-table/rename-dialog/index.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/tag-table/index.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/tag-word-cloud.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/tag-tabs.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/utils.ts","webpack:///./src/pages/add-knowledge/components/knowledge-setting/category-panel.tsx","webpack:///./src/components/page-rank.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/tag-item.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/common-item.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/index.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/naive.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/qa.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/resume.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/manual.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/table.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/paper.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/book.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/laws.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/presentation.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/picture.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/one.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/audio.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/email.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/tag.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/configuration/knowledge-graph.tsx","webpack:///./src/pages/add-knowledge/components/knowledge-setting/index.tsx","webpack:///./src/pages/add-knowledge/constant.ts","webpack:///./src/services/file-manager-service.ts","webpack:///./src/utils/file-util.ts"],"sourcesContent":["import { useTranslate } from '@/hooks/common-hooks';\nimport { Flex, Form, InputNumber, Slider } from 'antd';\n\nexport const AutoKeywordsItem = () => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <Form.Item label={t('autoKeywords')} tooltip={t('autoKeywordsTip')}>\n      <Flex gap={20} align=\"center\">\n        <Flex flex={1}>\n          <Form.Item\n            name={['parser_config', 'auto_keywords']}\n            noStyle\n            initialValue={0}\n          >\n            <Slider max={30} style={{ width: '100%' }} />\n          </Form.Item>\n        </Flex>\n        <Form.Item name={['parser_config', 'auto_keywords']} noStyle>\n          <InputNumber max={30} min={0} />\n        </Form.Item>\n      </Flex>\n    </Form.Item>\n  );\n};\n\nexport const AutoQuestionsItem = () => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <Form.Item label={t('autoQuestions')} tooltip={t('autoQuestionsTip')}>\n      <Flex gap={20} align=\"center\">\n        <Flex flex={1}>\n          <Form.Item\n            name={['parser_config', 'auto_questions']}\n            noStyle\n            initialValue={0}\n          >\n            <Slider max={10} style={{ width: '100%' }} />\n          </Form.Item>\n        </Flex>\n        <Form.Item name={['parser_config', 'auto_questions']} noStyle>\n          <InputNumber max={10} min={0} />\n        </Form.Item>\n      </Flex>\n    </Form.Item>\n  );\n};\n","'use client';\n\nimport * as AlertDialogPrimitive from '@radix-ui/react-alert-dialog';\nimport * as React from 'react';\n\nimport { buttonVariants } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\nconst AlertDialog = AlertDialogPrimitive.Root;\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger;\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal;\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className,\n    )}\n    {...props}\n    ref={ref}\n  />\n));\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-colors-background-neutral-standard p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n        className,\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n));\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col space-y-2 text-center sm:text-left',\n      className,\n    )}\n    {...props}\n  />\n);\nAlertDialogHeader.displayName = 'AlertDialogHeader';\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n      className,\n    )}\n    {...props}\n  />\n);\nAlertDialogFooter.displayName = 'AlertDialogFooter';\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn('text-lg font-semibold', className)}\n    {...props}\n  />\n));\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName;\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n));\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: 'outline' }),\n      'mt-2 sm:mt-0',\n      className,\n    )}\n    {...props}\n  />\n));\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName;\n\nexport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogOverlay,\n  AlertDialogPortal,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n};\n","import {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { PropsWithChildren } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface IProps {\n  title?: string;\n  onOk?: (...args: any[]) => any;\n  onCancel?: (...args: any[]) => any;\n  hidden?: boolean;\n}\n\nexport function ConfirmDeleteDialog({\n  children,\n  title,\n  onOk,\n  onCancel,\n  hidden = false,\n}: IProps & PropsWithChildren) {\n  const { t } = useTranslation();\n\n  if (hidden) {\n    return children;\n  }\n\n  return (\n    <AlertDialog>\n      <AlertDialogTrigger asChild>{children}</AlertDialogTrigger>\n      <AlertDialogContent\n        onSelect={(e) => e.preventDefault()}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <AlertDialogHeader>\n          <AlertDialogTitle>\n            {title ?? t('common.deleteModalTitle')}\n          </AlertDialogTitle>\n          {/* <AlertDialogDescription>\n            This action cannot be undone. This will permanently delete your\n            account and remove your data from our servers.\n          </AlertDialogDescription> */}\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n          <AlertDialogCancel onClick={onCancel}>\n            {t('common.cancel')}\n          </AlertDialogCancel>\n          <AlertDialogAction\n            className=\"bg-text-delete-red text-text-title\"\n            onClick={onOk}\n          >\n            {t('common.ok')}\n          </AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n","import { cn } from '@/lib/utils';\nimport { PropsWithChildren } from 'react';\n\ntype DatasetConfigurationContainerProps = {\n  className?: string;\n  show?: boolean;\n} & PropsWithChildren;\n\nexport function DatasetConfigurationContainer({\n  children,\n  className,\n  show = true,\n}: DatasetConfigurationContainerProps) {\n  return show ? (\n    <div\n      className={cn(\n        'border p-2 rounded-lg bg-slate-50 dark:bg-gray-600',\n        className,\n      )}\n    >\n      {children}\n    </div>\n  ) : (\n    children\n  );\n}\n","import { Form, Input } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\ninterface IProps {\n  value?: string | undefined;\n  onChange?: (val: string | undefined) => void;\n  maxLength?: number;\n}\n\nexport const DelimiterInput = ({ value, onChange, maxLength }: IProps) => {\n  const nextValue = value?.replaceAll('\\n', '\\\\n');\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    const nextValue = val.replaceAll('\\\\n', '\\n');\n    onChange?.(nextValue);\n  };\n  return (\n    <Input\n      value={nextValue}\n      onChange={handleInputChange}\n      maxLength={maxLength}\n    ></Input>\n  );\n};\n\nconst Delimiter = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Form.Item\n      name={['parser_config', 'delimiter']}\n      label={t('knowledgeDetails.delimiter')}\n      initialValue={`\\n`}\n      rules={[{ required: true }]}\n      tooltip={t('knowledgeDetails.delimiterTip')}\n    >\n      <DelimiterInput />\n    </Form.Item>\n  );\n};\n\nexport default Delimiter;\n","// extracted by mini-css-extract-plugin\nexport default {\"tweenGroup\":\"tweenGroup___HgfIF\",\"tag\":\"tag___EPGvm\"};","import { PlusOutlined } from '@ant-design/icons';\nimport type { InputRef } from 'antd';\nimport { Input, Tag, theme, Tooltip } from 'antd';\nimport { TweenOneGroup } from 'rc-tween-one';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport styles from './index.less';\n\ninterface EditTagsProps {\n  value?: string[];\n  onChange?: (tags: string[]) => void;\n}\n\nconst EditTag = ({ value = [], onChange }: EditTagsProps) => {\n  const { token } = theme.useToken();\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const inputRef = useRef<InputRef>(null);\n\n  useEffect(() => {\n    if (inputVisible) {\n      inputRef.current?.focus();\n    }\n  }, [inputVisible]);\n\n  const handleClose = (removedTag: string) => {\n    const newTags = value?.filter((tag) => tag !== removedTag);\n    onChange?.(newTags ?? []);\n  };\n\n  const showInput = () => {\n    setInputVisible(true);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleInputConfirm = () => {\n    if (inputValue && value) {\n      const newTags = inputValue\n        .split(';')\n        .map((tag) => tag.trim())\n        .filter((tag) => tag && !value.includes(tag));\n      onChange?.([...value, ...newTags]);\n    }\n    setInputVisible(false);\n    setInputValue('');\n  };\n\n  const forMap = (tag: string) => {\n    return (\n      <Tooltip title={tag}>\n        <Tag\n          key={tag}\n          className={styles.tag}\n          closable\n          onClose={(e) => {\n            e.preventDefault();\n            handleClose(tag);\n          }}\n        >\n          {tag}\n        </Tag>\n      </Tooltip>\n    );\n  };\n\n  const tagChild = value?.map(forMap);\n\n  const tagPlusStyle: React.CSSProperties = {\n    background: token.colorBgContainer,\n    borderStyle: 'dashed',\n  };\n\n  return (\n    <div>\n      {Array.isArray(tagChild) && tagChild.length > 0 && (\n        <TweenOneGroup\n          className={styles.tweenGroup}\n          enter={{\n            scale: 0.8,\n            opacity: 0,\n            type: 'from',\n            duration: 100,\n          }}\n          onEnd={(e) => {\n            if (e.type === 'appear' || e.type === 'enter') {\n              (e.target as any).style = 'display: inline-block';\n            }\n          }}\n          leave={{ opacity: 0, width: 0, scale: 0, duration: 200 }}\n          appear={false}\n        >\n          {tagChild}\n        </TweenOneGroup>\n      )}\n      {inputVisible ? (\n        <Input\n          ref={inputRef}\n          type=\"text\"\n          size=\"small\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onBlur={handleInputConfirm}\n          onPressEnter={handleInputConfirm}\n        />\n      ) : (\n        <Tag onClick={showInput} style={tagPlusStyle}>\n          <PlusOutlined />\n        </Tag>\n      )}\n    </div>\n  );\n};\n\nexport default EditTag;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form } from 'antd';\nimport EditTag from './edit-tag';\n\nconst initialEntityTypes = [\n  'organization',\n  'person',\n  'geo',\n  'event',\n  'category',\n];\n\ntype IProps = {\n  field?: string[];\n};\n\nconst EntityTypesItem = ({\n  field = ['parser_config', 'entity_types'],\n}: IProps) => {\n  const { t } = useTranslate('knowledgeConfiguration');\n  return (\n    <Form.Item\n      name={field}\n      label={t('entityTypes')}\n      rules={[{ required: true }]}\n      initialValue={initialEntityTypes}\n    >\n      <EditTag></EditTag>\n    </Form.Item>\n  );\n};\n\nexport default EntityTypesItem;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Switch } from 'antd';\n\nconst ExcelToHtml = () => {\n  const { t } = useTranslate('knowledgeDetails');\n  return (\n    <Form.Item\n      name={['parser_config', 'html4excel']}\n      label={t('html4excel')}\n      initialValue={false}\n      valuePropName=\"checked\"\n      tooltip={t('html4excelTip')}\n    >\n      <Switch />\n    </Form.Item>\n  );\n};\n\nexport default ExcelToHtml;\n","import { LlmModelType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useSelectLlmOptionsByModelType } from '@/hooks/llm-hooks';\nimport { Form, Select } from 'antd';\nimport { camelCase } from 'lodash';\nimport { useMemo } from 'react';\n\nconst enum DocumentType {\n  DeepDOC = 'DeepDOC',\n  PlainText = 'Plain Text',\n}\n\nconst LayoutRecognize = () => {\n  const { t } = useTranslate('knowledgeDetails');\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  const options = useMemo(() => {\n    const list = [DocumentType.DeepDOC, DocumentType.PlainText].map((x) => ({\n      label: x === DocumentType.PlainText ? t(camelCase(x)) : 'DeepDoc',\n      value: x,\n    }));\n\n    const image2TextList = allOptions[LlmModelType.Image2text].map((x) => {\n      return {\n        ...x,\n        options: x.options.map((y) => {\n          return {\n            ...y,\n            label: (\n              <div className=\"flex justify-between items-center gap-2\">\n                {y.label}\n                <span className=\"text-red-500 text-sm\">Experimental</span>\n              </div>\n            ),\n          };\n        }),\n      };\n    });\n\n    return [...list, ...image2TextList];\n  }, [allOptions, t]);\n\n  return (\n    <Form.Item\n      name={['parser_config', 'layout_recognize']}\n      label={t('layoutRecognize')}\n      initialValue={DocumentType.DeepDOC}\n      tooltip={t('layoutRecognizeTip')}\n    >\n      <Select options={options} popupMatchSelectWidth={false} />\n    </Form.Item>\n  );\n};\n\nexport default LayoutRecognize;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Flex, Form, InputNumber, Slider } from 'antd';\n\ninterface IProps {\n  initialValue?: number;\n  max?: number;\n}\n\nconst MaxTokenNumber = ({ initialValue = 512, max = 2048 }: IProps) => {\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  return (\n    <Form.Item label={t('chunkTokenNumber')} tooltip={t('chunkTokenNumberTip')}>\n      <Flex gap={20} align=\"center\">\n        <Flex flex={1}>\n          <Form.Item\n            name={['parser_config', 'chunk_token_num']}\n            noStyle\n            initialValue={initialValue}\n            rules={[{ required: true, message: t('chunkTokenNumberMessage') }]}\n          >\n            <Slider max={max} style={{ width: '100%' }} />\n          </Form.Item>\n        </Flex>\n        <Form.Item\n          name={['parser_config', 'chunk_token_num']}\n          noStyle\n          rules={[{ required: true, message: t('chunkTokenNumberMessage') }]}\n        >\n          <InputNumber max={max} min={0} />\n        </Form.Item>\n      </Flex>\n    </Form.Item>\n  );\n};\n\nexport default MaxTokenNumber;\n","import { DocumentParserType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { cn } from '@/lib/utils';\nimport { Form, Select, Switch } from 'antd';\nimport { upperFirst } from 'lodash';\nimport { useCallback, useMemo } from 'react';\nimport { DatasetConfigurationContainer } from '../dataset-configuration-container';\nimport EntityTypesItem from '../entity-types-item';\n\nconst excludedTagParseMethods = [\n  DocumentParserType.Table,\n  DocumentParserType.KnowledgeGraph,\n  DocumentParserType.Tag,\n];\n\nexport const showTagItems = (parserId: DocumentParserType) => {\n  return !excludedTagParseMethods.includes(parserId);\n};\n\nconst enum MethodValue {\n  General = 'general',\n  Light = 'light',\n}\n\nexport const excludedParseMethods = [\n  DocumentParserType.Table,\n  DocumentParserType.Resume,\n  DocumentParserType.Picture,\n  DocumentParserType.KnowledgeGraph,\n  DocumentParserType.Qa,\n  DocumentParserType.Tag,\n];\n\nexport const showGraphRagItems = (parserId: DocumentParserType | undefined) => {\n  return !excludedParseMethods.some((x) => x === parserId);\n};\n\ntype GraphRagItemsProps = {\n  marginBottom?: boolean;\n};\n\nexport function UseGraphRagItem() {\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  return (\n    <Form.Item\n      name={['parser_config', 'graphrag', 'use_graphrag']}\n      label={t('useGraphRag')}\n      initialValue={false}\n      valuePropName=\"checked\"\n      tooltip={t('useGraphRagTip')}\n    >\n      <Switch />\n    </Form.Item>\n  );\n}\n\n// The three types \"table\", \"resume\" and \"one\" do not display this configuration.\nconst GraphRagItems = ({ marginBottom = false }: GraphRagItemsProps) => {\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  const methodOptions = useMemo(() => {\n    return [MethodValue.Light, MethodValue.General].map((x) => ({\n      value: x,\n      label: upperFirst(x),\n    }));\n  }, []);\n\n  const renderWideTooltip = useCallback(\n    (title: React.ReactNode | string) => {\n      return {\n        title: typeof title === 'string' ? t(title) : title,\n        overlayInnerStyle: { width: '32vw' },\n      };\n    },\n    [t],\n  );\n\n  return (\n    <DatasetConfigurationContainer className={cn({ 'mb-4': marginBottom })}>\n      <UseGraphRagItem></UseGraphRagItem>\n      <Form.Item\n        shouldUpdate={(prevValues, curValues) =>\n          prevValues.parser_config.graphrag.use_graphrag !==\n          curValues.parser_config.graphrag.use_graphrag\n        }\n      >\n        {({ getFieldValue }) => {\n          const useRaptor = getFieldValue([\n            'parser_config',\n            'graphrag',\n            'use_graphrag',\n          ]);\n\n          return (\n            useRaptor && (\n              <>\n                <EntityTypesItem\n                  field={['parser_config', 'graphrag', 'entity_types']}\n                ></EntityTypesItem>\n                <Form.Item\n                  name={['parser_config', 'graphrag', 'method']}\n                  label={t('graphRagMethod')}\n                  tooltip={renderWideTooltip(\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: t('graphRagMethodTip'),\n                      }}\n                    ></div>,\n                  )}\n                  initialValue={MethodValue.Light}\n                >\n                  <Select options={methodOptions} />\n                </Form.Item>\n                <Form.Item\n                  name={['parser_config', 'graphrag', 'resolution']}\n                  label={t('resolution')}\n                  tooltip={renderWideTooltip('resolutionTip')}\n                >\n                  <Switch />\n                </Form.Item>\n                <Form.Item\n                  name={['parser_config', 'graphrag', 'community']}\n                  label={t('community')}\n                  tooltip={renderWideTooltip('communityTip')}\n                >\n                  <Switch />\n                </Form.Item>\n              </>\n            )\n          );\n        }}\n      </Form.Item>\n    </DatasetConfigurationContainer>\n  );\n};\n\nexport default GraphRagItems;\n","import { DocumentParserType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Flex, Form, Input, InputNumber, Slider, Switch } from 'antd';\nimport random from 'lodash/random';\n\nexport const excludedParseMethods = [\n  DocumentParserType.Table,\n  DocumentParserType.Resume,\n  DocumentParserType.One,\n  DocumentParserType.Picture,\n  DocumentParserType.KnowledgeGraph,\n  DocumentParserType.Qa,\n  DocumentParserType.Tag,\n];\n\nexport const showRaptorParseConfiguration = (\n  parserId: DocumentParserType | undefined,\n) => {\n  return !excludedParseMethods.some((x) => x === parserId);\n};\n\nexport const excludedTagParseMethods = [\n  DocumentParserType.Table,\n  DocumentParserType.KnowledgeGraph,\n  DocumentParserType.Tag,\n];\n\nexport const showTagItems = (parserId: DocumentParserType) => {\n  return !excludedTagParseMethods.includes(parserId);\n};\n\n// The three types \"table\", \"resume\" and \"one\" do not display this configuration.\nconst ParseConfiguration = () => {\n  const form = Form.useFormInstance();\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  const handleGenerate = () => {\n    form.setFieldValue(\n      ['parser_config', 'raptor', 'random_seed'],\n      random(10000),\n    );\n  };\n\n  return (\n    <>\n      <Form.Item\n        name={['parser_config', 'raptor', 'use_raptor']}\n        label={t('useRaptor')}\n        initialValue={false}\n        valuePropName=\"checked\"\n        tooltip={t('useRaptorTip')}\n      >\n        <Switch />\n      </Form.Item>\n      <Form.Item\n        shouldUpdate={(prevValues, curValues) =>\n          prevValues.parser_config.raptor.use_raptor !==\n          curValues.parser_config.raptor.use_raptor\n        }\n      >\n        {({ getFieldValue }) => {\n          const useRaptor = getFieldValue([\n            'parser_config',\n            'raptor',\n            'use_raptor',\n          ]);\n\n          return (\n            useRaptor && (\n              <>\n                <Form.Item\n                  name={['parser_config', 'raptor', 'prompt']}\n                  label={t('prompt')}\n                  initialValue={t('promptText')}\n                  tooltip={t('promptTip')}\n                  rules={[\n                    {\n                      required: true,\n                      message: t('promptMessage'),\n                    },\n                  ]}\n                >\n                  <Input.TextArea rows={8} />\n                </Form.Item>\n                <Form.Item label={t('maxToken')} tooltip={t('maxTokenTip')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'max_token']}\n                        noStyle\n                        initialValue={256}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('maxTokenMessage'),\n                          },\n                        ]}\n                      >\n                        <Slider max={2048} style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item\n                      name={['parser_config', 'raptor', 'max_token']}\n                      noStyle\n                      rules={[\n                        {\n                          required: true,\n                          message: t('maxTokenMessage'),\n                        },\n                      ]}\n                    >\n                      <InputNumber max={2048} min={0} />\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n                <Form.Item label={t('threshold')} tooltip={t('thresholdTip')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'threshold']}\n                        noStyle\n                        initialValue={0.1}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('thresholdMessage'),\n                          },\n                        ]}\n                      >\n                        <Slider\n                          min={0}\n                          max={1}\n                          style={{ width: '100%' }}\n                          step={0.01}\n                        />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item\n                      name={['parser_config', 'raptor', 'threshold']}\n                      noStyle\n                      rules={[\n                        {\n                          required: true,\n                          message: t('thresholdMessage'),\n                        },\n                      ]}\n                    >\n                      <InputNumber max={1} min={0} step={0.01} />\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n                <Form.Item label={t('maxCluster')} tooltip={t('maxClusterTip')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'max_cluster']}\n                        noStyle\n                        initialValue={64}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('maxClusterMessage'),\n                          },\n                        ]}\n                      >\n                        <Slider min={1} max={1024} style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item\n                      name={['parser_config', 'raptor', 'max_cluster']}\n                      noStyle\n                      rules={[\n                        {\n                          required: true,\n                          message: t('maxClusterMessage'),\n                        },\n                      ]}\n                    >\n                      <InputNumber max={1024} min={1} />\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n                <Form.Item label={t('randomSeed')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'random_seed']}\n                        noStyle\n                        initialValue={0}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('randomSeedMessage'),\n                          },\n                        ]}\n                      >\n                        <InputNumber style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item noStyle>\n                      <Button type=\"primary\" onClick={handleGenerate}>\n                        <PlusOutlined />\n                      </Button>\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n              </>\n            )\n          );\n        }}\n      </Form.Item>\n    </>\n  );\n};\n\nexport default ParseConfiguration;\n","'use client';\n\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport { Check } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      'peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',\n      className,\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn('flex items-center justify-center text-current')}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","'use client';\n\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-colors-background-neutral-standard p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col space-y-1.5 text-center sm:text-left',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      'text-lg font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n","// https://github.com/hsuanyi-chou/shadcn-ui-expansions/blob/main/components/ui/loading-button.tsx\n\nimport { cn } from '@/lib/utils';\nimport { Slot, Slottable } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { Loader2 } from 'lucide-react';\nimport * as React from 'react';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n        tertiary:\n          'bg-colors-background-sentiment-solid-primary text-colors-text-persist-light hover:bg-colors-background-sentiment-solid-primary/80',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n  loading?: boolean;\n}\n\nconst LoadingButton = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      loading = false,\n      children,\n      disabled,\n      variant,\n      size,\n      asChild = false,\n      ...props\n    },\n    ref,\n  ) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        disabled={loading || disabled}\n        {...props}\n      >\n        {loading && <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />}\n        <Slottable>{children}</Slottable>\n      </Comp>\n    );\n  },\n);\nLoadingButton.displayName = 'LoadingButton';\n\nexport { LoadingButton, buttonVariants };\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement> & { rootClassName?: string }\n>(({ className, rootClassName, ...props }, ref) => (\n  <div\n    className={cn(\n      'relative w-full overflow-auto rounded-2xl bg-background-card',\n      rootClassName,\n    )}\n  >\n    <table\n      ref={ref}\n      className={cn('w-full caption-bottom text-sm ', className)}\n      {...props}\n    />\n  </div>\n));\nTable.displayName = 'Table';\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead\n    ref={ref}\n    className={cn('[&_tr]:border-b top-0 sticky', className)}\n    {...props}\n  />\n));\nTableHeader.displayName = 'TableHeader';\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn('[&_tr:last-child]:border-0', className)}\n    {...props}\n  />\n));\nTableBody.displayName = 'TableBody';\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      'border-t bg-muted/50 font-medium [&>tr]:last:border-b-0',\n      className,\n    )}\n    {...props}\n  />\n));\nTableFooter.displayName = 'TableFooter';\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\n      className,\n    )}\n    {...props}\n  />\n));\nTableRow.displayName = 'TableRow';\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      'h-12 px-4 text-left align-middle font-normal text-text-sub-title [&:has([role=checkbox])]:pr-0',\n      className,\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = 'TableHead';\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      'p-4 align-middle [&:has([role=checkbox])]:pr-0 text-text-title font-normal',\n      className,\n    )}\n    {...props}\n  />\n));\nTableCell.displayName = 'TableCell';\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn('mt-4 text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nTableCaption.displayName = 'TableCaption';\n\nexport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tags\":\"tags___B6FHw\",\"preset\":\"preset___ZojTE\",\"left\":\"left___EOFZO\",\"right\":\"right___kHLZk\",\"configurationWrapper\":\"configurationWrapper___I5Kdy\",\"buttonWrapper\":\"buttonWrapper___k6eVW\",\"variableSlider\":\"variableSlider___lkA3D\",\"categoryPanelWrapper\":\"categoryPanelWrapper___yI4rY\",\"topTitle\":\"topTitle___tNiB9\",\"imageRow\":\"imageRow___C3Xpb\",\"image\":\"image___D0j7I\"};","import { LlmModelType } from '@/constants/knowledge';\nimport { useSetModalState } from '@/hooks/common-hooks';\nimport {\n  useFetchKnowledgeBaseConfiguration,\n  useUpdateKnowledge,\n} from '@/hooks/knowledge-hooks';\nimport { useSelectLlmOptionsByModelType } from '@/hooks/llm-hooks';\nimport { useNavigateToDataset } from '@/hooks/route-hook';\nimport { useSelectParserList } from '@/hooks/user-setting-hooks';\nimport {\n  getBase64FromUploadFileList,\n  getUploadFileListFromBase64,\n} from '@/utils/file-util';\nimport { useIsFetching } from '@tanstack/react-query';\nimport { Form, UploadFile } from 'antd';\nimport { FormInstance } from 'antd/lib';\nimport pick from 'lodash/pick';\nimport { useCallback, useEffect, useState } from 'react';\n\nexport const useSubmitKnowledgeConfiguration = (form: FormInstance) => {\n  const { saveKnowledgeConfiguration, loading } = useUpdateKnowledge();\n  const navigateToDataset = useNavigateToDataset();\n\n  const submitKnowledgeConfiguration = useCallback(async () => {\n    const values = await form.validateFields();\n    const avatar = await getBase64FromUploadFileList(values.avatar);\n    saveKnowledgeConfiguration({\n      ...values,\n      avatar,\n    });\n    navigateToDataset();\n  }, [saveKnowledgeConfiguration, form, navigateToDataset]);\n\n  return {\n    submitKnowledgeConfiguration,\n    submitLoading: loading,\n    navigateToDataset,\n  };\n};\n\n// The value that does not need to be displayed in the analysis method Select\nconst HiddenFields = ['email', 'picture', 'audio'];\n\nexport function useSelectChunkMethodList() {\n  const parserList = useSelectParserList();\n\n  return parserList.filter((x) => !HiddenFields.some((y) => y === x.value));\n}\n\nexport function useSelectEmbeddingModelOptions() {\n  const allOptions = useSelectLlmOptionsByModelType();\n  return allOptions[LlmModelType.Embedding];\n}\n\nexport function useHasParsedDocument() {\n  const { data: knowledgeDetails } = useFetchKnowledgeBaseConfiguration();\n  return knowledgeDetails.chunk_num > 0;\n}\n\nexport const useFetchKnowledgeConfigurationOnMount = (form: FormInstance) => {\n  const { data: knowledgeDetails } = useFetchKnowledgeBaseConfiguration();\n\n  useEffect(() => {\n    const fileList: UploadFile[] = getUploadFileListFromBase64(\n      knowledgeDetails.avatar,\n    );\n    form.setFieldsValue({\n      ...pick(knowledgeDetails, [\n        'description',\n        'name',\n        'permission',\n        'embd_id',\n        'parser_id',\n        'language',\n        'parser_config',\n        'pagerank',\n      ]),\n      avatar: fileList,\n    });\n  }, [form, knowledgeDetails]);\n\n  return knowledgeDetails;\n};\n\nexport const useSelectKnowledgeDetailsLoading = () =>\n  useIsFetching({ queryKey: ['fetchKnowledgeDetail'] }) > 0;\n\nexport const useHandleChunkMethodChange = () => {\n  const [form] = Form.useForm();\n  const chunkMethod = Form.useWatch('parser_id', form);\n\n  useEffect(() => {\n    console.log('🚀 ~ useHandleChunkMethodChange ~ chunkMethod:', chunkMethod);\n  }, [chunkMethod]);\n\n  return { form, chunkMethod };\n};\n\nexport const useRenameKnowledgeTag = () => {\n  const [tag, setTag] = useState<string>('');\n  const {\n    visible: tagRenameVisible,\n    hideModal: hideTagRenameModal,\n    showModal: showFileRenameModal,\n  } = useSetModalState();\n\n  const handleShowTagRenameModal = useCallback(\n    (record: string) => {\n      setTag(record);\n      showFileRenameModal();\n    },\n    [showFileRenameModal],\n  );\n\n  return {\n    initialName: tag,\n    tagRenameVisible,\n    hideTagRenameModal,\n    showTagRenameModal: handleShowTagRenameModal,\n  };\n};\n","'use client';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport { z } from 'zod';\n\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { useRenameTag } from '@/hooks/knowledge-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { TagRenameId } from '@/pages/add-knowledge/constant';\nimport { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport function RenameForm({\n  initialName,\n  hideModal,\n}: IModalProps<any> & { initialName: string }) {\n  const { t } = useTranslation();\n  const FormSchema = z.object({\n    name: z\n      .string()\n      .min(1, {\n        message: t('common.namePlaceholder'),\n      })\n      .trim(),\n  });\n\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      name: '',\n    },\n  });\n\n  const { renameTag } = useRenameTag();\n\n  async function onSubmit(data: z.infer<typeof FormSchema>) {\n    const ret = await renameTag({ fromTag: initialName, toTag: data.name });\n    if (ret) {\n      hideModal?.();\n    }\n  }\n\n  useEffect(() => {\n    form.setValue('name', initialName);\n  }, [form, initialName]);\n\n  return (\n    <Form {...form}>\n      <form\n        onSubmit={form.handleSubmit(onSubmit)}\n        className=\"space-y-6\"\n        id={TagRenameId}\n      >\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('common.name')}</FormLabel>\n              <FormControl>\n                <Input\n                  placeholder={t('common.namePlaceholder')}\n                  {...field}\n                  autoComplete=\"off\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n      </form>\n    </Form>\n  );\n}\n","import {\n  Dialog,\n  DialogContent,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { LoadingButton } from '@/components/ui/loading-button';\nimport { useTagIsRenaming } from '@/hooks/knowledge-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { TagRenameId } from '@/pages/add-knowledge/constant';\nimport { useTranslation } from 'react-i18next';\nimport { RenameForm } from './rename-form';\n\nexport function RenameDialog({\n  hideModal,\n  initialName,\n}: IModalProps<any> & { initialName: string }) {\n  const { t } = useTranslation();\n  const loading = useTagIsRenaming();\n\n  return (\n    <Dialog open onOpenChange={hideModal}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>{t('common.rename')}</DialogTitle>\n        </DialogHeader>\n        <RenameForm\n          initialName={initialName}\n          hideModal={hideModal}\n        ></RenameForm>\n        <DialogFooter>\n          <LoadingButton type=\"submit\" form={TagRenameId} loading={loading}>\n            {t('common.save')}\n          </LoadingButton>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","'use client';\n\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport { ArrowUpDown, Pencil, Trash2 } from 'lucide-react';\nimport * as React from 'react';\n\nimport { ConfirmDeleteDialog } from '@/components/confirm-delete-dialog';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Input } from '@/components/ui/input';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from '@/components/ui/tooltip';\nimport { useDeleteTag, useFetchTagList } from '@/hooks/knowledge-hooks';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useRenameKnowledgeTag } from '../hooks';\nimport { RenameDialog } from './rename-dialog';\n\nexport type ITag = {\n  tag: string;\n  frequency: number;\n};\n\nexport function TagTable() {\n  const { t } = useTranslation();\n  const { list } = useFetchTagList();\n  const [tagList, setTagList] = useState<ITag[]>([]);\n\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    [],\n  );\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = useState({});\n\n  const { deleteTag } = useDeleteTag();\n\n  useEffect(() => {\n    setTagList(list.map((x) => ({ tag: x[0], frequency: x[1] })));\n  }, [list]);\n\n  const handleDeleteTag = useCallback(\n    (tags: string[]) => () => {\n      deleteTag(tags);\n    },\n    [deleteTag],\n  );\n\n  const {\n    showTagRenameModal,\n    hideTagRenameModal,\n    tagRenameVisible,\n    initialName,\n  } = useRenameKnowledgeTag();\n\n  const columns: ColumnDef<ITag>[] = [\n    {\n      id: 'select',\n      header: ({ table }) => (\n        <Checkbox\n          checked={\n            table.getIsAllPageRowsSelected() ||\n            (table.getIsSomePageRowsSelected() && 'indeterminate')\n          }\n          onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n          aria-label=\"Select all\"\n        />\n      ),\n      cell: ({ row }) => (\n        <Checkbox\n          checked={row.getIsSelected()}\n          onCheckedChange={(value) => row.toggleSelected(!!value)}\n          aria-label=\"Select row\"\n        />\n      ),\n      enableSorting: false,\n      enableHiding: false,\n    },\n    {\n      accessorKey: 'tag',\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n          >\n            {t('knowledgeConfiguration.tagName')}\n            <ArrowUpDown />\n          </Button>\n        );\n      },\n      cell: ({ row }) => {\n        const value: string = row.getValue('tag');\n        return <div>{value}</div>;\n      },\n    },\n    {\n      accessorKey: 'frequency',\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n          >\n            {t('knowledgeConfiguration.frequency')}\n            <ArrowUpDown />\n          </Button>\n        );\n      },\n      cell: ({ row }) => (\n        <div className=\"capitalize \">{row.getValue('frequency')}</div>\n      ),\n    },\n    {\n      id: 'actions',\n      enableHiding: false,\n      header: t('common.action'),\n      cell: ({ row }) => {\n        return (\n          <div className=\"flex gap-1\">\n            <Tooltip>\n              <ConfirmDeleteDialog onOk={handleDeleteTag([row.original.tag])}>\n                <TooltipTrigger asChild>\n                  <Button variant=\"ghost\" size=\"icon\">\n                    <Trash2 />\n                  </Button>\n                </TooltipTrigger>\n              </ConfirmDeleteDialog>\n              <TooltipContent>\n                <p>{t('common.delete')}</p>\n              </TooltipContent>\n            </Tooltip>\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  onClick={() => showTagRenameModal(row.original.tag)}\n                >\n                  <Pencil />\n                </Button>\n              </TooltipTrigger>\n              <TooltipContent>\n                <p>{t('common.rename')}</p>\n              </TooltipContent>\n            </Tooltip>\n          </div>\n        );\n      },\n    },\n  ];\n\n  const table = useReactTable({\n    data: tagList,\n    columns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  const selectedRowLength = table.getFilteredSelectedRowModel().rows.length;\n\n  return (\n    <TooltipProvider>\n      <div className=\"w-full\">\n        <div className=\"flex items-center justify-between py-4 \">\n          <Input\n            placeholder={t('knowledgeConfiguration.searchTags')}\n            value={(table.getColumn('tag')?.getFilterValue() as string) ?? ''}\n            onChange={(event) =>\n              table.getColumn('tag')?.setFilterValue(event.target.value)\n            }\n            className=\"w-1/2\"\n          />\n          {selectedRowLength > 0 && (\n            <ConfirmDeleteDialog\n              onOk={handleDeleteTag(\n                table\n                  .getFilteredSelectedRowModel()\n                  .rows.map((x) => x.original.tag),\n              )}\n            >\n              <Button variant=\"outline\" size=\"icon\">\n                <Trash2 />\n              </Button>\n            </ConfirmDeleteDialog>\n          )}\n        </div>\n        <div className=\"rounded-md border\">\n          <Table>\n            <TableHeader>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <TableRow key={headerGroup.id}>\n                  {headerGroup.headers.map((header) => {\n                    return (\n                      <TableHead key={header.id}>\n                        {header.isPlaceholder\n                          ? null\n                          : flexRender(\n                              header.column.columnDef.header,\n                              header.getContext(),\n                            )}\n                      </TableHead>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableHeader>\n            <TableBody>\n              {table.getRowModel().rows?.length ? (\n                table.getRowModel().rows.map((row) => (\n                  <TableRow\n                    key={row.id}\n                    data-state={row.getIsSelected() && 'selected'}\n                  >\n                    {row.getVisibleCells().map((cell) => (\n                      <TableCell key={cell.id}>\n                        {flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext(),\n                        )}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell\n                    colSpan={columns.length}\n                    className=\"h-24 text-center\"\n                  >\n                    No results.\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <div className=\"flex items-center justify-end space-x-2 py-4\">\n          <div className=\"flex-1 text-sm text-muted-foreground\">\n            {selectedRowLength} of {table.getFilteredRowModel().rows.length}{' '}\n            row(s) selected.\n          </div>\n          <div className=\"space-x-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => table.previousPage()}\n              disabled={!table.getCanPreviousPage()}\n            >\n              {t('common.previousPage')}\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => table.nextPage()}\n              disabled={!table.getCanNextPage()}\n            >\n              {t('common.nextPage')}\n            </Button>\n          </div>\n        </div>\n      </div>\n      {tagRenameVisible && (\n        <RenameDialog\n          hideModal={hideTagRenameModal}\n          initialName={initialName}\n        ></RenameDialog>\n      )}\n    </TooltipProvider>\n  );\n}\n","import { useFetchTagList } from '@/hooks/knowledge-hooks';\nimport { Chart } from '@antv/g2';\nimport { sumBy } from 'lodash';\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\n\nexport function TagWordCloud() {\n  const domRef = useRef<HTMLDivElement>(null);\n  let chartRef = useRef<Chart>();\n  const { list } = useFetchTagList();\n\n  const { list: tagList } = useMemo(() => {\n    const nextList = list.sort((a, b) => b[1] - a[1]).slice(0, 256);\n\n    return {\n      list: nextList.map((x) => ({ text: x[0], value: x[1], name: x[0] })),\n      sumValue: sumBy(nextList, (x: [string, number]) => x[1]),\n      length: nextList.length,\n    };\n  }, [list]);\n\n  const renderWordCloud = useCallback(() => {\n    if (domRef.current) {\n      chartRef.current = new Chart({ container: domRef.current });\n\n      chartRef.current.options({\n        type: 'wordCloud',\n        autoFit: true,\n        layout: {\n          fontSize: [10, 50],\n          // fontSize: (d: any) => {\n          //   if (d.value) {\n          //     return (d.value / sumValue) * 100 * (length / 10);\n          //   }\n          //   return 0;\n          // },\n        },\n        data: {\n          type: 'inline',\n          value: tagList,\n        },\n        encode: { color: 'text' },\n        legend: false,\n        tooltip: {\n          title: 'name', // title\n          items: ['value'], // data item\n        },\n      });\n\n      chartRef.current.render();\n    }\n  }, [tagList]);\n\n  useEffect(() => {\n    renderWordCloud();\n\n    return () => {\n      chartRef.current?.destroy();\n    };\n  }, [renderWordCloud]);\n\n  return <div ref={domRef} className=\"w-full h-[38vh]\"></div>;\n}\n","import { Segmented } from 'antd';\nimport { SegmentedLabeledOption } from 'antd/es/segmented';\nimport { upperFirst } from 'lodash';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TagTable } from './tag-table';\nimport { TagWordCloud } from './tag-word-cloud';\n\nenum TagType {\n  Cloud = 'cloud',\n  Table = 'table',\n}\n\nconst TagContentMap = {\n  [TagType.Cloud]: <TagWordCloud></TagWordCloud>,\n  [TagType.Table]: <TagTable></TagTable>,\n};\n\nexport function TagTabs() {\n  const [value, setValue] = useState<TagType>(TagType.Cloud);\n  const { t } = useTranslation();\n\n  const options: SegmentedLabeledOption[] = [TagType.Cloud, TagType.Table].map(\n    (x) => ({\n      label: t(`knowledgeConfiguration.tag${upperFirst(x)}`),\n      value: x,\n    }),\n  );\n\n  return (\n    <section className=\"mt-4\">\n      <Segmented\n        value={value}\n        options={options}\n        onChange={(val) => setValue(val as TagType)}\n      />\n      {TagContentMap[value]}\n    </section>\n  );\n}\n","const getImageName = (prefix: string, length: number) =>\n  new Array(length)\n    .fill(0)\n    .map((x, idx) => `chunk-method/${prefix}-0${idx + 1}`);\n\nexport const ImageMap = {\n  book: getImageName('book', 4),\n  laws: getImageName('law', 2),\n  manual: getImageName('manual', 4),\n  picture: getImageName('media', 2),\n  naive: getImageName('naive', 2),\n  paper: getImageName('paper', 2),\n  presentation: getImageName('presentation', 2),\n  qa: getImageName('qa', 2),\n  resume: getImageName('resume', 2),\n  table: getImageName('table', 2),\n  one: getImageName('one', 2),\n  knowledge_graph: getImageName('knowledge-graph', 2),\n  tag: getImageName('tag', 2),\n};\n","import SvgIcon from '@/components/svg-icon';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useSelectParserList } from '@/hooks/user-setting-hooks';\nimport { Col, Divider, Empty, Row, Typography } from 'antd';\nimport DOMPurify from 'dompurify';\nimport camelCase from 'lodash/camelCase';\nimport { useMemo } from 'react';\nimport styles from './index.less';\nimport { TagTabs } from './tag-tabs';\nimport { ImageMap } from './utils';\n\nconst { Text } = Typography;\n\nconst CategoryPanel = ({ chunkMethod }: { chunkMethod: string }) => {\n  const parserList = useSelectParserList();\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  const item = useMemo(() => {\n    const item = parserList.find((x) => x.value === chunkMethod);\n    if (item) {\n      return {\n        title: item.label,\n        description: t(camelCase(item.value)),\n      };\n    }\n    return { title: '', description: '' };\n  }, [parserList, chunkMethod, t]);\n\n  const imageList = useMemo(() => {\n    if (chunkMethod in ImageMap) {\n      return ImageMap[chunkMethod as keyof typeof ImageMap];\n    }\n    return [];\n  }, [chunkMethod]);\n\n  return (\n    <section className={styles.categoryPanelWrapper}>\n      {imageList.length > 0 ? (\n        <>\n          <h5 className=\"font-semibold text-base mt-0 mb-1\">\n            {`\"${item.title}\" ${t('methodTitle')}`}\n          </h5>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: DOMPurify.sanitize(item.description),\n            }}\n          ></p>\n          <h5 className=\"font-semibold text-base mt-4 mb-1\">{`\"${item.title}\" ${t('methodExamples')}`}</h5>\n          <Text>{t('methodExamplesDescription')}</Text>\n          <Row gutter={[10, 10]} className={styles.imageRow}>\n            {imageList.map((x) => (\n              <Col span={12} key={x}>\n                <SvgIcon\n                  name={x}\n                  width={'100%'}\n                  className={styles.image}\n                ></SvgIcon>\n              </Col>\n            ))}\n          </Row>\n          <h5 className=\"font-semibold text-base mt-4 mb-1\">\n            {item.title} {t('dialogueExamplesTitle')}\n          </h5>\n          <Divider></Divider>\n        </>\n      ) : (\n        <Empty description={''} image={null}>\n          <p>{t('methodEmpty')}</p>\n          <SvgIcon name={'chunk-method/chunk-empty'} width={'100%'}></SvgIcon>\n        </Empty>\n      )}\n      {chunkMethod === 'tag' && <TagTabs></TagTabs>}\n    </section>\n  );\n};\n\nexport default CategoryPanel;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Flex, Form, InputNumber, Slider } from 'antd';\n\nconst PageRank = () => {\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  return (\n    <Form.Item label={t('pageRank')} tooltip={t('pageRankTip')}>\n      <Flex gap={20} align=\"center\">\n        <Flex flex={1}>\n          <Form.Item\n            name={['pagerank']}\n            noStyle\n            initialValue={0}\n            rules={[{ required: true }]}\n          >\n            <Slider max={100} style={{ width: '100%' }} />\n          </Form.Item>\n        </Flex>\n        <Form.Item name={['pagerank']} noStyle rules={[{ required: true }]}>\n          <InputNumber max={100} min={0} />\n        </Form.Item>\n      </Flex>\n    </Form.Item>\n  );\n};\n\nexport default PageRank;\n","import { useFetchKnowledgeList } from '@/hooks/knowledge-hooks';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Avatar, Flex, Form, InputNumber, Select, Slider, Space } from 'antd';\nimport DOMPurify from 'dompurify';\nimport { useTranslation } from 'react-i18next';\n\nexport const TagSetItem = () => {\n  const { t } = useTranslation();\n\n  const { list: knowledgeList } = useFetchKnowledgeList(true);\n\n  const knowledgeOptions = knowledgeList\n    .filter((x) => x.parser_id === 'tag')\n    .map((x) => ({\n      label: (\n        <Space>\n          <Avatar size={20} icon={<UserOutlined />} src={x.avatar} />\n          {x.name}\n        </Space>\n      ),\n      value: x.id,\n    }));\n\n  return (\n    <Form.Item\n      label={t('knowledgeConfiguration.tagSet')}\n      name={['parser_config', 'tag_kb_ids']}\n      tooltip={\n        <div\n          dangerouslySetInnerHTML={{\n            __html: DOMPurify.sanitize(t('knowledgeConfiguration.tagSetTip')),\n          }}\n        ></div>\n      }\n      rules={[\n        {\n          message: t('chat.knowledgeBasesMessage'),\n          type: 'array',\n        },\n      ]}\n    >\n      <Select\n        mode=\"multiple\"\n        options={knowledgeOptions}\n        placeholder={t('chat.knowledgeBasesMessage')}\n      ></Select>\n    </Form.Item>\n  );\n};\n\nexport const TopNTagsItem = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Form.Item label={t('knowledgeConfiguration.topnTags')}>\n      <Flex gap={20} align=\"center\">\n        <Flex flex={1}>\n          <Form.Item\n            name={['parser_config', 'topn_tags']}\n            noStyle\n            initialValue={3}\n          >\n            <Slider max={10} min={1} style={{ width: '100%' }} />\n          </Form.Item>\n        </Flex>\n        <Form.Item name={['parser_config', 'topn_tags']} noStyle>\n          <InputNumber max={10} min={1} />\n        </Form.Item>\n      </Flex>\n    </Form.Item>\n  );\n};\n\nexport function TagItems() {\n  return (\n    <>\n      <TagSetItem></TagSetItem>\n      <Form.Item noStyle dependencies={[['parser_config', 'tag_kb_ids']]}>\n        {({ getFieldValue }) => {\n          const ids: string[] = getFieldValue(['parser_config', 'tag_kb_ids']);\n\n          return (\n            Array.isArray(ids) &&\n            ids.length > 0 && <TopNTagsItem></TopNTagsItem>\n          );\n        }}\n      </Form.Item>\n    </>\n  );\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { useHandleChunkMethodSelectChange } from '@/hooks/logic-hooks';\nimport { Form, Select } from 'antd';\nimport { memo } from 'react';\nimport {\n  useHasParsedDocument,\n  useSelectChunkMethodList,\n  useSelectEmbeddingModelOptions,\n} from '../hooks';\n\nexport const EmbeddingModelItem = memo(function EmbeddingModelItem() {\n  const { t } = useTranslate('knowledgeConfiguration');\n  const embeddingModelOptions = useSelectEmbeddingModelOptions();\n  const disabled = useHasParsedDocument();\n\n  return (\n    <Form.Item\n      name=\"embd_id\"\n      label={t('embeddingModel')}\n      rules={[{ required: true }]}\n      tooltip={t('embeddingModelTip')}\n    >\n      <Select\n        placeholder={t('embeddingModelPlaceholder')}\n        options={embeddingModelOptions}\n        disabled={disabled}\n      ></Select>\n    </Form.Item>\n  );\n});\n\nexport const ChunkMethodItem = memo(function ChunkMethodItem() {\n  const { t } = useTranslate('knowledgeConfiguration');\n  const form = Form.useFormInstance();\n  const handleChunkMethodSelectChange = useHandleChunkMethodSelectChange(form);\n  const parserList = useSelectChunkMethodList();\n\n  return (\n    <Form.Item\n      name=\"parser_id\"\n      label={t('chunkMethod')}\n      tooltip={t('chunkMethodTip')}\n      rules={[{ required: true }]}\n    >\n      <Select\n        placeholder={t('chunkMethodPlaceholder')}\n        onChange={handleChunkMethodSelectChange}\n        options={parserList}\n      ></Select>\n    </Form.Item>\n  );\n});\n","import { DocumentParserType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { normFile } from '@/utils/file-util';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, Radio, Space, Upload } from 'antd';\nimport { FormInstance } from 'antd/lib';\nimport { useEffect, useMemo, useState } from 'react';\nimport {\n  useFetchKnowledgeConfigurationOnMount,\n  useSubmitKnowledgeConfiguration,\n} from '../hooks';\nimport { AudioConfiguration } from './audio';\nimport { BookConfiguration } from './book';\nimport { EmailConfiguration } from './email';\nimport { KnowledgeGraphConfiguration } from './knowledge-graph';\nimport { LawsConfiguration } from './laws';\nimport { ManualConfiguration } from './manual';\nimport { NaiveConfiguration } from './naive';\nimport { OneConfiguration } from './one';\nimport { PaperConfiguration } from './paper';\nimport { PictureConfiguration } from './picture';\nimport { PresentationConfiguration } from './presentation';\nimport { QAConfiguration } from './qa';\nimport { ResumeConfiguration } from './resume';\nimport { TableConfiguration } from './table';\nimport { TagConfiguration } from './tag';\n\nimport styles from '../index.less';\n\nconst ConfigurationComponentMap = {\n  [DocumentParserType.Naive]: NaiveConfiguration,\n  [DocumentParserType.Qa]: QAConfiguration,\n  [DocumentParserType.Resume]: ResumeConfiguration,\n  [DocumentParserType.Manual]: ManualConfiguration,\n  [DocumentParserType.Table]: TableConfiguration,\n  [DocumentParserType.Paper]: PaperConfiguration,\n  [DocumentParserType.Book]: BookConfiguration,\n  [DocumentParserType.Laws]: LawsConfiguration,\n  [DocumentParserType.Presentation]: PresentationConfiguration,\n  [DocumentParserType.Picture]: PictureConfiguration,\n  [DocumentParserType.One]: OneConfiguration,\n  [DocumentParserType.Audio]: AudioConfiguration,\n  [DocumentParserType.Email]: EmailConfiguration,\n  [DocumentParserType.Tag]: TagConfiguration,\n  [DocumentParserType.KnowledgeGraph]: KnowledgeGraphConfiguration,\n};\n\nfunction EmptyComponent() {\n  return <div></div>;\n}\n\nexport const ConfigurationForm = ({ form }: { form: FormInstance }) => {\n  const { submitKnowledgeConfiguration, submitLoading, navigateToDataset } =\n    useSubmitKnowledgeConfiguration(form);\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  const [finalParserId, setFinalParserId] = useState<DocumentParserType>();\n  const knowledgeDetails = useFetchKnowledgeConfigurationOnMount(form);\n  const parserId: DocumentParserType = Form.useWatch('parser_id', form);\n  const ConfigurationComponent = useMemo(() => {\n    return finalParserId\n      ? ConfigurationComponentMap[finalParserId]\n      : EmptyComponent;\n  }, [finalParserId]);\n\n  useEffect(() => {\n    setFinalParserId(parserId);\n  }, [parserId]);\n\n  useEffect(() => {\n    setFinalParserId(knowledgeDetails.parser_id as DocumentParserType);\n  }, [knowledgeDetails.parser_id]);\n\n  return (\n    <Form form={form} name=\"validateOnly\" layout=\"vertical\" autoComplete=\"off\">\n      <Form.Item name=\"name\" label={t('name')} rules={[{ required: true }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"avatar\"\n        label={t('photo')}\n        valuePropName=\"fileList\"\n        getValueFromEvent={normFile}\n      >\n        <Upload\n          listType=\"picture-card\"\n          maxCount={1}\n          beforeUpload={() => false}\n          showUploadList={{ showPreviewIcon: false, showRemoveIcon: false }}\n        >\n          <button style={{ border: 0, background: 'none' }} type=\"button\">\n            <PlusOutlined />\n            <div style={{ marginTop: 8 }}>{t('upload')}</div>\n          </button>\n        </Upload>\n      </Form.Item>\n      <Form.Item name=\"description\" label={t('description')}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"permission\"\n        label={t('permissions')}\n        tooltip={t('permissionsTip')}\n        rules={[{ required: true }]}\n      >\n        <Radio.Group>\n          <Radio value=\"me\">{t('me')}</Radio>\n          <Radio value=\"team\">{t('team')}</Radio>\n        </Radio.Group>\n      </Form.Item>\n\n      <ConfigurationComponent></ConfigurationComponent>\n\n      <Form.Item>\n        <div className={styles.buttonWrapper}>\n          <Space>\n            <Button size={'middle'} onClick={navigateToDataset}>\n              {t('cancel')}\n            </Button>\n            <Button\n              type=\"primary\"\n              size={'middle'}\n              loading={submitLoading}\n              onClick={submitKnowledgeConfiguration}\n            >\n              {t('save')}\n            </Button>\n          </Space>\n        </div>\n      </Form.Item>\n    </Form>\n  );\n};\n","import {\n  AutoKeywordsItem,\n  AutoQuestionsItem,\n} from '@/components/auto-keywords-item';\nimport { DatasetConfigurationContainer } from '@/components/dataset-configuration-container';\nimport Delimiter from '@/components/delimiter';\nimport ExcelToHtml from '@/components/excel-to-html';\nimport LayoutRecognize from '@/components/layout-recognize';\nimport MaxTokenNumber from '@/components/max-token-number';\nimport PageRank from '@/components/page-rank';\nimport ParseConfiguration from '@/components/parse-configuration';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-items';\nimport { Divider } from 'antd';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function NaiveConfiguration() {\n  return (\n    <section className=\"space-y-4 mb-4\">\n      <DatasetConfigurationContainer>\n        <LayoutRecognize></LayoutRecognize>\n        <EmbeddingModelItem></EmbeddingModelItem>\n        <ChunkMethodItem></ChunkMethodItem>\n        <MaxTokenNumber></MaxTokenNumber>\n        <Delimiter></Delimiter>\n      </DatasetConfigurationContainer>\n      <Divider></Divider>\n      <DatasetConfigurationContainer>\n        <PageRank></PageRank>\n        <AutoKeywordsItem></AutoKeywordsItem>\n        <AutoQuestionsItem></AutoQuestionsItem>\n        <ExcelToHtml></ExcelToHtml>\n        <TagItems></TagItems>\n      </DatasetConfigurationContainer>\n      <Divider></Divider>\n      <DatasetConfigurationContainer>\n        <ParseConfiguration></ParseConfiguration>\n      </DatasetConfigurationContainer>\n      <Divider></Divider>\n      <GraphRagItems></GraphRagItems>\n    </section>\n  );\n}\n","import PageRank from '@/components/page-rank';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function QAConfiguration() {\n  return (\n    <>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n\n      <TagItems></TagItems>\n    </>\n  );\n}\n","import PageRank from '@/components/page-rank';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function ResumeConfiguration() {\n  return (\n    <>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n\n      <TagItems></TagItems>\n    </>\n  );\n}\n","import {\n  AutoKeywordsItem,\n  AutoQuestionsItem,\n} from '@/components/auto-keywords-item';\nimport LayoutRecognize from '@/components/layout-recognize';\nimport PageRank from '@/components/page-rank';\nimport ParseConfiguration from '@/components/parse-configuration';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-items';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function ManualConfiguration() {\n  return (\n    <>\n      <LayoutRecognize></LayoutRecognize>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n\n      <>\n        <AutoKeywordsItem></AutoKeywordsItem>\n        <AutoQuestionsItem></AutoQuestionsItem>\n      </>\n\n      <ParseConfiguration></ParseConfiguration>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <TagItems></TagItems>\n    </>\n  );\n}\n","import PageRank from '@/components/page-rank';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function TableConfiguration() {\n  return (\n    <>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n    </>\n  );\n}\n","import {\n  AutoKeywordsItem,\n  AutoQuestionsItem,\n} from '@/components/auto-keywords-item';\nimport LayoutRecognize from '@/components/layout-recognize';\nimport PageRank from '@/components/page-rank';\nimport ParseConfiguration from '@/components/parse-configuration';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-items';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function PaperConfiguration() {\n  return (\n    <>\n      <LayoutRecognize></LayoutRecognize>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n\n      <>\n        <AutoKeywordsItem></AutoKeywordsItem>\n        <AutoQuestionsItem></AutoQuestionsItem>\n      </>\n\n      <ParseConfiguration></ParseConfiguration>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <TagItems></TagItems>\n    </>\n  );\n}\n","import {\n  AutoKeywordsItem,\n  AutoQuestionsItem,\n} from '@/components/auto-keywords-item';\nimport LayoutRecognize from '@/components/layout-recognize';\nimport PageRank from '@/components/page-rank';\nimport ParseConfiguration from '@/components/parse-configuration';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-items';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function BookConfiguration() {\n  return (\n    <>\n      <LayoutRecognize></LayoutRecognize>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n\n      <>\n        <AutoKeywordsItem></AutoKeywordsItem>\n        <AutoQuestionsItem></AutoQuestionsItem>\n      </>\n\n      <ParseConfiguration></ParseConfiguration>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <TagItems></TagItems>\n    </>\n  );\n}\n","import {\n  AutoKeywordsItem,\n  AutoQuestionsItem,\n} from '@/components/auto-keywords-item';\nimport LayoutRecognize from '@/components/layout-recognize';\nimport PageRank from '@/components/page-rank';\nimport ParseConfiguration from '@/components/parse-configuration';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-items';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function LawsConfiguration() {\n  return (\n    <>\n      <LayoutRecognize></LayoutRecognize>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n\n      <>\n        <AutoKeywordsItem></AutoKeywordsItem>\n        <AutoQuestionsItem></AutoQuestionsItem>\n      </>\n\n      <ParseConfiguration></ParseConfiguration>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <TagItems></TagItems>\n    </>\n  );\n}\n","import {\n  AutoKeywordsItem,\n  AutoQuestionsItem,\n} from '@/components/auto-keywords-item';\nimport LayoutRecognize from '@/components/layout-recognize';\nimport PageRank from '@/components/page-rank';\nimport ParseConfiguration from '@/components/parse-configuration';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-items';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function PresentationConfiguration() {\n  return (\n    <>\n      <LayoutRecognize></LayoutRecognize>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n\n      <>\n        <AutoKeywordsItem></AutoKeywordsItem>\n        <AutoQuestionsItem></AutoQuestionsItem>\n      </>\n\n      <ParseConfiguration></ParseConfiguration>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <TagItems></TagItems>\n    </>\n  );\n}\n","import {\n  AutoKeywordsItem,\n  AutoQuestionsItem,\n} from '@/components/auto-keywords-item';\nimport PageRank from '@/components/page-rank';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function PictureConfiguration() {\n  return (\n    <>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n\n      <>\n        <AutoKeywordsItem></AutoKeywordsItem>\n        <AutoQuestionsItem></AutoQuestionsItem>\n      </>\n      <TagItems></TagItems>\n    </>\n  );\n}\n","import {\n  AutoKeywordsItem,\n  AutoQuestionsItem,\n} from '@/components/auto-keywords-item';\nimport LayoutRecognize from '@/components/layout-recognize';\nimport PageRank from '@/components/page-rank';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-items';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function OneConfiguration() {\n  return (\n    <>\n      <LayoutRecognize></LayoutRecognize>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n\n      <>\n        <AutoKeywordsItem></AutoKeywordsItem>\n        <AutoQuestionsItem></AutoQuestionsItem>\n      </>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <TagItems></TagItems>\n    </>\n  );\n}\n","import {\n  AutoKeywordsItem,\n  AutoQuestionsItem,\n} from '@/components/auto-keywords-item';\nimport PageRank from '@/components/page-rank';\nimport ParseConfiguration from '@/components/parse-configuration';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-items';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function AudioConfiguration() {\n  return (\n    <>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n\n      <>\n        <AutoKeywordsItem></AutoKeywordsItem>\n        <AutoQuestionsItem></AutoQuestionsItem>\n      </>\n\n      <ParseConfiguration></ParseConfiguration>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <TagItems></TagItems>\n    </>\n  );\n}\n","import {\n  AutoKeywordsItem,\n  AutoQuestionsItem,\n} from '@/components/auto-keywords-item';\nimport PageRank from '@/components/page-rank';\nimport ParseConfiguration from '@/components/parse-configuration';\nimport GraphRagItems from '@/components/parse-configuration/graph-rag-items';\nimport { TagItems } from '../tag-item';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function EmailConfiguration() {\n  return (\n    <>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n\n      <>\n        <AutoKeywordsItem></AutoKeywordsItem>\n        <AutoQuestionsItem></AutoQuestionsItem>\n      </>\n\n      <ParseConfiguration></ParseConfiguration>\n\n      <GraphRagItems marginBottom></GraphRagItems>\n\n      <TagItems></TagItems>\n    </>\n  );\n}\n","import PageRank from '@/components/page-rank';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function TagConfiguration() {\n  return (\n    <>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n    </>\n  );\n}\n","import Delimiter from '@/components/delimiter';\nimport EntityTypesItem from '@/components/entity-types-item';\nimport MaxTokenNumber from '@/components/max-token-number';\nimport PageRank from '@/components/page-rank';\nimport { ChunkMethodItem, EmbeddingModelItem } from './common-item';\n\nexport function KnowledgeGraphConfiguration() {\n  return (\n    <>\n      <EmbeddingModelItem></EmbeddingModelItem>\n      <ChunkMethodItem></ChunkMethodItem>\n\n      <PageRank></PageRank>\n\n      <>\n        <EntityTypesItem></EntityTypesItem>\n        <MaxTokenNumber max={8192 * 2}></MaxTokenNumber>\n        <Delimiter></Delimiter>\n      </>\n    </>\n  );\n}\n","import { Col, Divider, Row, Spin, Typography } from 'antd';\nimport CategoryPanel from './category-panel';\nimport { ConfigurationForm } from './configuration';\nimport {\n  useHandleChunkMethodChange,\n  useSelectKnowledgeDetailsLoading,\n} from './hooks';\n\nimport { useTranslate } from '@/hooks/common-hooks';\nimport styles from './index.less';\n\nconst { Title } = Typography;\n\nconst Configuration = () => {\n  const loading = useSelectKnowledgeDetailsLoading();\n  const { form, chunkMethod } = useHandleChunkMethodChange();\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  return (\n    <div className={styles.configurationWrapper}>\n      <Title level={5}>\n        {t('configuration', { keyPrefix: 'knowledgeDetails' })}\n      </Title>\n      <p>{t('titleDescription')}</p>\n      <Divider></Divider>\n      <Spin spinning={loading}>\n        <Row gutter={32}>\n          <Col span={8}>\n            <ConfigurationForm form={form}></ConfigurationForm>\n          </Col>\n          <Col span={16}>\n            <CategoryPanel chunkMethod={chunkMethod}></CategoryPanel>\n          </Col>\n        </Row>\n      </Spin>\n    </div>\n  );\n};\n\nexport default Configuration;\n","import { KnowledgeRouteKey } from '@/constants/knowledge';\n\nexport const routeMap = {\n  [KnowledgeRouteKey.Dataset]: 'Dataset',\n  [KnowledgeRouteKey.Testing]: 'Retrieval testing',\n  [KnowledgeRouteKey.Configuration]: 'Configuration',\n};\n\nexport enum KnowledgeDatasetRouteKey {\n  Chunk = 'chunk',\n  File = 'file',\n}\n\nexport const datasetRouteMap = {\n  [KnowledgeDatasetRouteKey.Chunk]: 'Chunk',\n  [KnowledgeDatasetRouteKey.File]: 'File Upload',\n};\n\nexport * from '@/constants/knowledge';\n\nexport const TagRenameId = 'tagRename';\n","import api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request from '@/utils/request';\n\nconst {\n  listFile,\n  removeFile,\n  uploadFile,\n  renameFile,\n  getAllParentFolder,\n  createFolder,\n  connectFileToKnowledge,\n  get_document_file,\n  getFile,\n  moveFile,\n} = api;\n\nconst methods = {\n  listFile: {\n    url: listFile,\n    method: 'get',\n  },\n  removeFile: {\n    url: removeFile,\n    method: 'post',\n  },\n  uploadFile: {\n    url: uploadFile,\n    method: 'post',\n  },\n  renameFile: {\n    url: renameFile,\n    method: 'post',\n  },\n  getAllParentFolder: {\n    url: getAllParentFolder,\n    method: 'get',\n  },\n  createFolder: {\n    url: createFolder,\n    method: 'post',\n  },\n  connectFileToKnowledge: {\n    url: connectFileToKnowledge,\n    method: 'post',\n  },\n  getFile: {\n    url: getFile,\n    method: 'get',\n    responseType: 'blob',\n  },\n  getDocumentFile: {\n    url: get_document_file,\n    method: 'get',\n    responseType: 'blob',\n  },\n  moveFile: {\n    url: moveFile,\n    method: 'post',\n  },\n} as const;\n\nconst fileManagerService = registerServer<keyof typeof methods>(\n  methods,\n  request,\n);\n\nexport default fileManagerService;\n","import { FileMimeType } from '@/constants/common';\nimport fileManagerService from '@/services/file-manager-service';\nimport { UploadFile } from 'antd';\n\nexport const transformFile2Base64 = (val: any): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(val);\n    reader.onload = (): void => {\n      // Create image object\n      const img = new Image();\n      img.src = reader.result as string;\n\n      img.onload = () => {\n        // Create canvas\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        // Calculate compressed dimensions, set max width/height to 800px\n        let width = img.width;\n        let height = img.height;\n        const maxSize = 100;\n\n        if (width > height && width > maxSize) {\n          height = (height * maxSize) / width;\n          width = maxSize;\n        } else if (height > maxSize) {\n          width = (width * maxSize) / height;\n          height = maxSize;\n        }\n\n        // Set canvas dimensions\n        canvas.width = width;\n        canvas.height = height;\n\n        // Draw image\n        ctx?.drawImage(img, 0, 0, width, height);\n\n        // Convert to base64, maintain original format and transparency\n        const compressedBase64 = canvas.toDataURL('image/png');\n        resolve(compressedBase64);\n      };\n\n      img.onerror = reject;\n    };\n    reader.onerror = reject;\n  });\n};\n\nexport const transformBase64ToFile = (\n  dataUrl: string,\n  filename: string = 'file',\n) => {\n  let arr = dataUrl.split(','),\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n\n  const mime = arr[0].match(/:(.*?);/);\n  const mimeType = mime ? mime[1] : 'image/png';\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], filename, { type: mimeType });\n};\n\nexport const normFile = (e: any) => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e?.fileList;\n};\n\nexport const getUploadFileListFromBase64 = (avatar: string) => {\n  let fileList: UploadFile[] = [];\n\n  if (avatar) {\n    fileList = [{ uid: '1', name: 'file', thumbUrl: avatar, status: 'done' }];\n  }\n\n  return fileList;\n};\n\nexport const getBase64FromUploadFileList = async (fileList?: UploadFile[]) => {\n  if (Array.isArray(fileList) && fileList.length > 0) {\n    const file = fileList[0];\n    const originFileObj = file.originFileObj;\n    if (originFileObj) {\n      const base64 = await transformFile2Base64(originFileObj);\n      return base64;\n    } else {\n      return file.thumbUrl;\n    }\n    // return fileList[0].thumbUrl; TODO: Even JPG files will be converted to base64 parameters in png format\n  }\n\n  return '';\n};\n\nasync function fetchDocumentBlob(id: string, mimeType?: FileMimeType) {\n  const response = await fileManagerService.getDocumentFile({}, id);\n  const blob = new Blob([response.data], {\n    type: mimeType || response.data.type,\n  });\n\n  return blob;\n}\n\nexport async function previewHtmlFile(id: string) {\n  const blob = await fetchDocumentBlob(id, FileMimeType.Html);\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.click();\n  URL.revokeObjectURL(url);\n}\n\nexport const downloadFileFromBlob = (blob: Blob, name?: string) => {\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  if (name) {\n    a.download = name;\n  }\n  a.click();\n  window.URL.revokeObjectURL(url);\n};\n\nexport const downloadDocument = async ({\n  id,\n  filename,\n}: {\n  id: string;\n  filename?: string;\n}) => {\n  const blob = await fetchDocumentBlob(id);\n  downloadFileFromBlob(blob, filename);\n};\n\nconst Units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\nexport const formatBytes = (x: string | number) => {\n  let l = 0,\n    n = (typeof x === 'string' ? parseInt(x, 10) : x) || 0;\n\n  while (n >= 1024 && ++l) {\n    n = n / 1024;\n  }\n\n  return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + Units[l];\n};\n\nexport const downloadJsonFile = async (\n  data: Record<string, any>,\n  fileName: string,\n) => {\n  const blob = new Blob([JSON.stringify(data)], { type: FileMimeType.Json });\n  downloadFileFromBlob(blob, fileName);\n};\n\nexport function transformBase64ToFileWithPreview(\n  dataUrl: string,\n  filename: string = 'file',\n) {\n  const file = transformBase64ToFile(dataUrl, filename);\n\n  (file as any).preview = dataUrl;\n\n  return file;\n}\n\nexport const getBase64FromFileList = async (fileList?: File[]) => {\n  if (Array.isArray(fileList) && fileList.length > 0) {\n    const file = fileList[0];\n    if (file) {\n      const base64 = await transformFile2Base64(file);\n      return base64;\n    }\n  }\n\n  return '';\n};\n"],"names":["AutoKeywordsItem","t","useTranslate","_jsx","Form","Item","label","tooltip","children","_jsxs","Flex","gap","align","flex","name","noStyle","initialValue","Slider","max","style","width","InputNumber","min","AutoQuestionsItem","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","_excluded7","_excluded8","AlertDialog","AlertDialogPrimitive","AlertDialogTrigger","AlertDialogPortal","AlertDialogOverlay","React","_ref","ref","className","props","_objectWithoutProperties","_objectSpread","cn","displayName","AlertDialogContent","_ref2","AlertDialogHeader","_ref3","AlertDialogFooter","_ref4","AlertDialogTitle","_ref5","_ref6","AlertDialogAction","_ref7","buttonVariants","AlertDialogCancel","_ref8","variant","ConfirmDeleteDialog","title","onOk","onCancel","_ref$hidden","hidden","useTranslation","asChild","onSelect","e","preventDefault","onClick","stopPropagation","DatasetConfigurationContainer","_ref$show","show","DelimiterInput","value","onChange","maxLength","nextValue","replaceAll","Input","target","rules","required","_ref$value","token","theme","useToken","_useState","useState","_useState2","_slicedToArray","inputVisible","setInputVisible","_useState3","_useState4","inputValue","setInputValue","inputRef","useRef","useEffect","_inputRef$current","current","focus","handleInputConfirm","newTags","split","map","tag","trim","filter","includes","concat","_toConsumableArray","tagChild","Tooltip","Tag","styles","closable","onClose","removedTag","tagPlusStyle","background","colorBgContainer","borderStyle","Array","isArray","length","TweenOneGroup","enter","scale","opacity","type","duration","onEnd","leave","appear","size","onBlur","onPressEnter","PlusOutlined","initialEntityTypes","_ref$field","field","EditTag","valuePropName","Switch","allOptions","useSelectLlmOptionsByModelType","options","useMemo","list","x","camelCase","image2TextList","LlmModelType","Image2text","y","Select","popupMatchSelectWidth","_ref$initialValue","_ref$max","message","excludedParseMethods","DocumentParserType","Table","KnowledgeGraph","Resume","Picture","Qa","showGraphRagItems","parserId","some","UseGraphRagItem","_ref$marginBottom","marginBottom","methodOptions","upperFirst","renderWideTooltip","useCallback","overlayInnerStyle","shouldUpdate","prevValues","curValues","parser_config","graphrag","use_graphrag","getFieldValue","_Fragment","EntityTypesItem","dangerouslySetInnerHTML","__html","One","showRaptorParseConfiguration","form","useFormInstance","handleGenerate","setFieldValue","random","raptor","use_raptor","TextArea","rows","step","Button","Checkbox","CheckboxPrimitive","Check","Dialog","DialogPrimitive","DialogTrigger","DialogPortal","DialogOverlay","DialogContent","X","DialogHeader","DialogFooter","DialogTitle","cva","variants","default","destructive","outline","secondary","ghost","link","tertiary","sm","lg","icon","defaultVariants","LoadingButton","_ref$loading","loading","disabled","_ref$asChild","Comp","Slot","Loader2","Slottable","rootClassName","TableHeader","TableBody","TableRow","TableHead","TableCell","HiddenFields","RenameForm","initialName","hideModal","FormSchema","z","object","string","useForm","resolver","zodResolver","defaultValues","renameTag","useRenameTag","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","fromTag","toTag","sent","stop","apply","arguments","setValue","onSubmit","handleSubmit","_x","id","TagRenameId","FormField","control","render","FormItem","FormLabel","FormControl","placeholder","autoComplete","FormMessage","RenameDialog","useTagIsRenaming","open","onOpenChange","TagTable","_table$getColumn","_table$getRowModel$ro","useFetchTagList","tagList","setTagList","_React$useState","_React$useState2","sorting","setSorting","_React$useState3","_React$useState4","columnFilters","setColumnFilters","_React$useState5","_React$useState6","columnVisibility","setColumnVisibility","rowSelection","setRowSelection","deleteTag","useDeleteTag","frequency","handleDeleteTag","tags","_useRenameKnowledgeTa","setTag","_useSetModalState","useSetModalState","tagRenameVisible","visible","hideTagRenameModal","showFileRenameModal","showModal","showTagRenameModal","record","useRenameKnowledgeTag","columns","header","table","checked","getIsAllPageRowsSelected","getIsSomePageRowsSelected","onCheckedChange","toggleAllPageRowsSelected","cell","row","getIsSelected","toggleSelected","enableSorting","enableHiding","accessorKey","column","toggleSorting","getIsSorted","ArrowUpDown","getValue","original","TooltipTrigger","Trash2","TooltipContent","Pencil","useReactTable","onSortingChange","onColumnFiltersChange","getCoreRowModel","getPaginationRowModel","getSortedRowModel","getFilteredRowModel","onColumnVisibilityChange","onRowSelectionChange","state","selectedRowLength","getFilteredSelectedRowModel","TooltipProvider","getColumn","getFilterValue","event","_table$getColumn2","setFilterValue","getHeaderGroups","headerGroup","headers","isPlaceholder","flexRender","columnDef","getContext","getRowModel","getVisibleCells","colSpan","previousPage","getCanPreviousPage","nextPage","getCanNextPage","TagWordCloud","domRef","chartRef","nextList","sort","a","b","slice","text","sumValue","sumBy","renderWordCloud","Chart","container","autoFit","layout","fontSize","encode","color","legend","items","_chartRef$current","destroy","TagType","TagContentMap","_defineProperty","Cloud","TagTabs","Segmented","val","getImageName","prefix","fill","idx","ImageMap","book","laws","manual","picture","naive","paper","presentation","qa","resume","one","knowledge_graph","Text","Typography","chunkMethod","parserList","useSelectParserList","item","find","description","imageList","DOMPurify","Row","gutter","Col","span","SvgIcon","Divider","Empty","image","TagSetItem","knowledgeOptions","useFetchKnowledgeList","parser_id","Space","Avatar","UserOutlined","src","avatar","mode","TopNTagsItem","TagItems","dependencies","ids","EmbeddingModelItem","memo","embeddingModelOptions","Embedding","useFetchKnowledgeBaseConfiguration","chunk_num","ChunkMethodItem","handleChunkMethodSelectChange","useHandleChunkMethodSelectChange","ConfigurationComponentMap","_ConfigurationCompone","Naive","LayoutRecognize","MaxTokenNumber","Delimiter","PageRank","ExcelToHtml","ParseConfiguration","GraphRagItems","Manual","Paper","Book","Laws","Presentation","Audio","Email","EmptyComponent","ConfigurationForm","_useSubmitKnowledgeCo","_useUpdateKnowledge","useUpdateKnowledge","saveKnowledgeConfiguration","navigateToDataset","useNavigateToDataset","submitKnowledgeConfiguration","values","validateFields","getBase64FromUploadFileList","submitLoading","useSubmitKnowledgeConfiguration","finalParserId","setFinalParserId","knowledgeDetails","fileList","getUploadFileListFromBase64","setFieldsValue","pick","useFetchKnowledgeConfigurationOnMount","useWatch","ConfigurationComponent","getValueFromEvent","normFile","Upload","listType","maxCount","beforeUpload","showUploadList","showPreviewIcon","showRemoveIcon","border","marginTop","Radio","Title","useIsFetching","queryKey","_useHandleChunkMethod","_Form$useForm","console","log","useHandleChunkMethodChange","level","keyPrefix","Spin","spinning","CategoryPanel","KnowledgeDatasetRouteKey","KnowledgeRouteKey","Dataset","Testing","Configuration","Chunk","File","listFile","api","removeFile","uploadFile","renameFile","getAllParentFolder","createFolder","connectFileToKnowledge","get_document_file","methods","url","method","getFile","responseType","getDocumentFile","moveFile","fileManagerService","registerServer","request","transformFile2Base64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","img","Image","result","canvas","document","createElement","ctx","height","maxSize","drawImage","compressedBase64","toDataURL","onerror","uid","thumbUrl","status","file","originFileObj","base64","abrupt","fetchDocumentBlob","_x2","_x3","_fetchDocumentBlob","_callee5","mimeType","response","blob","_context5","Blob","previewHtmlFile","_x4","_previewHtmlFile","_callee6","_context6","FileMimeType","Html","URL","createObjectURL","href","click","revokeObjectURL","downloadFileFromBlob","window","download","downloadDocument","_callee2","filename","_context2","_x5","Units","formatBytes","l","n","parseInt","toFixed","downloadJsonFile","_callee3","fileName","_context3","JSON","stringify","Json","_x6","_x7"],"sourceRoot":""}