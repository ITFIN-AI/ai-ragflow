{"version":3,"file":"p__chat__share__index.6f3d2efe.async.js","mappings":"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","sources":["webpack:///./src/components/message-item/feedback-modal.tsx","webpack:///./src/components/message-item/prompt-modal.tsx","webpack:///./src/components/message-item/group-button.tsx","webpack:///./src/components/message-item/hooks.ts","webpack:///./src/components/message-item/index.less?7287","webpack:///./src/components/message-item/index.tsx","webpack:///./src/pages/chat/share/index.less?4388","webpack:///./src/pages/chat/share/large.tsx","webpack:///./src/pages/chat/share/index.tsx"],"sourcesContent":["import { Form, Input, Modal } from 'antd';\n\nimport { IModalProps } from '@/interfaces/common';\nimport { IFeedbackRequestBody } from '@/interfaces/request/chat';\nimport { useCallback } from 'react';\n\ntype FieldType = {\n  feedback?: string;\n};\n\nconst FeedbackModal = ({\n  visible,\n  hideModal,\n  onOk,\n  loading,\n}: IModalProps<IFeedbackRequestBody>) => {\n  const [form] = Form.useForm();\n\n  const handleOk = useCallback(async () => {\n    const ret = await form.validateFields();\n    return onOk?.({ thumbup: false, feedback: ret.feedback });\n  }, [onOk, form]);\n\n  return (\n    <Modal\n      title=\"Feedback\"\n      open={visible}\n      onOk={handleOk}\n      onCancel={hideModal}\n      confirmLoading={loading}\n    >\n      <Form\n        name=\"basic\"\n        labelCol={{ span: 0 }}\n        wrapperCol={{ span: 24 }}\n        style={{ maxWidth: 600 }}\n        autoComplete=\"off\"\n        form={form}\n      >\n        <Form.Item<FieldType>\n          name=\"feedback\"\n          rules={[{ required: true, message: 'Please input your feedback!' }]}\n        >\n          <Input.TextArea rows={8} placeholder=\"Please input your feedback!\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default FeedbackModal;\n","import { IModalProps } from '@/interfaces/common';\nimport { IFeedbackRequestBody } from '@/interfaces/request/chat';\nimport { Modal, Space } from 'antd';\nimport HightLightMarkdown from '../highlight-markdown';\nimport SvgIcon from '../svg-icon';\n\nconst PromptModal = ({\n  visible,\n  hideModal,\n  prompt,\n}: IModalProps<IFeedbackRequestBody> & { prompt?: string }) => {\n  return (\n    <Modal\n      title={\n        <Space>\n          <SvgIcon name={`prompt`} width={18}></SvgIcon>\n          Prompt\n        </Space>\n      }\n      width={'80%'}\n      open={visible}\n      onCancel={hideModal}\n      footer={null}\n    >\n      <HightLightMarkdown>{prompt}</HightLightMarkdown>\n    </Modal>\n  );\n};\n\nexport default PromptModal;\n","import { PromptIcon } from '@/assets/icon/Icon';\nimport CopyToClipboard from '@/components/copy-to-clipboard';\nimport { useSetModalState } from '@/hooks/common-hooks';\nimport { IRemoveMessageById } from '@/hooks/logic-hooks';\nimport {\n  DeleteOutlined,\n  DislikeOutlined,\n  LikeOutlined,\n  PauseCircleOutlined,\n  SoundOutlined,\n  SyncOutlined,\n} from '@ant-design/icons';\nimport { Radio, Tooltip } from 'antd';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport FeedbackModal from './feedback-modal';\nimport { useRemoveMessage, useSendFeedback, useSpeech } from './hooks';\nimport PromptModal from './prompt-modal';\n\ninterface IProps {\n  messageId: string;\n  content: string;\n  prompt?: string;\n  showLikeButton: boolean;\n  audioBinary?: string;\n  showLoudspeaker?: boolean;\n}\n\nexport const AssistantGroupButton = ({\n  messageId,\n  content,\n  prompt,\n  audioBinary,\n  showLikeButton,\n  showLoudspeaker = true,\n}: IProps) => {\n  const { visible, hideModal, showModal, onFeedbackOk, loading } =\n    useSendFeedback(messageId);\n  const {\n    visible: promptVisible,\n    hideModal: hidePromptModal,\n    showModal: showPromptModal,\n  } = useSetModalState();\n  const { t } = useTranslation();\n  const { handleRead, ref, isPlaying } = useSpeech(content, audioBinary);\n\n  const handleLike = useCallback(() => {\n    onFeedbackOk({ thumbup: true });\n  }, [onFeedbackOk]);\n\n  return (\n    <>\n      <Radio.Group size=\"small\">\n        <Radio.Button value=\"a\">\n          <CopyToClipboard text={content}></CopyToClipboard>\n        </Radio.Button>\n        {showLoudspeaker && (\n          <Radio.Button value=\"b\" onClick={handleRead}>\n            <Tooltip title={t('chat.read')}>\n              {isPlaying ? <PauseCircleOutlined /> : <SoundOutlined />}\n            </Tooltip>\n            <audio src=\"\" ref={ref}></audio>\n          </Radio.Button>\n        )}\n        {showLikeButton && (\n          <>\n            <Radio.Button value=\"c\" onClick={handleLike}>\n              <LikeOutlined />\n            </Radio.Button>\n            <Radio.Button value=\"d\" onClick={showModal}>\n              <DislikeOutlined />\n            </Radio.Button>\n          </>\n        )}\n        {prompt && (\n          <Radio.Button value=\"e\" onClick={showPromptModal}>\n            <PromptIcon style={{ fontSize: '16px' }} />\n          </Radio.Button>\n        )}\n      </Radio.Group>\n      {visible && (\n        <FeedbackModal\n          visible={visible}\n          hideModal={hideModal}\n          onOk={onFeedbackOk}\n          loading={loading}\n        ></FeedbackModal>\n      )}\n      {promptVisible && (\n        <PromptModal\n          visible={promptVisible}\n          hideModal={hidePromptModal}\n          prompt={prompt}\n        ></PromptModal>\n      )}\n    </>\n  );\n};\n\ninterface UserGroupButtonProps extends Partial<IRemoveMessageById> {\n  messageId: string;\n  content: string;\n  regenerateMessage?: () => void;\n  sendLoading: boolean;\n}\n\nexport const UserGroupButton = ({\n  content,\n  messageId,\n  sendLoading,\n  removeMessageById,\n  regenerateMessage,\n}: UserGroupButtonProps) => {\n  const { onRemoveMessage, loading } = useRemoveMessage(\n    messageId,\n    removeMessageById,\n  );\n  const { t } = useTranslation();\n\n  return (\n    <Radio.Group size=\"small\">\n      <Radio.Button value=\"a\">\n        <CopyToClipboard text={content}></CopyToClipboard>\n      </Radio.Button>\n      {regenerateMessage && (\n        <Radio.Button\n          value=\"b\"\n          onClick={regenerateMessage}\n          disabled={sendLoading}\n        >\n          <Tooltip title={t('chat.regenerate')}>\n            <SyncOutlined spin={sendLoading} />\n          </Tooltip>\n        </Radio.Button>\n      )}\n      {removeMessageById && (\n        <Radio.Button value=\"c\" onClick={onRemoveMessage} disabled={loading}>\n          <Tooltip title={t('common.delete')}>\n            <DeleteOutlined spin={loading} />\n          </Tooltip>\n        </Radio.Button>\n      )}\n    </Radio.Group>\n  );\n};\n","import { useDeleteMessage, useFeedback } from '@/hooks/chat-hooks';\nimport { useSetModalState } from '@/hooks/common-hooks';\nimport { IRemoveMessageById, useSpeechWithSse } from '@/hooks/logic-hooks';\nimport { IFeedbackRequestBody } from '@/interfaces/request/chat';\nimport { hexStringToUint8Array } from '@/utils/common-util';\nimport { SpeechPlayer } from 'openai-speech-stream-player';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nexport const useSendFeedback = (messageId: string) => {\n  const { visible, hideModal, showModal } = useSetModalState();\n  const { feedback, loading } = useFeedback();\n\n  const onFeedbackOk = useCallback(\n    async (params: IFeedbackRequestBody) => {\n      const ret = await feedback({\n        ...params,\n        messageId: messageId,\n      });\n\n      if (ret === 0) {\n        hideModal();\n      }\n    },\n    [feedback, hideModal, messageId],\n  );\n\n  return {\n    loading,\n    onFeedbackOk,\n    visible,\n    hideModal,\n    showModal,\n  };\n};\n\nexport const useRemoveMessage = (\n  messageId: string,\n  removeMessageById?: IRemoveMessageById['removeMessageById'],\n) => {\n  const { deleteMessage, loading } = useDeleteMessage();\n\n  const onRemoveMessage = useCallback(async () => {\n    if (messageId) {\n      const code = await deleteMessage(messageId);\n      if (code === 0) {\n        removeMessageById?.(messageId);\n      }\n    }\n  }, [deleteMessage, messageId, removeMessageById]);\n\n  return { onRemoveMessage, loading };\n};\n\nexport const useSpeech = (content: string, audioBinary?: string) => {\n  const ref = useRef<HTMLAudioElement>(null);\n  const { read } = useSpeechWithSse();\n  const player = useRef<SpeechPlayer>();\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\n\n  const initialize = useCallback(async () => {\n    player.current = new SpeechPlayer({\n      audio: ref.current!,\n      onPlaying: () => {\n        setIsPlaying(true);\n      },\n      onPause: () => {\n        setIsPlaying(false);\n      },\n      onChunkEnd: () => {},\n      mimeType: MediaSource.isTypeSupported('audio/mpeg')\n        ? 'audio/mpeg'\n        : 'audio/mp4; codecs=\"mp4a.40.2\"', // https://stackoverflow.com/questions/64079424/cannot-replay-mp3-in-firefox-using-mediasource-even-though-it-works-in-chrome\n    });\n    await player.current.init();\n  }, []);\n\n  const pause = useCallback(() => {\n    player.current?.pause();\n  }, []);\n\n  const speech = useCallback(async () => {\n    const response = await read({ text: content });\n    if (response) {\n      player?.current?.feedWithResponse(response);\n    }\n  }, [read, content]);\n\n  const handleRead = useCallback(async () => {\n    if (isPlaying) {\n      setIsPlaying(false);\n      pause();\n    } else {\n      setIsPlaying(true);\n      speech();\n    }\n  }, [setIsPlaying, speech, isPlaying, pause]);\n\n  useEffect(() => {\n    if (audioBinary) {\n      const units = hexStringToUint8Array(audioBinary);\n      if (units) {\n        try {\n          player.current?.feed(units);\n        } catch (error) {\n          console.warn(error);\n        }\n      }\n    }\n  }, [audioBinary]);\n\n  useEffect(() => {\n    initialize();\n  }, [initialize]);\n\n  return { ref, handleRead, isPlaying };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"messageItem\":\"messageItem___OK1Zd\",\"messageItemSection\":\"messageItemSection___a_W_M\",\"messageItemSectionLeft\":\"messageItemSectionLeft___nCfnq\",\"messageItemContent\":\"messageItemContent___j99sG\",\"messageItemContentReverse\":\"messageItemContentReverse___EgYgc\",\"messageText\":\"messageText___vuU2B\",\"messageTextDark\":\"messageTextDark___mYdLd\",\"messageUserText\":\"messageUserText___yCJ20\",\"messageEmpty\":\"messageEmpty___oF9mg\",\"thumbnailImg\":\"thumbnailImg___ObcCZ\",\"messageItemLeft\":\"messageItemLeft___L270A\",\"messageItemRight\":\"messageItemRight___icDzT\"};","import { ReactComponent as AssistantIcon } from '@/assets/svg/assistant.svg';\nimport { MessageType } from '@/constants/chat';\nimport { useSetModalState } from '@/hooks/common-hooks';\nimport { IReference, IReferenceChunk } from '@/interfaces/database/chat';\nimport classNames from 'classnames';\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react';\n\nimport {\n  useFetchDocumentInfosByIds,\n  useFetchDocumentThumbnailsByIds,\n} from '@/hooks/document-hooks';\nimport { IRegenerateMessage, IRemoveMessageById } from '@/hooks/logic-hooks';\nimport { IMessage } from '@/pages/chat/interface';\nimport MarkdownContent from '@/pages/chat/markdown-content';\nimport { getExtension, isImage } from '@/utils/document-util';\nimport { Avatar, Button, Flex, List, Space, Typography } from 'antd';\nimport FileIcon from '../file-icon';\nimport IndentedTreeModal from '../indented-tree/modal';\nimport NewDocumentLink from '../new-document-link';\nimport { useTheme } from '../theme-provider';\nimport { AssistantGroupButton, UserGroupButton } from './group-button';\nimport styles from './index.less';\n\nconst { Text } = Typography;\n\ninterface IProps extends Partial<IRemoveMessageById>, IRegenerateMessage {\n  item: IMessage;\n  reference: IReference;\n  loading?: boolean;\n  sendLoading?: boolean;\n  visibleAvatar?: boolean;\n  nickname?: string;\n  avatar?: string;\n  avatarDialog?: string | null;\n  clickDocumentButton?: (documentId: string, chunk: IReferenceChunk) => void;\n  index: number;\n  showLikeButton?: boolean;\n  showLoudspeaker?: boolean;\n}\n\nconst MessageItem = ({\n  item,\n  reference,\n  loading = false,\n  avatar,\n  avatarDialog,\n  sendLoading = false,\n  clickDocumentButton,\n  index,\n  removeMessageById,\n  regenerateMessage,\n  showLikeButton = true,\n  showLoudspeaker = true,\n  visibleAvatar = true,\n}: IProps) => {\n  const { theme } = useTheme();\n  const isAssistant = item.role === MessageType.Assistant;\n  const isUser = item.role === MessageType.User;\n  const { data: documentList, setDocumentIds } = useFetchDocumentInfosByIds();\n  const { data: documentThumbnails, setDocumentIds: setIds } =\n    useFetchDocumentThumbnailsByIds();\n  const { visible, hideModal, showModal } = useSetModalState();\n  const [clickedDocumentId, setClickedDocumentId] = useState('');\n\n  const referenceDocumentList = useMemo(() => {\n    return reference?.doc_aggs ?? [];\n  }, [reference?.doc_aggs]);\n\n  const handleUserDocumentClick = useCallback(\n    (id: string) => () => {\n      setClickedDocumentId(id);\n      showModal();\n    },\n    [showModal],\n  );\n\n  const handleRegenerateMessage = useCallback(() => {\n    regenerateMessage?.(item);\n  }, [regenerateMessage, item]);\n\n  useEffect(() => {\n    const ids = item?.doc_ids ?? [];\n    if (ids.length) {\n      setDocumentIds(ids);\n      const documentIds = ids.filter((x) => !(x in documentThumbnails));\n      if (documentIds.length) {\n        setIds(documentIds);\n      }\n    }\n  }, [item.doc_ids, setDocumentIds, setIds, documentThumbnails]);\n\n  return (\n    <div\n      className={classNames(styles.messageItem, {\n        [styles.messageItemLeft]: item.role === MessageType.Assistant,\n        [styles.messageItemRight]: item.role === MessageType.User,\n      })}\n    >\n      <section\n        className={classNames(styles.messageItemSection, {\n          [styles.messageItemSectionLeft]: item.role === MessageType.Assistant,\n          [styles.messageItemSectionRight]: item.role === MessageType.User,\n        })}\n      >\n        <div\n          className={classNames(styles.messageItemContent, {\n            [styles.messageItemContentReverse]: item.role === MessageType.User,\n          })}\n        >\n          {visibleAvatar &&\n            (item.role === MessageType.User ? (\n              <Avatar size={40} src={avatar ?? '/logo.svg'} />\n            ) : avatarDialog ? (\n              <Avatar size={40} src={avatarDialog} />\n            ) : (\n              <AssistantIcon />\n            ))}\n\n          <Flex vertical gap={8} flex={1}>\n            <Space>\n              {isAssistant ? (\n                index !== 0 && (\n                  <AssistantGroupButton\n                    messageId={item.id}\n                    content={item.content}\n                    prompt={item.prompt}\n                    showLikeButton={showLikeButton}\n                    audioBinary={item.audio_binary}\n                    showLoudspeaker={showLoudspeaker}\n                  ></AssistantGroupButton>\n                )\n              ) : (\n                <UserGroupButton\n                  content={item.content}\n                  messageId={item.id}\n                  removeMessageById={removeMessageById}\n                  regenerateMessage={\n                    regenerateMessage && handleRegenerateMessage\n                  }\n                  sendLoading={sendLoading}\n                ></UserGroupButton>\n              )}\n\n              {/* <b>{isAssistant ? '' : nickname}</b> */}\n            </Space>\n            <div\n              className={\n                isAssistant\n                  ? theme === 'dark'\n                    ? styles.messageTextDark\n                    : styles.messageText\n                  : styles.messageUserText\n              }\n            >\n              <MarkdownContent\n                loading={loading}\n                content={item.content}\n                reference={reference}\n                clickDocumentButton={clickDocumentButton}\n              ></MarkdownContent>\n            </div>\n            {isAssistant && referenceDocumentList.length > 0 && (\n              <List\n                bordered\n                dataSource={referenceDocumentList}\n                renderItem={(item) => {\n                  return (\n                    <List.Item>\n                      <Flex gap={'small'} align=\"center\">\n                        <FileIcon\n                          id={item.doc_id}\n                          name={item.doc_name}\n                        ></FileIcon>\n\n                        <NewDocumentLink\n                          documentId={item.doc_id}\n                          documentName={item.doc_name}\n                          prefix=\"document\"\n                          link={item.url}\n                        >\n                          {item.doc_name}\n                        </NewDocumentLink>\n                      </Flex>\n                    </List.Item>\n                  );\n                }}\n              />\n            )}\n            {isUser && documentList.length > 0 && (\n              <List\n                bordered\n                dataSource={documentList}\n                renderItem={(item) => {\n                  // TODO:\n                  // const fileThumbnail =\n                  //   documentThumbnails[item.id] || documentThumbnails[item.id];\n                  const fileExtension = getExtension(item.name);\n                  return (\n                    <List.Item>\n                      <Flex gap={'small'} align=\"center\">\n                        <FileIcon id={item.id} name={item.name}></FileIcon>\n\n                        {isImage(fileExtension) ? (\n                          <NewDocumentLink\n                            documentId={item.id}\n                            documentName={item.name}\n                            prefix=\"document\"\n                          >\n                            {item.name}\n                          </NewDocumentLink>\n                        ) : (\n                          <Button\n                            type={'text'}\n                            onClick={handleUserDocumentClick(item.id)}\n                          >\n                            <Text\n                              style={{ maxWidth: '40vw' }}\n                              ellipsis={{ tooltip: item.name }}\n                            >\n                              {item.name}\n                            </Text>\n                          </Button>\n                        )}\n                      </Flex>\n                    </List.Item>\n                  );\n                }}\n              />\n            )}\n          </Flex>\n        </div>\n      </section>\n      {visible && (\n        <IndentedTreeModal\n          visible={visible}\n          hideModal={hideModal}\n          documentId={clickedDocumentId}\n        ></IndentedTreeModal>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MessageItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"chatWrapper\":\"chatWrapper___V2STu\",\"chatContainer\":\"chatContainer___JkSeI\",\"messageContainer\":\"messageContainer___v6SB0\"};","import MessageInput from '@/components/message-input';\nimport MessageItem from '@/components/message-item';\nimport { useClickDrawer } from '@/components/pdf-drawer/hooks';\nimport { MessageType, SharedFrom } from '@/constants/chat';\nimport { useSendButtonDisabled } from '@/pages/chat/hooks';\nimport { Flex, Spin } from 'antd';\nimport React, { forwardRef, useMemo } from 'react';\nimport {\n  useGetSharedChatSearchParams,\n  useSendSharedMessage,\n} from '../shared-hooks';\nimport { buildMessageItemReference } from '../utils';\n\nimport PdfDrawer from '@/components/pdf-drawer';\nimport { useFetchNextConversationSSE } from '@/hooks/chat-hooks';\nimport { useFetchFlowSSE } from '@/hooks/flow-hooks';\nimport i18n from '@/locales/config';\nimport { buildMessageUuidWithRole } from '@/utils/chat';\nimport styles from './index.less';\n\nconst ChatContainer = () => {\n  const {\n    sharedId: conversationId,\n    from,\n    locale,\n    visibleAvatar,\n  } = useGetSharedChatSearchParams();\n  const { visible, hideModal, documentId, selectedChunk, clickDocumentButton } =\n    useClickDrawer();\n\n  const {\n    handlePressEnter,\n    handleInputChange,\n    value,\n    sendLoading,\n    loading,\n    ref,\n    derivedMessages,\n    hasError,\n    stopOutputMessage,\n  } = useSendSharedMessage();\n  const sendDisabled = useSendButtonDisabled(value);\n\n  const useFetchAvatar = useMemo(() => {\n    return from === SharedFrom.Agent\n      ? useFetchFlowSSE\n      : useFetchNextConversationSSE;\n  }, [from]);\n  React.useEffect(() => {\n    if (locale && i18n.language !== locale) {\n      i18n.changeLanguage(locale);\n    }\n  }, [locale, visibleAvatar]);\n  const { data: avatarData } = useFetchAvatar();\n\n  if (!conversationId) {\n    return <div>empty</div>;\n  }\n\n  return (\n    <>\n      <Flex flex={1} className={styles.chatContainer} vertical>\n        <Flex flex={1} vertical className={styles.messageContainer}>\n          <div>\n            <Spin spinning={loading}>\n              {derivedMessages?.map((message, i) => {\n                return (\n                  <MessageItem\n                    visibleAvatar={visibleAvatar}\n                    key={buildMessageUuidWithRole(message)}\n                    avatarDialog={avatarData?.avatar}\n                    item={message}\n                    nickname=\"You\"\n                    reference={buildMessageItemReference(\n                      {\n                        message: derivedMessages,\n                        reference: [],\n                      },\n                      message,\n                    )}\n                    loading={\n                      message.role === MessageType.Assistant &&\n                      sendLoading &&\n                      derivedMessages?.length - 1 === i\n                    }\n                    index={i}\n                    clickDocumentButton={clickDocumentButton}\n                    showLikeButton={false}\n                    showLoudspeaker={false}\n                  ></MessageItem>\n                );\n              })}\n            </Spin>\n          </div>\n          <div ref={ref} />\n        </Flex>\n\n        <MessageInput\n          isShared\n          value={value}\n          disabled={hasError}\n          sendDisabled={sendDisabled}\n          conversationId={conversationId}\n          onInputChange={handleInputChange}\n          onPressEnter={handlePressEnter}\n          sendLoading={sendLoading}\n          uploadMethod=\"external_upload_and_parse\"\n          showUploadIcon={false}\n          stopOutputMessage={stopOutputMessage}\n        ></MessageInput>\n      </Flex>\n      {visible && (\n        <PdfDrawer\n          visible={visible}\n          hideModal={hideModal}\n          documentId={documentId}\n          chunk={selectedChunk}\n        ></PdfDrawer>\n      )}\n    </>\n  );\n};\n\nexport default forwardRef(ChatContainer);\n","import ChatContainer from './large';\n\nimport styles from './index.less';\n\nconst SharedChat = () => {\n  return (\n    <div className={styles.chatWrapper}>\n      <ChatContainer></ChatContainer>\n    </div>\n  );\n};\n\nexport default SharedChat;\n"],"names":["_ref","visible","hideModal","onOk","loading","_Form$useForm","Form","useForm","form","_slicedToArray","handleOk","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ret","wrap","_context","prev","next","validateFields","sent","abrupt","thumbup","feedback","stop","_jsx","Modal","title","open","onCancel","confirmLoading","children","name","labelCol","span","wrapperCol","style","maxWidth","autoComplete","Item","rules","required","message","Input","TextArea","rows","placeholder","prompt","_jsxs","Space","SvgIcon","width","footer","HightLightMarkdown","AssistantGroupButton","messageId","content","audioBinary","showLikeButton","_ref$showLoudspeaker","showLoudspeaker","_useSendFeedback","_useSetModalState","useSetModalState","showModal","_useFeedback","useFeedback","onFeedbackOk","params","_objectSpread","_x","apply","arguments","useSendFeedback","promptVisible","hidePromptModal","showPromptModal","t","useTranslation","_useSpeech","ref","useRef","read","useSpeechWithSse","player","_useState","useState","_useState2","isPlaying","setIsPlaying","initialize","_callee3","_context3","current","SpeechPlayer","audio","onPlaying","onPause","onChunkEnd","mimeType","MediaSource","isTypeSupported","init","pause","_player$current","speech","_callee4","response","_player$current2","_context4","text","feedWithResponse","handleRead","_callee5","_context5","useEffect","units","hexStringToUint8Array","_player$current3","feed","error","console","warn","useSpeech","handleLike","_Fragment","Radio","size","value","CopyToClipboard","onClick","Tooltip","PauseCircleOutlined","SoundOutlined","src","LikeOutlined","DislikeOutlined","PromptIcon","fontSize","FeedbackModal","PromptModal","UserGroupButton","_ref2","sendLoading","removeMessageById","regenerateMessage","_useRemoveMessage","_useDeleteMessage","useDeleteMessage","deleteMessage","onRemoveMessage","_callee2","_context2","useRemoveMessage","disabled","SyncOutlined","spin","DeleteOutlined","Text","Typography","MessageItem","item","reference","_ref$loading","avatar","avatarDialog","_ref$sendLoading","clickDocumentButton","index","_ref$showLikeButton","_ref$visibleAvatar","visibleAvatar","theme","useTheme","isAssistant","role","MessageType","Assistant","isUser","User","_useFetchDocumentInfo","useFetchDocumentInfosByIds","documentList","data","setDocumentIds","_useFetchDocumentThum","useFetchDocumentThumbnailsByIds","documentThumbnails","setIds","clickedDocumentId","setClickedDocumentId","referenceDocumentList","useMemo","_reference$doc_aggs","doc_aggs","handleUserDocumentClick","id","handleRegenerateMessage","_item$doc_ids","ids","doc_ids","length","documentIds","filter","x","className","classNames","styles","messageItem","_defineProperty","messageItemLeft","messageItemRight","messageItemSection","messageItemSectionLeft","messageItemSectionRight","messageItemContent","messageItemContentReverse","Avatar","AssistantIcon","Flex","vertical","gap","flex","audio_binary","messageTextDark","messageText","messageUserText","MarkdownContent","List","bordered","dataSource","renderItem","align","FileIcon","doc_id","doc_name","NewDocumentLink","documentId","documentName","prefix","link","url","fileExtension","getExtension","isImage","Button","type","ellipsis","tooltip","IndentedTreeModal","memo","ChatContainer","_useGetSharedChatSear","useGetSharedChatSearchParams","conversationId","sharedId","from","locale","_useClickDrawer","useClickDrawer","selectedChunk","_useSendSharedMessage","useSendSharedMessage","handlePressEnter","handleInputChange","derivedMessages","hasError","stopOutputMessage","sendDisabled","useSendButtonDisabled","useFetchAvatar","SharedFrom","Agent","useFetchFlowSSE","useFetchNextConversationSSE","React","i18n","language","changeLanguage","avatarData","Spin","spinning","map","i","nickname","buildMessageItemReference","buildMessageUuidWithRole","MessageInput","isShared","onInputChange","onPressEnter","uploadMethod","showUploadIcon","PdfDrawer","chunk","forwardRef"],"sourceRoot":""}