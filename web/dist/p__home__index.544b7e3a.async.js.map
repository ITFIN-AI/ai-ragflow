{"version":3,"file":"p__home__index.544b7e3a.async.js","mappings":"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","sources":["webpack:///./src/constants/file.ts","webpack:///./src/components/icon-font.tsx","webpack:///./src/components/ui/form.tsx","webpack:///./src/components/ui/label.tsx","webpack:///./src/components/ui/segmented.tsx","webpack:///./src/constants/agent.ts","webpack:///./src/hooks/use-agent-request.ts","webpack:///./src/pages/home/application-card.tsx","webpack:///./src/pages/home/agent-list.tsx","webpack:///./src/hooks/use-chat-request.ts","webpack:///./src/pages/home/chat-list.tsx","webpack:///./src/pages/home/applications.tsx","webpack:///./src/pages/home/banner.tsx","webpack:///./src/pages/home/datasets.tsx","webpack:///./src/pages/home/index.tsx","webpack:///./src/services/flow-service.ts","webpack:///./src/services/knowledge-service.ts","webpack:///./src/utils/document-util.ts"],"sourcesContent":["export const FileIconMap = {\n  doc: 'doc',\n  docx: 'doc',\n  pdf: 'pdf',\n  xls: 'excel',\n  xlsx: 'excel',\n  ppt: 'ppt',\n  pptx: 'ppt',\n  jpg: 'jpg',\n  jpeg: 'jpg',\n  png: 'png',\n  txt: 'text',\n  csv: 'pdf',\n  md: 'md',\n};\n","import { FileIconMap } from '@/constants/file';\nimport { cn } from '@/lib/utils';\nimport { getExtension } from '@/utils/document-util';\n\ntype IconFontType = {\n  name: string;\n  className?: string;\n};\n\nexport const IconFont = ({ name, className }: IconFontType) => (\n  <svg className={cn('fill-current size-4', className)}>\n    <use xlinkHref={`#icon-${name}`} />\n  </svg>\n);\n\nexport function FileIcon({\n  name,\n  className,\n  type,\n}: IconFontType & { type?: string }) {\n  const isFolder = type === 'folder';\n  return (\n    <span className={cn('size-4', className)}>\n      <IconFont\n        name={isFolder ? 'file-sub' : FileIconMap[getExtension(name)]}\n      ></IconFont>\n    </span>\n  );\n}\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { Slot } from '@radix-ui/react-slot';\nimport * as React from 'react';\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from 'react-hook-form';\n\nimport { Label } from '@/components/ui/label';\nimport { cn } from '@/lib/utils';\nimport { FormTooltip } from './tooltip';\n\nconst Form = FormProvider;\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue,\n);\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue,\n);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState, formState } = useFormContext();\n\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error('useFormField should be used within <FormField>');\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\nconst InnerFormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn('space-y-2', className)} {...props} />\n    </FormItemContext.Provider>\n  );\n});\n\nInnerFormItem.displayName = 'FormItem';\n\nconst FormItem = React.memo(InnerFormItem);\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & {\n    tooltip?: React.ReactNode;\n  }\n>(({ className, tooltip, ...props }, ref) => {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && 'text-destructive', className, 'flex pb-0.5')}\n      htmlFor={formItemId}\n      {...props}\n    >\n      {props.children}\n      {tooltip && <FormTooltip tooltip={tooltip}></FormTooltip>}\n    </Label>\n  );\n});\nFormLabel.displayName = 'FormLabel';\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } =\n    useFormField();\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n});\nFormControl.displayName = 'FormControl';\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn('text-sm text-muted-foreground', className)}\n      {...props}\n    />\n  );\n});\nFormDescription.displayName = 'FormDescription';\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message) : children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn('text-sm font-medium text-destructive', className)}\n      {...props}\n    >\n      {body}\n    </p>\n  );\n});\nFormMessage.displayName = 'FormMessage';\n\nexport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  useFormField,\n};\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","import { cn } from '@/lib/utils';\nimport * as React from 'react';\nexport declare type SegmentedValue = string | number;\nexport declare type SegmentedRawOption = SegmentedValue;\nexport interface SegmentedLabeledOption {\n  className?: string;\n  disabled?: boolean;\n  label: React.ReactNode;\n  value: SegmentedRawOption;\n  /**\n   * html `title` property for label\n   */\n  title?: string;\n}\ndeclare type SegmentedOptions = (SegmentedRawOption | SegmentedLabeledOption)[];\nexport interface SegmentedProps\n  extends Omit<React.HTMLProps<HTMLDivElement>, 'onChange'> {\n  options: SegmentedOptions;\n  defaultValue?: SegmentedValue;\n  value?: SegmentedValue;\n  onChange?: (value: SegmentedValue) => void;\n  disabled?: boolean;\n  prefixCls?: string;\n  direction?: 'ltr' | 'rtl';\n  motionName?: string;\n}\n\nexport function Segmented({\n  options,\n  value,\n  onChange,\n  className,\n}: SegmentedProps) {\n  return (\n    <div\n      className={cn(\n        'flex items-center rounded-3xl p-1 gap-2 bg-background-header-bar px-5 py-2.5',\n        className,\n      )}\n    >\n      {options.map((option) => {\n        const isObject = typeof option === 'object';\n        const actualValue = isObject ? option.value : option;\n\n        return (\n          <div\n            key={actualValue}\n            className={cn(\n              'inline-flex items-center px-6 py-2 text-base font-normal rounded-3xl cursor-pointer text-text-badge',\n              {\n                'bg-text-title': value === actualValue,\n                'text-text-title-invert': value === actualValue,\n              },\n            )}\n            onClick={() => onChange?.(actualValue)}\n          >\n            {isObject ? option.label : option}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","export enum ProgrammingLanguage {\n  Python = 'python',\n  Javascript = 'javascript',\n}\n\nexport const CodeTemplateStrMap = {\n  [ProgrammingLanguage.Python]: `def main(arg1: str, arg2: str) -> str:\n    return f\"result: {arg1 + arg2}\"\n`,\n  [ProgrammingLanguage.Javascript]: `const axios = require('axios');\nasync function main(args) {\n  try {\n    const response = await axios.get('https://github.com/infiniflow/ragflow');\n    console.log('Body:', response.data);\n  } catch (error) {\n    console.error('Error:', error.message);\n  }\n}\n\nmodule.exports = { main };\n`,\n};\n\nexport enum AgentGlobals {\n  SysQuery = 'sys.query',\n  SysUserId = 'sys.user_id',\n  SysConversationTurns = 'sys.conversation_turns',\n  SysFiles = 'sys.files',\n}\n","import { AgentGlobals } from '@/constants/agent';\nimport { DSL, IFlow, IFlowTemplate } from '@/interfaces/database/flow';\nimport i18n from '@/locales/config';\nimport { BeginId } from '@/pages/agent/constant';\nimport { useGetSharedChatSearchParams } from '@/pages/chat/shared-hooks';\nimport flowService from '@/services/flow-service';\nimport { buildMessageListWithUuid } from '@/utils/chat';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useDebounce } from 'ahooks';\nimport { message } from 'antd';\nimport { get, set } from 'lodash';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'umi';\nimport { v4 as uuid } from 'uuid';\nimport {\n  useGetPaginationWithRouter,\n  useHandleSearchChange,\n} from './logic-hooks';\n\nexport const enum AgentApiAction {\n  FetchAgentList = 'fetchAgentList',\n  UpdateAgentSetting = 'updateAgentSetting',\n  DeleteAgent = 'deleteAgent',\n  FetchAgentDetail = 'fetchAgentDetail',\n  ResetAgent = 'resetAgent',\n  SetAgent = 'setAgent',\n  FetchAgentTemplates = 'fetchAgentTemplates',\n}\n\nexport const EmptyDsl = {\n  graph: {\n    nodes: [\n      {\n        id: BeginId,\n        type: 'beginNode',\n        position: {\n          x: 50,\n          y: 200,\n        },\n        data: {\n          label: 'Begin',\n          name: 'begin',\n        },\n        sourcePosition: 'left',\n        targetPosition: 'right',\n      },\n    ],\n    edges: [],\n  },\n  components: {\n    begin: {\n      obj: {\n        component_name: 'Begin',\n        params: {},\n      },\n      downstream: ['Answer:China'], // other edge target is downstream, edge source is current node id\n      upstream: [], // edge source is upstream, edge target is current node id\n    },\n  },\n  retrieval: [], // reference\n  history: [],\n  path: [],\n  globals: {\n    [AgentGlobals.SysQuery]: '',\n    [AgentGlobals.SysUserId]: '',\n    [AgentGlobals.SysConversationTurns]: 0,\n    [AgentGlobals.SysFiles]: [],\n  },\n};\n\nexport const useFetchAgentTemplates = () => {\n  const { t } = useTranslation();\n\n  const { data } = useQuery<IFlowTemplate[]>({\n    queryKey: [AgentApiAction.FetchAgentTemplates],\n    initialData: [],\n    queryFn: async () => {\n      const { data } = await flowService.listTemplates();\n      if (Array.isArray(data?.data)) {\n        data.data.unshift({\n          id: uuid(),\n          title: t('flow.blank'),\n          description: t('flow.createFromNothing'),\n          dsl: EmptyDsl,\n        });\n      }\n\n      return data.data;\n    },\n  });\n\n  return data;\n};\n\nexport const useFetchAgentListByPage = () => {\n  const { searchString, handleInputChange } = useHandleSearchChange();\n  const { pagination, setPagination } = useGetPaginationWithRouter();\n  const debouncedSearchString = useDebounce(searchString, { wait: 500 });\n\n  const { data, isFetching: loading } = useQuery<{\n    kbs: IFlow[];\n    total: number;\n  }>({\n    queryKey: [\n      AgentApiAction.FetchAgentList,\n      {\n        debouncedSearchString,\n        ...pagination,\n      },\n    ],\n    initialData: { kbs: [], total: 0 },\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await flowService.listCanvasTeam({\n        keywords: debouncedSearchString,\n        page_size: pagination.pageSize,\n        page: pagination.current,\n      });\n\n      return data?.data ?? [];\n    },\n  });\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => {\n      // setPagination({ page: 1 }); // TODO: 这里导致重复请求\n      handleInputChange(e);\n    },\n    [handleInputChange],\n  );\n\n  return {\n    data: data.kbs,\n    loading,\n    searchString,\n    handleInputChange: onInputChange,\n    pagination: { ...pagination, total: data?.total },\n    setPagination,\n  };\n};\n\nexport const useUpdateAgentSetting = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [AgentApiAction.UpdateAgentSetting],\n    mutationFn: async (params: any) => {\n      const ret = await flowService.settingCanvas(params);\n      if (ret?.data?.code === 0) {\n        message.success('success');\n        queryClient.invalidateQueries({\n          queryKey: [AgentApiAction.FetchAgentList],\n        });\n      } else {\n        message.error(ret?.data?.data);\n      }\n      return ret?.data?.code;\n    },\n  });\n\n  return { data, loading, updateAgentSetting: mutateAsync };\n};\n\nexport const useDeleteAgent = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [AgentApiAction.DeleteAgent],\n    mutationFn: async (canvasIds: string[]) => {\n      const { data } = await flowService.removeCanvas({ canvasIds });\n      if (data.code === 0) {\n        queryClient.invalidateQueries({\n          queryKey: [AgentApiAction.FetchAgentList],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteAgent: mutateAsync };\n};\n\nexport const useFetchAgent = (): {\n  data: IFlow;\n  loading: boolean;\n  refetch: () => void;\n} => {\n  const { id } = useParams();\n  const { sharedId } = useGetSharedChatSearchParams();\n\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery({\n    queryKey: [AgentApiAction.FetchAgentDetail],\n    initialData: {} as IFlow,\n    refetchOnReconnect: false,\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await flowService.getCanvas({}, sharedId || id);\n\n      const messageList = buildMessageListWithUuid(\n        get(data, 'data.dsl.messages', []),\n      );\n      set(data, 'data.dsl.messages', messageList);\n\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useResetAgent = () => {\n  const { id } = useParams();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [AgentApiAction.ResetAgent],\n    mutationFn: async () => {\n      const { data } = await flowService.resetCanvas({ id });\n      return data;\n    },\n  });\n\n  return { data, loading, resetAgent: mutateAsync };\n};\n\nexport const useSetAgent = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: [AgentApiAction.SetAgent],\n    mutationFn: async (params: {\n      id?: string;\n      title?: string;\n      dsl?: DSL;\n      avatar?: string;\n    }) => {\n      const { data = {} } = await flowService.setCanvas(params);\n      if (data.code === 0) {\n        message.success(\n          i18n.t(`message.${params?.id ? 'modified' : 'created'}`),\n        );\n        queryClient.invalidateQueries({\n          queryKey: [AgentApiAction.FetchAgentList],\n        });\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, setAgent: mutateAsync };\n};\n","import { MoreButton } from '@/components/more-button';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { formatDate } from '@/utils/date';\nimport { ChevronRight } from 'lucide-react';\n\ntype ApplicationCardProps = {\n  app: {\n    avatar?: string;\n    title: string;\n    update_time: number;\n  };\n};\n\nexport function ApplicationCard({ app }: ApplicationCardProps) {\n  return (\n    <Card className=\"w-[264px]\">\n      <CardContent className=\"p-2.5  group flex justify-between\">\n        <div className=\"flex items-center gap-2.5\">\n          <Avatar className=\"size-14 rounded-lg\">\n            <AvatarImage src={app.avatar === null ? '' : app.avatar} />\n            <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n          </Avatar>\n          <div className=\"flex-1\">\n            <h3 className=\"text-sm font-normal line-clamp-1 mb-1\">\n              {app.title}\n            </h3>\n            <p className=\"text-xs font-normal text-text-sub-title\">\n              {formatDate(app.update_time)}\n            </p>\n          </div>\n        </div>\n\n        <MoreButton className=\"\"></MoreButton>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport type SeeAllAppCardProps = {\n  click(): void;\n};\n\nexport function SeeAllAppCard({ click }: SeeAllAppCardProps) {\n  return (\n    <Card className=\"w-64 min-h-[76px]\" onClick={click}>\n      <CardContent className=\"p-2.5 pt-1 w-full h-full flex items-center justify-center gap-1.5 text-text-sub-title\">\n        See All <ChevronRight className=\"size-4\" />\n      </CardContent>\n    </Card>\n  );\n}\n","import { useFetchAgentListByPage } from '@/hooks/use-agent-request';\nimport { ApplicationCard } from './application-card';\n\nexport function Agents() {\n  const { data } = useFetchAgentListByPage();\n\n  return data\n    .slice(0, 10)\n    .map((x) => <ApplicationCard key={x.id} app={x}></ApplicationCard>);\n}\n","import { ChatSearchParams } from '@/constants/chat';\nimport { IDialog } from '@/interfaces/database/chat';\nimport chatService from '@/services/chat-service';\nimport { useQuery } from '@tanstack/react-query';\nimport { useCallback, useMemo } from 'react';\nimport { history, useSearchParams } from 'umi';\n\nexport const useGetChatSearchParams = () => {\n  const [currentQueryParameters] = useSearchParams();\n\n  return {\n    dialogId: currentQueryParameters.get(ChatSearchParams.DialogId) || '',\n    conversationId:\n      currentQueryParameters.get(ChatSearchParams.ConversationId) || '',\n    isNew: currentQueryParameters.get(ChatSearchParams.isNew) || '',\n  };\n};\n\nexport const useClickDialogCard = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_, setSearchParams] = useSearchParams();\n\n  const newQueryParameters: URLSearchParams = useMemo(() => {\n    return new URLSearchParams();\n  }, []);\n\n  const handleClickDialog = useCallback(\n    (dialogId: string) => {\n      newQueryParameters.set(ChatSearchParams.DialogId, dialogId);\n      // newQueryParameters.set(\n      //   ChatSearchParams.ConversationId,\n      //   EmptyConversationId,\n      // );\n      setSearchParams(newQueryParameters);\n    },\n    [newQueryParameters, setSearchParams],\n  );\n\n  return { handleClickDialog };\n};\n\nexport const useFetchDialogList = (pureFetch = false) => {\n  const { handleClickDialog } = useClickDialogCard();\n  const { dialogId } = useGetChatSearchParams();\n\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<IDialog[]>({\n    queryKey: ['fetchDialogList'],\n    initialData: [],\n    gcTime: 0,\n    refetchOnWindowFocus: false,\n    queryFn: async (...params) => {\n      console.log('🚀 ~ queryFn: ~ params:', params);\n      const { data } = await chatService.listDialog();\n\n      if (data.code === 0) {\n        const list: IDialog[] = data.data;\n        if (!pureFetch) {\n          if (list.length > 0) {\n            if (list.every((x) => x.id !== dialogId)) {\n              handleClickDialog(data.data[0].id);\n            }\n          } else {\n            history.push('/chat');\n          }\n        }\n      }\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n","import { useFetchDialogList } from '@/hooks/use-chat-request';\nimport { ApplicationCard } from './application-card';\n\nexport function ChatList() {\n  const { data } = useFetchDialogList(true);\n\n  return data\n    .slice(0, 10)\n    .map((x) => (\n      <ApplicationCard\n        key={x.id}\n        app={{ avatar: x.icon, title: x.name, update_time: x.update_time }}\n      ></ApplicationCard>\n    ));\n}\n","import { IconFont } from '@/components/icon-font';\nimport { Segmented, SegmentedValue } from '@/components/ui/segmented';\nimport { Routes } from '@/routes';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'umi';\nimport { Agents } from './agent-list';\nimport { SeeAllAppCard } from './application-card';\nimport { ChatList } from './chat-list';\n\nconst IconMap = {\n  [Routes.Chats]: 'chat',\n  [Routes.Searches]: 'search',\n  [Routes.Agents]: 'agent',\n};\n\nexport function Applications() {\n  const [val, setVal] = useState(Routes.Chats);\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const handleNavigate = useCallback(() => {\n    navigate(val);\n  }, [navigate, val]);\n\n  const options = useMemo(\n    () => [\n      { value: Routes.Chats, label: t('header.chat') },\n      { value: Routes.Searches, label: t('header.search') },\n      { value: Routes.Agents, label: t('header.flow') },\n    ],\n    [t],\n  );\n\n  const handleChange = (path: SegmentedValue) => {\n    setVal(path as string);\n  };\n\n  return (\n    <section className=\"mt-12\">\n      <div className=\"flex justify-between items-center mb-5\">\n        <h2 className=\"text-2xl font-bold flex gap-2.5\">\n          <IconFont\n            name={IconMap[val as keyof typeof IconMap]}\n            className=\"size-8\"\n          ></IconFont>\n          {options.find((x) => x.value === val)?.label}\n        </h2>\n        <Segmented\n          options={options}\n          value={val}\n          onChange={handleChange}\n          className=\"bg-transparent\"\n        ></Segmented>\n      </div>\n      <div className=\"flex flex-wrap gap-4\">\n        {val === Routes.Agents && <Agents></Agents>}\n        {val === Routes.Chats && <ChatList></ChatList>}\n        {<SeeAllAppCard click={handleNavigate}></SeeAllAppCard>}\n      </div>\n    </section>\n  );\n}\n","import { Card, CardContent } from '@/components/ui/card';\nimport { ArrowRight, X } from 'lucide-react';\nimport { useTranslation } from 'react-i18next';\n\nfunction BannerCard() {\n  return (\n    <Card className=\"w-auto border-none h-3/4\">\n      <CardContent className=\"p-4\">\n        <span className=\"inline-block bg-backgroundCoreWeak rounded-sm px-1 text-xs\">\n          System\n        </span>\n        <div className=\"flex mt-1 gap-4\">\n          <span className=\"text-lg truncate\">Setting up your LLM</span>\n          <ArrowRight />\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function Banner() {\n  return (\n    <section className=\"bg-[url('@/assets/banner.png')] bg-cover h-28 rounded-2xl  my-8 flex gap-8 justify-between\">\n      <div className=\"h-full text-3xl font-bold items-center inline-flex ml-6\">\n        Welcome to RAGFlow\n      </div>\n      <div className=\"flex justify-between items-center gap-4 mr-5\">\n        <BannerCard></BannerCard>\n        <BannerCard></BannerCard>\n        <BannerCard></BannerCard>\n        <button\n          type=\"button\"\n          className=\"relative p-1 hover:bg-white/10 rounded-full transition-colors\"\n        >\n          <X className=\"w-6 h-6 text-white\" />\n        </button>\n      </div>\n    </section>\n  );\n}\n\nexport function NextBanner() {\n  const { t } = useTranslation();\n  return (\n    <section className=\"text-5xl pt-10 pb-14 font-bold\">\n      <span className=\"text-text-title\">{t('header.welcome')}</span>\n      <span className=\"pl-3 text-transparent bg-clip-text  bg-gradient-to-l from-[#40EBE3] to-[#4A51FF]\">\n        RAGFlow\n      </span>\n    </section>\n  );\n}\n","import { IconFont } from '@/components/icon-font';\nimport { RenameDialog } from '@/components/rename-dialog';\nimport { CardSkeleton } from '@/components/ui/skeleton';\nimport { useFetchNextKnowledgeListByPage } from '@/hooks/use-knowledge-request';\nimport { useTranslation } from 'react-i18next';\nimport { DatasetCard, SeeAllCard } from '../datasets/dataset-card';\nimport { useRenameDataset } from '../datasets/use-rename-dataset';\n\nexport function Datasets() {\n  const { t } = useTranslation();\n  const { kbs, loading } = useFetchNextKnowledgeListByPage();\n  const {\n    datasetRenameLoading,\n    initialDatasetName,\n    onDatasetRenameOk,\n    datasetRenameVisible,\n    hideDatasetRenameModal,\n    showDatasetRenameModal,\n  } = useRenameDataset();\n\n  return (\n    <section>\n      <h2 className=\"text-2xl font-bold mb-6 flex gap-2.5 items-center\">\n        <IconFont name=\"data\" className=\"size-8\"></IconFont>\n        {t('header.knowledgeBase')}\n      </h2>\n      <div className=\"flex gap-6\">\n        {loading ? (\n          <div className=\"flex-1\">\n            <CardSkeleton />\n          </div>\n        ) : (\n          <div className=\"flex gap-4 flex-1\">\n            {kbs.slice(0, 6).map((dataset) => (\n              <DatasetCard\n                key={dataset.id}\n                dataset={dataset}\n                showDatasetRenameModal={showDatasetRenameModal}\n              ></DatasetCard>\n            ))}\n          </div>\n        )}\n        <SeeAllCard></SeeAllCard>\n      </div>\n      {datasetRenameVisible && (\n        <RenameDialog\n          hideModal={hideDatasetRenameModal}\n          onOk={onDatasetRenameOk}\n          initialName={initialDatasetName}\n          loading={datasetRenameLoading}\n        ></RenameDialog>\n      )}\n    </section>\n  );\n}\n","import { Applications } from './applications';\nimport { NextBanner } from './banner';\nimport { Datasets } from './datasets';\n\nconst Home = () => {\n  return (\n    <div className=\"mx-8\">\n      <section>\n        <NextBanner></NextBanner>\n        <Datasets></Datasets>\n        <Applications></Applications>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","import api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request from '@/utils/request';\n\nconst {\n  getCanvas,\n  getCanvasSSE,\n  setCanvas,\n  getListVersion,\n  getVersion,\n  listCanvas,\n  resetCanvas,\n  removeCanvas,\n  runCanvas,\n  listTemplates,\n  testDbConnect,\n  getInputElements,\n  debug,\n  listCanvasTeam,\n  settingCanvas,\n} = api;\n\nconst methods = {\n  getCanvas: {\n    url: getCanvas,\n    method: 'get',\n  },\n  getCanvasSSE: {\n    url: getCanvasSSE,\n    method: 'get',\n  },\n  setCanvas: {\n    url: setCanvas,\n    method: 'post',\n  },\n  getListVersion: {\n    url: getListVersion,\n    method: 'get',\n  },\n  getVersion: {\n    url: getVersion,\n    method: 'get',\n  },\n  listCanvas: {\n    url: listCanvas,\n    method: 'get',\n  },\n  resetCanvas: {\n    url: resetCanvas,\n    method: 'post',\n  },\n  removeCanvas: {\n    url: removeCanvas,\n    method: 'post',\n  },\n  runCanvas: {\n    url: runCanvas,\n    method: 'post',\n  },\n  listTemplates: {\n    url: listTemplates,\n    method: 'get',\n  },\n  testDbConnect: {\n    url: testDbConnect,\n    method: 'post',\n  },\n  getInputElements: {\n    url: getInputElements,\n    method: 'get',\n  },\n  debugSingle: {\n    url: debug,\n    method: 'post',\n  },\n  listCanvasTeam: {\n    url: listCanvasTeam,\n    method: 'get',\n  },\n  settingCanvas: {\n    url: settingCanvas,\n    method: 'post',\n  },\n} as const;\n\nconst flowService = registerServer<keyof typeof methods>(methods, request);\n\nexport default flowService;\n","import { IRenameTag } from '@/interfaces/database/knowledge';\nimport {\n  IFetchDocumentListRequestBody,\n  IFetchKnowledgeListRequestBody,\n  IFetchKnowledgeListRequestParams,\n} from '@/interfaces/request/knowledge';\nimport api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request, { post } from '@/utils/request';\n\nconst {\n  create_kb,\n  update_kb,\n  rm_kb,\n  get_kb_detail,\n  kb_list,\n  get_document_list,\n  document_change_status,\n  document_rm,\n  document_delete,\n  document_create,\n  document_change_parser,\n  document_thumbnails,\n  chunk_list,\n  create_chunk,\n  set_chunk,\n  get_chunk,\n  switch_chunk,\n  rm_chunk,\n  retrieval_test,\n  document_rename,\n  document_run,\n  document_upload,\n  web_crawl,\n  knowledge_graph,\n  document_infos,\n  upload_and_parse,\n  listTagByKnowledgeIds,\n  setMeta,\n} = api;\n\nconst methods = {\n  // 知识库管理\n  createKb: {\n    url: create_kb,\n    method: 'post',\n  },\n  updateKb: {\n    url: update_kb,\n    method: 'post',\n  },\n  rmKb: {\n    url: rm_kb,\n    method: 'post',\n  },\n  get_kb_detail: {\n    url: get_kb_detail,\n    method: 'get',\n  },\n  getList: {\n    url: kb_list,\n    method: 'post',\n  },\n  // document manager\n  get_document_list: {\n    url: get_document_list,\n    method: 'get',\n  },\n  document_change_status: {\n    url: document_change_status,\n    method: 'post',\n  },\n  document_rm: {\n    url: document_rm,\n    method: 'post',\n  },\n  document_rename: {\n    url: document_rename,\n    method: 'post',\n  },\n  document_create: {\n    url: document_create,\n    method: 'post',\n  },\n  document_run: {\n    url: document_run,\n    method: 'post',\n  },\n  document_change_parser: {\n    url: document_change_parser,\n    method: 'post',\n  },\n  document_thumbnails: {\n    url: document_thumbnails,\n    method: 'get',\n  },\n  document_upload: {\n    url: document_upload,\n    method: 'post',\n  },\n  web_crawl: {\n    url: web_crawl,\n    method: 'post',\n  },\n  document_infos: {\n    url: document_infos,\n    method: 'post',\n  },\n  setMeta: {\n    url: setMeta,\n    method: 'post',\n  },\n  // chunk管理\n  chunk_list: {\n    url: chunk_list,\n    method: 'post',\n  },\n  create_chunk: {\n    url: create_chunk,\n    method: 'post',\n  },\n  set_chunk: {\n    url: set_chunk,\n    method: 'post',\n  },\n  get_chunk: {\n    url: get_chunk,\n    method: 'get',\n  },\n  switch_chunk: {\n    url: switch_chunk,\n    method: 'post',\n  },\n  rm_chunk: {\n    url: rm_chunk,\n    method: 'post',\n  },\n  retrieval_test: {\n    url: retrieval_test,\n    method: 'post',\n  },\n  knowledge_graph: {\n    url: knowledge_graph,\n    method: 'get',\n  },\n  document_delete: {\n    url: document_delete,\n    method: 'delete',\n  },\n  upload_and_parse: {\n    url: upload_and_parse,\n    method: 'post',\n  },\n  listTagByKnowledgeIds: {\n    url: listTagByKnowledgeIds,\n    method: 'get',\n  },\n};\n\nconst kbService = registerServer<keyof typeof methods>(methods, request);\n\nexport const listTag = (knowledgeId: string) =>\n  request.get(api.listTag(knowledgeId));\n\nexport const removeTag = (knowledgeId: string, tags: string[]) =>\n  post(api.removeTag(knowledgeId), { tags });\n\nexport const renameTag = (\n  knowledgeId: string,\n  { fromTag, toTag }: IRenameTag,\n) => post(api.renameTag(knowledgeId), { fromTag, toTag });\n\nexport function getKnowledgeGraph(knowledgeId: string) {\n  return request.get(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport function deleteKnowledgeGraph(knowledgeId: string) {\n  return request.delete(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport const listDataset = (\n  params?: IFetchKnowledgeListRequestParams,\n  body?: IFetchKnowledgeListRequestBody,\n) => request.post(api.kb_list, { data: body || {}, params });\n\nexport const listDocument = (\n  params?: IFetchKnowledgeListRequestParams,\n  body?: IFetchDocumentListRequestBody,\n) => request.post(api.get_document_list, { data: body || {}, params });\n\nexport default kbService;\n","import { Images, SupportedPreviewDocumentTypes } from '@/constants/common';\nimport { IReferenceChunk } from '@/interfaces/database/chat';\nimport { IChunk } from '@/interfaces/database/knowledge';\nimport { UploadFile } from 'antd';\nimport { get } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nexport const buildChunkHighlights = (\n  selectedChunk: IChunk | IReferenceChunk,\n  size: { width: number; height: number },\n) => {\n  return Array.isArray(selectedChunk?.positions) &&\n    selectedChunk.positions.every((x) => Array.isArray(x))\n    ? selectedChunk?.positions?.map((x) => {\n        const boundingRect = {\n          width: size.width,\n          height: size.height,\n          x1: x[1],\n          x2: x[2],\n          y1: x[3],\n          y2: x[4],\n        };\n        return {\n          id: uuid(),\n          comment: {\n            text: '',\n            emoji: '',\n          },\n          content: {\n            text:\n              get(selectedChunk, 'content_with_weight') ||\n              get(selectedChunk, 'content', ''),\n          },\n          position: {\n            boundingRect: boundingRect,\n            rects: [boundingRect],\n            pageNumber: x[0],\n          },\n        };\n      })\n    : [];\n};\n\nexport const isFileUploadDone = (file: UploadFile) => file.status === 'done';\n\nexport const getExtension = (name: string) =>\n  name?.slice(name.lastIndexOf('.') + 1).toLowerCase() ?? '';\n\nexport const isPdf = (name: string) => {\n  return getExtension(name) === 'pdf';\n};\n\nexport const getUnSupportedFilesCount = (message: string) => {\n  return message.split('\\n').length;\n};\n\nexport const isSupportedPreviewDocumentType = (fileExtension: string) => {\n  return SupportedPreviewDocumentTypes.includes(fileExtension);\n};\n\nexport const isImage = (image: string) => {\n  return [...Images, 'svg'].some((x) => x === image);\n};\n"],"names":["FileIconMap","doc","docx","pdf","xls","xlsx","ppt","pptx","jpg","jpeg","png","txt","csv","md","IconFont","_ref","name","className","_jsx","cn","children","xlinkHref","concat","FileIcon","_ref2","isFolder","type","getExtension","_excluded","_excluded2","_excluded3","_excluded4","Form","FormProvider","FormItemContext","React","FormFieldContext","FormField","props","Object","assign","_objectDestructuringEmpty","Provider","value","Controller","_objectSpread","useFormField","fieldContext","itemContext","_useFormContext","useFormContext","getFieldState","formState","fieldState","Error","id","formItemId","formDescriptionId","formMessageId","InnerFormItem","ref","_objectWithoutProperties","displayName","FormItem","FormLabel","_ref3","tooltip","_useFormField","error","_jsxs","Label","htmlFor","FormTooltip","FormControl","_ref4","_useFormField2","Slot","FormDescription","_ref5","FormMessage","_ref6","_useFormField4","body","String","message","labelVariants","cva","LabelPrimitive","Segmented","options","onChange","map","option","isObject","_typeof","actualValue","onClick","label","ProgrammingLanguage","CodeTemplateStrMap","_defineProperty","Python","Javascript","AgentGlobals","AgentApiAction","EmptyDsl","graph","nodes","BeginId","position","x","y","data","sourcePosition","targetPosition","edges","components","begin","obj","component_name","params","downstream","upstream","retrieval","history","path","globals","SysQuery","SysUserId","SysConversationTurns","SysFiles","useFetchAgentTemplates","_queryFn","t","useTranslation","_useQuery","useQuery","queryKey","initialData","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$flowService$li","wrap","_context","prev","next","flowService","listTemplates","sent","Array","isArray","unshift","uuid","title","description","dsl","abrupt","stop","apply","arguments","useFetchAgentListByPage","_queryFn2","_useHandleSearchChang","useHandleSearchChange","searchString","handleInputChange","_useGetPaginationWith","useGetPaginationWithRouter","pagination","setPagination","debouncedSearchString","useDebounce","wait","_useQuery2","kbs","total","gcTime","_callee2","_data$data","_yield$flowService$li2","_context2","listCanvasTeam","keywords","page_size","pageSize","page","current","loading","isFetching","onInputChange","useCallback","e","useUpdateAgentSetting","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","_callee3","_ret$data","_ret$data3","ret","_ret$data2","_context3","settingCanvas","code","success","invalidateQueries","_x","isPending","updateAgentSetting","mutateAsync","useDeleteAgent","_mutationFn2","_useMutation2","_callee4","canvasIds","_data$data2","_yield$flowService$re","_context4","removeCanvas","_x2","deleteAgent","useFetchAgent","_queryFn3","useParams","sharedId","useGetSharedChatSearchParams","_useQuery3","refetchOnReconnect","refetchOnMount","refetchOnWindowFocus","_callee5","_data$data3","_yield$flowService$ge","messageList","_context5","getCanvas","buildMessageListWithUuid","get","set","refetch","useResetAgent","_mutationFn3","_useMutation3","_callee6","_yield$flowService$re2","_context6","resetCanvas","resetAgent","useSetAgent","_mutationFn4","_useMutation4","_callee7","_yield$flowService$se","_yield$flowService$se2","_context7","setCanvas","i18n","_x3","setAgent","ApplicationCard","app","Card","CardContent","Avatar","AvatarImage","src","avatar","AvatarFallback","formatDate","update_time","MoreButton","SeeAllAppCard","click","ChevronRight","Agents","slice","useFetchDialogList","_useSearchParams3","_useSearchParams4","setSearchParams","newQueryParameters","_useSearchParams","currentQueryParameters","pureFetch","length","undefined","_useClickDialogCard","useSearchParams","_slicedToArray","useMemo","URLSearchParams","handleClickDialog","dialogId","ChatSearchParams","DialogId","conversationId","ConversationId","isNew","_len","_key","_yield$chatService$li","list","_args","console","log","chatService","listDialog","every","push","ChatList","icon","IconMap","Routes","Chats","Searches","Applications","_options$find","_useState","useState","_useState2","val","setVal","navigate","useNavigate","handleNavigate","find","NextBanner","Datasets","_useFetchNextKnowledg","useFetchNextKnowledgeListByPage","_useRenameDataset","useRenameDataset","datasetRenameLoading","initialDatasetName","onDatasetRenameOk","datasetRenameVisible","hideDatasetRenameModal","showDatasetRenameModal","CardSkeleton","dataset","DatasetCard","SeeAllCard","RenameDialog","hideModal","onOk","initialName","methods","url","api","method","getCanvasSSE","getListVersion","getVersion","listCanvas","runCanvas","testDbConnect","getInputElements","debugSingle","debug","registerServer","request","create_kb","update_kb","rm_kb","get_kb_detail","kb_list","get_document_list","document_change_status","document_rm","document_delete","document_create","document_change_parser","document_thumbnails","chunk_list","create_chunk","set_chunk","get_chunk","switch_chunk","rm_chunk","retrieval_test","document_rename","document_run","document_upload","web_crawl","knowledge_graph","document_infos","upload_and_parse","listTagByKnowledgeIds","createKb","updateKb","rmKb","getList","setMeta","kbService","listTag","knowledgeId","removeTag","tags","post","renameTag","fromTag","toTag","getKnowledgeGraph","deleteKnowledgeGraph","listDataset","listDocument","buildChunkHighlights","selectedChunk","size","_selectedChunk$positi","positions","boundingRect","width","height","x1","x2","y1","y2","comment","text","emoji","content","rects","pageNumber","_name$slice$toLowerCa","lastIndexOf","toLowerCase","getUnSupportedFilesCount","split","isSupportedPreviewDocumentType","fileExtension","SupportedPreviewDocumentTypes","includes","isImage","image","_toConsumableArray","Images","some"],"sourceRoot":""}